<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux-基础知识</title>
      <link href="2020/11/25/Linux-%E5%9F%BA%E7%A1%80/"/>
      <url>2020/11/25/Linux-%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="Linux基础"><a href="#Linux基础" class="headerlink" title="Linux基础"></a>Linux基础</h1><h2 id="虚拟机的网络连接三种形式的说明"><a href="#虚拟机的网络连接三种形式的说明" class="headerlink" title="虚拟机的网络连接三种形式的说明"></a>虚拟机的网络连接三种形式的说明</h2><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="网络链接方式" class="fancybox"><img alt="网络链接方式" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/1605599113091.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="网络链接方式"></a></p><h2 id="Linux目录结构"><a href="#Linux目录结构" class="headerlink" title="Linux目录结构"></a>Linux目录结构</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>Linux的文件系统是采用级层式的树状目录结构，在此结构中的最上层是根目录“/”，然后在此目录下再创建其他的目录。</p><p>Linux世界中，一切皆文件</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="Linux目录" class="fancybox"><img alt="Linux目录" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/cover.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="Linux目录"></a></p><h3 id="具体结构"><a href="#具体结构" class="headerlink" title="具体结构"></a>具体结构</h3><ul><li>/bin [重点] (/usr/bin 、 /usr/local/bin) </li></ul><blockquote><p> 是Binary的缩写, 这个目录存放着最经常使用的命令 </p></blockquote><ul><li>/sbin (/usr/sbin 、 /usr/local/sbin) </li></ul><blockquote><p>s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</p></blockquote><ul><li>/home [重点] </li></ul><blockquote><p>存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般</p><p>该目录名是以用户的账号命名的。  </p></blockquote><ul><li>/root [重点] </li></ul><blockquote><p>该目录为系统管理员，也称作超级权限者的用户主目录。 </p></blockquote><ul><li>/lib </li></ul><blockquote><p>系统开机所需要最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。 </p></blockquote><ul><li>/lost+found  </li></ul><blockquote><p> 这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。 </p></blockquote><ul><li>/etc [重点]  </li></ul><blockquote><p>所有的系统管理所需要的配置文件和子目录 my.conf  </p></blockquote><ul><li>/usr [重点] </li></ul><blockquote><p>这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与 windows下的program files目录。 </p></blockquote><ul><li>/proc  </li></ul><blockquote><p>这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息。  </p></blockquote><ul><li>/boot [重点]  </li></ul><blockquote><p>存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件  </p></blockquote><ul><li>/srv  </li></ul><blockquote><p>service缩写，该目录存放一些服务启动之后需要提取的数据。  </p></blockquote><ul><li>/sys  </li></ul><blockquote><p>这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs  </p></blockquote><ul><li>/tmp  </li></ul><blockquote><p>这个目录是用来存放一些临时文件的。  </p></blockquote><ul><li>/dev   </li></ul><blockquote><p>类似于windows的设备管理器，把所有的硬件用文件的形式存储。 </p></blockquote><ul><li>/media [重点]  </li></ul><blockquote><p>linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux 会把识别的设备挂载到这个目录下。  </p></blockquote><ul><li>/mnt [重点]  </li></ul><blockquote><p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂 载在/mnt/上，然后进入该目录就可以查看里的内容了。</p></blockquote><ul><li>/opt   </li></ul><blockquote><p>这是给主机额外安装软件所摆放的目录。如安装ORACLE数据库就可放到该目录下。 默认为空。  </p></blockquote><ul><li>/usr/local [重点]  </li></ul><blockquote><p>这是另一个给主机额外安装软件所安装的目录。一般是通过编译源码方式安装的程序。</p></blockquote><ul><li>/var [重点] </li></ul><blockquote><p>这个目录中存放着在不断扩充着的东西，习惯将经常被修改的目录放在这个目录下。 包括各种日志文件。 </p></blockquote><ul><li>/selinux [security-enhanced linux] 360 </li></ul><blockquote><p>SELinux是一种安全子系统,它能控制程序只能访问特定文件。</p></blockquote><h2 id="Linux基础操作"><a href="#Linux基础操作" class="headerlink" title="Linux基础操作"></a>Linux基础操作</h2><h3 id="vi和vim常用快捷键"><a href="#vi和vim常用快捷键" class="headerlink" title="vi和vim常用快捷键"></a>vi和vim常用快捷键</h3><ol><li><p>拷贝当前行 yy , 拷贝当前行向下的5行 5yy，并粘贴。 </p></li><li><p>删除当前行 dd , 删除当前行向下的5行 5dd </p></li><li><p>在文件中查找某个单词 [命令行下 /关键字 ， 回车 查找 , 输入 n 就是查找下一个 ] </p></li><li><p>设置文件的行号，取消文件的行号.[命令行下 : set nu 和 :set nonu] </p></li><li><p>编辑 /etc/profile 文件，使用快捷键到底文档的最末行[G]和最首行[gg] </p></li><li><p>在一个文件中输入 “hello” ,然后又撤销这个动作 u </p></li><li><p>编辑 /etc/profile 文件，并将光标移动到 20行 shift+g </p></li><li><p>[更多vim快捷键]: <a href="https://www.linuxprobe.com/vim-quick-lookup.html" target="_blank" rel="noopener">https://www.linuxprobe.com/vim-quick-lookup.html</a>    “快捷键”</p></li></ol><h3 id="开机、重启"><a href="#开机、重启" class="headerlink" title="开机、重启"></a>开机、重启</h3><h3 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h3><h4 id="关机指令"><a href="#关机指令" class="headerlink" title="关机指令"></a>关机指令</h4><ul><li><p><strong>shutdown –h now</strong>             立该进行关机 </p></li><li><p><strong>shudown -h 1</strong>                     “hello, 1 分钟后会关机了” </p></li><li><p><strong>shutdown –r now</strong>               现在重新启动计算机 </p></li><li><p><strong>halt</strong>                                       关机，作用和上面一样. </p></li><li><p><strong>reboot</strong>                                  现在重新启动计算机 </p></li><li><p><strong>sync</strong>                                      把内存的数据同步到磁盘. </p></li></ul><p><strong>不管是重启系统还是关闭系统，首先要运行sync命令，把内存中的数据写到磁盘中</strong> </p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li><p>登录时尽量少用root帐号登录，因为它是系统管理员，最大的权限，避免操作失误。可以利用普通用户登录，登录后再用”su - 用户名’命令来切换成系统管理员身份. </p></li><li><p>在提示符下输入 logout 即可注销用户</p></li></ul><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><ul><li><p><strong>useradd  [username]</strong>            添加用户</p><p>1) 当创建用户成功后，会自动的创建和用户同名的家目录 </p><p>2) 也可以通过 useradd -d 指定目录 新的用户名，给新创建的用户指定家目录</p></li><li><p><strong>passwd [username]</strong>  修改密码</p></li><li><p><strong>userdel [username]</strong>  删除用户</p><p>1）删除用户但是保存家目录</p><p>2）userdel -r  [username]   删除用户的同时删除家目录</p></li><li><p><strong>id  [username]</strong>    查询用户信息</p></li><li><p><strong>su - [username]</strong>   切换用户（高权限用户切换到低权限用户不需要密码）</p></li><li><p><strong>exit</strong>  返回到原来的用户</p></li><li><p><strong>who am i</strong>     当前用户</p></li></ul><h3 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h3><h4 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h4><ul><li><strong>groupadd  [groupname]</strong>  添加用户组</li><li><strong>groupdel  [groupname]</strong>  删除组</li><li><strong>useradd -g [groupname] [username]</strong>   增加用户是直接指定组</li><li><strong>usermod -g [groupname] [username]</strong>  修改用户组</li></ul><h4 id="用户和组相关文件"><a href="#用户和组相关文件" class="headerlink" title="用户和组相关文件"></a>用户和组相关文件</h4><ul><li><p><strong>/etc/passwd 文件</strong> </p><p>用户（user）的配置文件，记录用户的各种信息 </p><p>每行的含义：用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell</p><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="/etc/passwd" class="fancybox"><img alt="/etc/passwd" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/passwd.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="/etc/passwd"></a></p></li><li><p><strong>/etc/shadow文件</strong></p><p>口令的配置文件 </p><p>每行的含义：登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志</p></li><li><p><strong>/etc/group 文件</strong></p><p>组(group)的配置文件，记录Linux包含的组的信息 </p><p>每行含义：组名:口令:组标识号:组内用户列表</p></li></ul><h3 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h3><h4 id="运行级别说明："><a href="#运行级别说明：" class="headerlink" title="运行级别说明："></a>运行级别说明：</h4><p>0 ：关机 </p><p>1 ：单用户【找回丢失密码】 </p><p>2：多用户状态没有网络服务 </p><p><strong>3</strong>：多用户状态有网络服务 </p><p>4：系统未使用保留给用户 </p><p>5：图形界面 </p><p>6：系统重启 </p><p><strong>常用运行级别是3和5 ，要修改默认的运行级别可改文件</strong></p><p><strong>配置文件     /etc/inittab</strong></p><h4 id="切换指定运行级别"><a href="#切换指定运行级别" class="headerlink" title="切换指定运行级别"></a>切换指定运行级别</h4><ul><li><strong>init  [0123456]</strong></li></ul><h4 id="centos7中运行级别"><a href="#centos7中运行级别" class="headerlink" title="centos7中运行级别"></a>centos7中运行级别</h4><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="centos7运行级别" class="fancybox"><img alt="centos7运行级别" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/centos7.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="centos7运行级别"></a></p><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="centos7" class="fancybox"><img alt="centos7" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/yunxingjibie.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="centos7"></a></p><h5 id="如何找回丢失的root密码"><a href="#如何找回丢失的root密码" class="headerlink" title="如何找回丢失的root密码"></a>如何找回丢失的root密码</h5><p>思路：进入到单用户模式，然后修改root密。因为进入单用户模式，root不需要密码。</p><h3 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h3><ul><li><strong>man [opt]</strong></li><li><strong>help [opt]</strong></li></ul><h3 id="文件目录类指令"><a href="#文件目录类指令" class="headerlink" title="文件目录类指令"></a>文件目录类指令</h3><ul><li><p><strong>pwd</strong>          功能描述：显示当前工作目录的绝对路径</p></li><li><p><strong>mkdir</strong>       创建目录</p><p>​      -p ：    创建多级目录 </p></li><li><p><strong>rmidr</strong>         指令删除空目录</p></li><li><p><strong>touch</strong>       创建文件</p></li><li><p><strong>cp</strong> [-r] [originFilepath] [cptargetFilepath]     复制文件</p><p> \cp    强制覆盖</p></li><li><p><strong>mv</strong>                     移动文件与目录或重命名 </p><p>基本语法 </p><p>mv oldNameFile newNameFile (功能描述：重命名) </p><p>mv /temp/movefile /targetFolder (功能描述：移动文件) </p></li><li><p><strong>cat</strong> 查看文件内容 </p><p>-n ：显示行号 </p><p>cat 只能浏览文件，而不能修改文件，为了浏览方便，一般会带上 管道命令 | more</p><table><thead><tr><th>操作</th><th>功能说明</th></tr></thead><tbody><tr><td>空白键 (space)</td><td>代表向下翻一页；</td></tr><tr><td><strong>Enter</strong></td><td>代表向下翻『一行』；</td></tr><tr><td>q</td><td>代表立刻离开 more ，不再显示该文件内容。</td></tr><tr><td>Ctrl+F</td><td>向下滚动一屏</td></tr><tr><td>Ctrl+B</td><td>返回上一屏</td></tr><tr><td>=</td><td>输出当前行的行号</td></tr><tr><td>:f</td><td>输出文件名和当前行的行号</td></tr></tbody></table></li></ul><ul><li><p><strong>less</strong>                                 less指令用来分屏查看文件内容，它的功能与more指令类似，但是比more指令更加强大，支 持各种显示终端。less指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率。 </p></li><li><p><strong>&gt;</strong> <strong>指令 和</strong> <strong>&gt;&gt;</strong> <strong>指令</strong></p><p>基本语法 </p><ul><li><p>1) ls -l &gt;文件 </p><p>（功能描述：列表的内容写入文件a.txt中（覆盖写）） </p></li><li><p>2) ls -al &gt;&gt;文件 </p><p>（功能描述：列表的内容追加到文件aa.txt的末尾） </p></li><li><p>3) cat 文件1 &gt; 文件2 </p><p>（功能描述：将文件1的内容覆盖到文件2） </p></li><li><p>4) echo “内容”&gt;&gt; 文件 </p></li></ul></li><li><p><strong>echo指令</strong></p><p>echo输出内容到控制台。 </p></li><li><p><strong>head</strong>指令</p><p>head用于显示文件的开头部分内容，默认情况下head指令显示文件的前10行内容</p><ul><li><p>head 文件 </p><p>(功能描述：查看文件头10行内容)</p></li><li><p>head -n 文件 </p></li></ul></li><li><p><strong>tail指令</strong></p><p>tail用于输出文件中尾部的内容，默认情况下tail指令显示文件的前10行内容。  </p><ul><li>tail 文件 （功能描述：查看文件头10行内容）</li><li>tail -n 5 文件</li><li><strong><em>tail -f 文件 （功能描述：实时追踪该文档的所有更新）</em></strong> </li></ul></li><li><p><strong>ln指令</strong></p><p>软链接也成为符号链接，类似于windows里的快捷方式，主要存放了链接其他文件的路径</p><ul><li>ln -s [原文件或目录] [软链接名] （功能描述：给原文件创建一个软链接） </li><li>删除   rm -rf  软连接名(<strong>不要带斜线</strong>)</li></ul></li><li><p><strong>history指令</strong></p><p>查看已经执行过历史命令,也可以执行历史指令 </p><ul><li>history [n] 查看最近的n条</li><li>![n]   执行标号为n的指令</li></ul></li></ul><h3 id="时间日期类"><a href="#时间日期类" class="headerlink" title="时间日期类"></a>时间日期类</h3><ul><li><p><strong>date指令</strong>     显示当前时间</p><ul><li><p>date </p><p>显示当前时间</p></li><li><p>date +%Y </p><p>显示当前年份</p></li><li><p>date +%m </p><p>显示当前月份</p></li><li><p>date +%d </p><p>功能描述：显示当前是哪一天）</p></li><li><p>date “+%Y-%m-%d %H:%M:%S”    </p><p> 功能描述：显示年月日时分秒</p></li><li><p>date -s “2020-11-19 12:00:00”</p><p> 设置日期</p></li></ul></li><li><p><strong>cal指令</strong></p><p>查看日历</p></li></ul><h3 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="搜索查找类"></a>搜索查找类</h3><ul><li><p><strong>find指令</strong></p><p>find指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件或者目录显示在终 端。 </p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-name&lt;查询方式&gt;</td><td>按照指定的文件名查找模式查找文件</td></tr><tr><td>-user&lt;用户名&gt;</td><td>查找属于指定用户名所有文件</td></tr><tr><td>-size&lt;文件大小&gt;</td><td>按照指定的文件大小查找文件。（+n 大于 -n小于 n等于）</td></tr></tbody></table></li><li><p><strong>locate指令</strong> </p><p>locaate指令可以快速定位文件路径。locate指令利用事先建立的系统中所有文件名称及路径 的locate数据库实现快速定位给定的文件。Locate指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新locate时刻。 </p><p><strong>特别说明</strong> </p><p><strong>由于locate指令基于数据库进行查询，所以第一次运行前，必须使用updatedb指令创建locate 数据库。</strong></p></li><li><p><strong>grep指令和 管道符号 |</strong> </p><p>表示将前一个命令的处理结果输出传递给后面的命令处理。</p><p>语法      grep [选项] 查找内容 源文件 </p></li></ul><h3 id="压缩和解压类"><a href="#压缩和解压类" class="headerlink" title="压缩和解压类"></a>压缩和解压类</h3><ul><li><p><strong>gzip/gunzip</strong> <strong>指令</strong> </p><ul><li><p>gzip 文件 </p><p>（功能描述：压缩文件，只能将文件压缩为*.gz文件） </p></li><li><p>gunzip 文件.gz </p><p>（功能描述：解压缩文件命令）</p></li></ul></li><li><p><strong>zip/unzip</strong> <strong>指令</strong> </p><ul><li><p>zip [选项] XXX.zip 将要压缩的内容</p><p>（功能描述：压缩文件和目录的命令） </p></li><li><p>unzip [选项] XXX.zip </p><p>（功能描述：解压缩文件）  </p></li><li><p>zip常用选项 </p><p>-r：递归压缩，即压缩目录 </p></li><li><p>unzip的常用选项 </p><p>-d&lt;目录&gt; ：指定解压后文件的存放目录</p></li></ul></li><li><p><strong>tar</strong> <strong>指令</strong></p><ul><li><p>tar [选项] XXX.tar.gz 打包的内容</p><p> (功能描述：打包目录，压缩后的文件格式.tar.gz) </p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-c</td><td>产生.tar打包文件</td></tr><tr><td>-v</td><td>显示详细信息</td></tr><tr><td>-f</td><td>指定压缩后的文件名</td></tr><tr><td>-z</td><td>打包同时压缩</td></tr><tr><td>-x</td><td>解压.tar文件</td></tr></tbody></table><p>tar -zcvf ×××.tar.gz [filePath]   压缩文件</p><p>tar -zxvf ×××.tar.gz    解压到当前目录</p><p>tar -zxvf ×××.tar.gz -C [targetPath]  加压到指定目录（目录需要提前存在）</p></li></ul></li></ul><h2 id="组管理和权限管理"><a href="#组管理和权限管理" class="headerlink" title="组管理和权限管理"></a>组管理和权限管理</h2><h3 id="组说明"><a href="#组说明" class="headerlink" title="组说明"></a>组说明</h3><p>在linux中的每个用户必须属于一个组，不能独立于组外。在linux中每个文件 有所有者、所在组、其它组的概念。 </p><p>1) 所有者 </p><p>2) 所在组 </p><p>3) 其它组 </p><p>4) 改变用户所在的组</p><ul><li><p><strong>ls -ahl</strong>                 查看文件的所有者</p></li><li><p><strong>chown [username] [filename]</strong> 修改文件所有者</p></li><li><p><strong>groupadd [groupName]</strong>   创建组  useradd -g [groupName] [username]</p></li><li><p><strong>chgrp [groupName] [fileName]</strong>  修改文件所在的组</p></li><li><p><strong>usermod –g [groupName] [username]</strong> 改变用户所在组</p></li><li><p><strong>usermod -d [contentName] [username]</strong> 改变用户登录的初始目录</p></li></ul><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><h4 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h4><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="文件权限说明" class="fancybox"><img alt="文件权限说明" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/filemod.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="文件权限说明"></a></p><p>*<em>0-9位说明 *</em></p><blockquote><p>1) 第0位确定文件类型(d, - , l , c , b) </p></blockquote><blockquote><p>2) 第1-3位确定所有者（该文件的所有者）拥有该文件的权限。—User </p></blockquote><blockquote><p>3) 第4-6位确定所属组（同用户组的）拥有该文件的权限，—Group </p></blockquote><blockquote><p> 4) 第7-9位确定其他用户拥有该文件的权限 —Other</p></blockquote><h4 id="rwx权限详解"><a href="#rwx权限详解" class="headerlink" title="rwx权限详解"></a>rwx权限详解</h4><ul><li><p><strong>rwx作用到文件</strong> </p><p>1) [ r ]代表可读(read): 可以读取,查看 </p><p>2) [ w ]代表可写(write): 可以修改,但是不代表可以删除该文件,删除一个文件的前提条件是 对该文件所在的目录有写权限，才能删除该文件. </p><p>3) [ x ]代表可执行(execute):可以被执行 </p></li><li><p><strong>rwx作用到目录</strong> </p><p>1) [ r ]代表可读(read): 可以读取，ls查看目录内容 </p><p>2) [ w ]代表可写(write): 可以修改,目录内创建+删除+重命名目录 </p><p>3) [ x ]代表可执行(execute):可以进入该目录</p></li></ul><h3 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h3><ul><li><p><strong>chmod</strong></p><ul><li><p><strong>第一种方式：+ 、-、=变更权限</strong> </p><p><strong>u:所有者 g:所有组 o:其他人 a:所有人(u、g、o的总和)</strong> </p><p>1) chmod u=rwx,g=rx,o=x 文件目录名 </p><p>2) chmod o+w 文件目录名 </p><p>3) chmod a-x 文件目录名</p></li><li><p><strong>第二种方式：通过数字变更权限</strong> </p><p>r=4 w=2 x=1 rwx=4+2+1=7 </p><p>chmod u=rwx,g=rx,o=x 文件目录名 ，相当于 chmod 751 文件目录名</p></li></ul></li></ul><ul><li><p><strong>chown -R [username] [filePath]</strong></p><p>​    递归改变文件夹下所有文件的所有者</p></li><li><p><strong>chgrp -R [groupName] [filePath]</strong></p><p>修改该目录下所有文件的所在组</p></li></ul><h2 id="定时任务调度"><a href="#定时任务调度" class="headerlink" title="定时任务调度"></a>定时任务调度</h2><h3 id="crond任务调度"><a href="#crond任务调度" class="headerlink" title="crond任务调度"></a><strong>crond任务调度</strong></h3><table><thead><tr><th>e</th><th>编辑crontab定时任务</th></tr></thead><tbody><tr><td>-l</td><td>查询crontab任务</td></tr><tr><td>-r</td><td>删除当前用户所有的crontab任务</td></tr></tbody></table><h3 id="占位符说明"><a href="#占位符说明" class="headerlink" title="占位符说明"></a>占位符说明</h3><table><thead><tr><th>项目</th><th>含义</th></tr></thead><tbody><tr><td>第一个 *</td><td>一小时当中的第几分钟</td></tr><tr><td>第二个 *</td><td>一天当中的第几个小时</td></tr><tr><td>第三个 *</td><td>一个月当中的第几天</td></tr><tr><td>第四个 *</td><td>一年当中的第几月</td></tr><tr><td>第五个 *</td><td>一周当中的星期几</td></tr></tbody></table><h3 id="特殊符号的说明"><a href="#特殊符号的说明" class="headerlink" title="特殊符号的说明"></a><strong>特殊符号的说明</strong></h3><table><thead><tr><th>特殊符号</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>代表任何时间。比如第一个“*”就代表一小时中每分钟都执行一 次的意思。</td></tr><tr><td>，</td><td>代表不连续的时间。比如“0 8,12,16 * * * 命令”，就代表在每天 的8点0分，12点0分，16点0分都执行一次命令</td></tr><tr><td>-</td><td>代表连续的时间范围。比如“0 5 * * 1-6命令”，代表在周一到周 六的凌晨5点0分执行命令</td></tr><tr><td>*/n</td><td>代表每隔多久执行一次。比如“*/10 * * * * 命令”，代表每隔</td></tr></tbody></table><h3 id="crond-相关指令"><a href="#crond-相关指令" class="headerlink" title="crond 相关指令"></a><strong>crond</strong> 相关指令</h3><ul><li><p>1) conrtab –r：终止任务调度。 </p></li><li><p>2) crontab –l：列出当前有那些任务调度 </p></li><li><p>3) service crond restart [重启任务调度]</p></li></ul><h2 id="磁盘分区和挂载"><a href="#磁盘分区和挂载" class="headerlink" title="磁盘分区和挂载"></a>磁盘分区和挂载</h2><h3 id="分区基础"><a href="#分区基础" class="headerlink" title="分区基础"></a>分区基础</h3><p><strong>分区的方式：</strong> </p><ul><li><p>1) mbr分区: </p><p>1.最多支持四个主分区 </p><p>2.系统只能安装在主分区 </p><p>3.扩展分区要占一个主分区 </p><p>4.MBR最大只支持2TB，但拥有最好的兼容性 </p></li><li><p>2) gtp分区: </p><p>1.支持无限多个主分区（但操作系统可能限制，比如 windows下最多128个分区） </p><p>2.最大支持18EB的大容量（1EB=1024 PB，1PB=1024 TB ） </p><p>3.windows7 64位以后支持gtp</p></li></ul><h3 id="linux分区"><a href="#linux分区" class="headerlink" title="linux分区"></a>linux分区</h3><ul><li><p>1) </p><p>Linux来说无论有几个分区，分给哪一目录使用，它归根结底就只有一个根目录，一个独 立且唯一的文件结构 , Linux中每个分区都是用来组成整个文件系统的一部分。 </p></li><li><p>2）</p><p>Linux采用了一种叫“载入”的处理方法，它的整个文件系统中包含了一整套的文件和目 录，且将一个分区和一个目录联系起来。这时要载入的一个分区将使它的存储空间在一 个目录下获得。 </p></li></ul><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1605841290720" class="fancybox"><img alt="1605841290720" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/1605841290720.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1605841290720"></a></p><h3 id="挂载案例"><a href="#挂载案例" class="headerlink" title="挂载案例"></a>挂载案例</h3><blockquote><p>新增一块硬盘，并且挂载到/home/disk</p><p>1) 虚拟机添加硬盘 </p><p>2) 分区 </p><p>​    <strong>fdisk /dev/sdb</strong></p><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="分区" class="fancybox"><img alt="分区" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/guazai1.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="分区"></a></p><p>3) 格式化 </p><p><strong>mkfs -t ext4 /dev/sdb1</strong></p><p>4) 挂载 </p><p><strong>mount /dev/sdb1 /home/newdisk/</strong></p><p>5) 设置可以自动挂载 。 </p><p><strong>vim /etc/fstab<br>mount -a    //即刻生效</strong></p><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="挂载2" class="fancybox"><img alt="挂载2" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/guazai2.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="挂载2"></a></p></blockquote><ul><li><p>卸载分区</p><p>*<em>unmount    [设别名称]或者 unmount 挂载目录 *</em></p><p>unmount /dev/sbd1         unmount /home/newdisk</p></li></ul><h3 id="磁盘情况查询"><a href="#磁盘情况查询" class="headerlink" title="磁盘情况查询"></a>磁盘情况查询</h3><ul><li><p><strong>df -l</strong>   查询系统整体磁盘使用情况</p></li><li><p><strong>du -h /目录</strong>    查询指定目录的磁盘占用情况，默认为当前目录</p><ul><li><p>-s 指定目录占用大小汇总 </p></li><li><p>-h 带计量单位 </p></li><li><p>-a 含文件 </p></li><li><p>–max-depth=1 子目录深度 </p></li><li><p>-c 列出明细的同时，增加汇总值</p></li></ul></li></ul><h4 id="实用指令"><a href="#实用指令" class="headerlink" title="实用指令"></a>实用指令</h4><ul><li><p>1) 统计/home文件夹下文件的个数 </p><p><strong>ls -l /home | grep “^-“ | wc -l</strong></p></li><li><p>2) 统计/home文件夹下目录的个数 </p><p><strong>ls -l /home | grep “^d” | wc -l</strong></p></li><li><p>3) 统计/home文件夹下文件的个数，包括子文件夹里的 </p><p><strong>ls -lR /home | grep “^-“ | wc -l</strong></p></li><li><p>4) 统计文件夹下目录的个数，包括子文件夹里的 </p><p><strong>ls -lR /home | grep “^d” | wc -l</strong></p></li><li><p>5) 以树状显示目录结构</p><p><strong>tree</strong></p></li></ul><h2 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h2><h3 id="NAT模式"><a href="#NAT模式" class="headerlink" title="NAT模式"></a>NAT模式</h3><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1605855545747" class="fancybox"><img alt="1605855545747" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/1605855545747.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1605855545747"></a></p><p>修改配置文件，改为系统启动时网络接口有效，设为静态获取IP地址，网关改为虚拟网卡VMnet8相同</p><p><strong>#vim /etc/sysconfig/network-scripts/ifcfg-ens33</strong></p><p><strong>#systemctl restart network.service</strong></p><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="network" class="fancybox"><img alt="network" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/network.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="network"></a></p><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><blockquote><p> ps命令是用来查看目前系统中，有哪些正在执行，以及它们执行的状况。 </p><p>-a 显示当前终端的所有进程信息</p><p>-u 以用户的格式显示进程信息</p><p>-x 显示后台经层运行的参数</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="process" class="fancybox"><img alt="process" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/process.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="process"></a></p><ul><li><p><strong>ps –aux|grep xxx</strong></p><ul><li><p>USER：用户名称 </p></li><li><p>PID：进程号 </p></li><li><p><strong>%CPU</strong>：进程占用CPU的百分比</p></li><li><p><strong>%MEM</strong>：进程占用物理内存的百分比</p></li><li><p>VSZ<strong>：进程占用的虚拟内存大小（单位：</strong>KB）</p></li><li><p>RSS：进程占用的物理内存大小（单位：K）</p></li><li><p>TT：端名称,缩写 . </p></li><li><p>STAT：进程状态，其中S-睡眠，s-表示该进程是会话的先导进程，N-表示进程拥有比普通 </p></li><li><p>级更低的优先级，R-正在运行，D-短期等待，Z-僵死进程，T-被跟踪或者被停止等等 </p></li><li><p>STARTED：进程的启动时间 </p></li><li><p>TIME：CPU时间，即进程使用CPU的总时间 </p></li><li><p>COMMAND：启动进程所用的命令和参数<strong>，如果过长会被截断显示</strong></p></li></ul></li><li><p>*<em>ps -ef|grep xxx *</em></p><ul><li>UID：用户ID  </li><li>PID：进程ID  </li><li>PPID：父进程ID</li><li>C：CPU用于计算执行优先级的因子。数值越大，表明进程是CPU密集型运算，执行优先级会降低；数值越小，表明进程是I/O密集型运算，执行优先级会提高 </li><li>STIME：进程启动的时间 </li><li>TTY：完整的终端名称 </li><li>TIME：CPU时间 </li><li>CMD：启动进程所用的命令和参数</li></ul></li></ul><h3 id="kill和killall"><a href="#kill和killall" class="headerlink" title="kill和killall"></a>kill和killall</h3><p>kill [选项] 进程号（功能描述：通过进程号杀死进程） </p><p>killall 进程名称 （功能描述：通过进程名称杀死进程，也支持通配符，这在系统因负 载过大而变得很慢时很有用）</p><h3 id="pstree"><a href="#pstree" class="headerlink" title="pstree"></a><strong>pstree</strong></h3><ul><li><p>-p :显示进程的PID </p></li><li><p>-u :显示进程的所属用户</p></li></ul><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><p>服务(service) 本质就是进程，但是是运行在后台的，通常都会监听某个端口，等待其它程 序的请求，比如(mysql , sshd 防火墙等)，因此我们又称为守护进程，是Linux中非常重要的 知识点。</p><ul><li><p>service 服务名 [start | stop | restart | reload | status]</p><p>在CentOS7.0后 不再使用service ,而是 systemctl </p></li></ul><p><strong>windows的dos下，telnet 测试     查看某个端口是否打开</strong></p><p><strong>查看服务名</strong>:</p><ul><li><p>方式1：使用setup -&gt; 系统服务 就可以看到。 </p></li><li><p>方式2: /etc/init.d/服务名称</p></li></ul><h3 id="动态监控进程-top"><a href="#动态监控进程-top" class="headerlink" title="动态监控进程 top"></a><strong>动态监控进程</strong> top</h3><p>top与ps命令很相似。它们都用来显示正在执行的进程。Top与ps最大的不同之处，在于top 在执行一段时间可以更新正在运行的的进程。</p><table><thead><tr><th>选项</th><th>功能</th></tr></thead><tbody><tr><td>-d 秒数</td><td>指定top命令每隔几秒更新。默认是3秒在top命令的交互模式当中可以执行的</td></tr><tr><td>-i</td><td>使top不显示任何闲置进程或者僵死进程</td></tr><tr><td>-p</td><td>通过制定监控进程id来仅仅监控某个进程的状态</td></tr></tbody></table><table><thead><tr><th>操作</th><th>功能</th></tr></thead><tbody><tr><td>P</td><td>以cpu使用率排序，默认就是此项</td></tr><tr><td>M</td><td>以内存的使用率排序</td></tr><tr><td>N</td><td>以PID排序</td></tr><tr><td>q</td><td>退出top</td></tr></tbody></table><h3 id="监控网络状态-netstat"><a href="#监控网络状态-netstat" class="headerlink" title="监控网络状态 netstat"></a><strong>监控网络状态</strong> netstat</h3><p><strong>选项说明</strong> </p><ul><li><p>-an 按一定顺序排列输出 </p></li><li><p>-p 显示哪个进程在调用 </p></li></ul><p><strong>netstat -anp | more   查看所有的网络服务</strong></p><p><strong>netstat -anp | grep sshd 查看某个服务的</strong></p><h2 id="RPM和YUM"><a href="#RPM和YUM" class="headerlink" title="RPM和YUM"></a>RPM和YUM</h2><h3 id="rpm包的管理"><a href="#rpm包的管理" class="headerlink" title="rpm包的管理"></a>rpm包的管理</h3><h4 id="rpm包的简单查询指令："><a href="#rpm包的简单查询指令：" class="headerlink" title="rpm包的简单查询指令："></a>rpm包的简单查询指令：</h4><ul><li><p>查询已安装的rpm列表 rpm –qa|grep xx </p></li><li><p>rpm -qa :查询所安装的所有rpm软件包 </p><p>rpm -qa | more  </p><p>rpm -qa | grep X [rpm -qa | grep firefox ] </p></li><li><p>rpm -q 软件包名 :查询软件包是否安装 </p><p>rpm -q firefox </p></li><li><p>rpm -qi 软件包名 ：查询软件包信息 </p><p>rpm -qi file </p></li><li><p>rpm -ql 软件包名 :查询软件包中的文件 </p><p>rpm -ql firefox </p></li><li><p>rpm -qf 文件全路径名 查询文件所属的软件包 </p><p>rpm -qf /etc/passwd </p><p>rpm -qf /root/install.log</p></li></ul><h4 id="卸载rpm包"><a href="#卸载rpm包" class="headerlink" title="卸载rpm包"></a>卸载rpm包</h4><ul><li>rpm -e RPM包的名称 </li></ul><p>1) 如果其它软件包依赖于您要卸载的软件包，卸载时则会产生错误信息。 </p><p>如： $ rpm -e foo  </p><p>removing these packages would break dependencies:foo is needed by bar-1.0-1 </p><p>2) 如果我们就是要删除 foo这个rpm 包，可以增加参数 –nodeps ,就可以强制删除，但是一 </p><p>般不推荐这样做，因为依赖于该软件包的程序可能无法运行 </p><p>如：$ rpm -e –nodeps foo</p><h4 id="安装rpm包"><a href="#安装rpm包" class="headerlink" title="安装rpm包"></a>安装rpm包</h4><ul><li>rpm -ivh RPM包全路径名称</li></ul><p><strong>i=install 安装</strong> </p><p><strong>v=verbose 提示</strong> </p><p><strong>h=hash 进度条</strong> </p><h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a><strong>yum</strong></h3><ul><li><p>查询yum服务器是否有需要安装的软件 </p><p>yum list|grep xx软件列表 </p></li><li><p>安装指定的yum包 </p><p>yum install xxx 下载安装</p></li></ul><h1 id="J2EE环境搭建"><a href="#J2EE环境搭建" class="headerlink" title="J2EE环境搭建"></a>J2EE环境搭建</h1><h2 id="JDK"><a href="#JDK" class="headerlink" title="JDK"></a>JDK</h2><p><strong>配置环境变量：</strong></p><p><strong>export JAVA_HOME=/usr/local/java</strong><br><strong>export PATH=$PATH:$JAVA_HOME/bin</strong><br><strong>export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</strong><br><strong>export JRE_HOME=$JAVA_HOME/jre</strong></p><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><p><strong>关于centos7防火墙操作</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-ports   查看当前放行的端口</span><br><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent      开放某个端口</span><br><span class="line">firewall-cmd --zone=public --remove-port=8080/tcp --permanent    关闭某个端口</span><br><span class="line">firewall-cmd --reload / systemctl restart filewalld.service    重启防火墙</span><br><span class="line">systemctl enable firewalld    开机启动防火墙</span><br><span class="line">systemctl disable firewalld   禁止防火墙开机启动</span><br><span class="line">systemctl start firewalld     开启防火墙</span><br><span class="line">systemctl stop firewalld      停止防火墙</span><br></pre></td></tr></tbody></table></figure></div><h2 id="eclipse"><a href="#eclipse" class="headerlink" title="eclipse"></a>eclipse</h2><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><h3 id="一：卸载旧版本"><a href="#一：卸载旧版本" class="headerlink" title="一：卸载旧版本"></a>一：卸载旧版本</h3><p>使用下面的命令检查是否安装有MySQL Server</p><p><strong>rpm -qa | grep mysql</strong></p><p>有的话通过下面的命令来卸载掉</p><p><strong>rpm -e mysql_libs  //普通删除模式</strong></p><p><strong>rpm -e –nodeps mysql_libs  // 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除</strong></p><h3 id="二：安装MySQL"><a href="#二：安装MySQL" class="headerlink" title="二：安装MySQL"></a>二：安装MySQL</h3><h4 id="安装编译代码需要的包"><a href="#安装编译代码需要的包" class="headerlink" title="安装编译代码需要的包"></a>安装编译代码需要的包</h4><p><strong>yum -y install make gcc-c++ cmake bison-devel  ncurses-devel</strong></p><p><strong>tar xvf mysql-5.6.14.tar.gz</strong></p><p><strong>cd mysql-5.6.14</strong></p><h4 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h4><p><strong>cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mysql -DMYSQL_DATADIR=/usr/local/mysql/data -DSYSCONFDIR=/etc -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_MEMORY_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DMYSQL_UNIX_ADDR=/var/lib/mysql/mysql.sock -DMYSQL_TCP_PORT=3306 -DENABLED_LOCAL_INFILE=1 -DWITH_PARTITION_STORAGE_ENGINE=1 -DEXTRA_CHARSETS=all -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci</strong></p><h4 id="编译并安装"><a href="#编译并安装" class="headerlink" title="编译并安装"></a>编译并安装</h4><p><strong>make &amp;&amp; make install</strong></p><h3 id="三：配置MySQL"><a href="#三：配置MySQL" class="headerlink" title="三：配置MySQL"></a>三：配置MySQL</h3><h4 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h4><p>使用下面的命令查看是否有mysql用户及用户组</p><p><strong>cat /etc/passwd 查看用户列表</strong></p><p><strong>cat /etc/group  查看用户组列表</strong></p><p>如果没有就创建</p><p><strong>groupadd mysql</strong></p><p><strong>useradd -g mysql mysql</strong></p><p>修改/usr/local/mysql权限</p><p><strong>chown -R mysql:mysql /usr/local/mysql</strong></p><h4 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h4><p>进入安装路径（在执行下面的指令），执行初始化配置脚本，创建系统自带的数据库和表</p><p><strong>cd /usr/local/mysql</strong></p><p><strong>scripts/mysql_install_db –basedir=/usr/local/mysql –datadir=/usr/local/mysql/data –user=mysql</strong>   </p><p>注：在启动MySQL服务时，会按照一定次序搜索my.cnf，先在/etc目录下找，找不到则会搜索”$basedir/my.cnf”，在本例中就是 /usr/local/mysql/my.cnf，这是新版MySQL的配置文件的默认位置！</p><p>注意：在CentOS 6.8版操作系统的最小安装完成后，在/etc目录下会存在一个my.cnf，需要将此文件更名为其他的名字，如：/etc/my.cnf.bak，否则，该文件会干扰源码安装的MySQL的正确配置，造成无法启动。</p><p>修改名称，防止干扰：</p><p><strong>mv /etc/my.cnf /etc/my.cnf.bak</strong></p><h4 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h4><p>添加服务，拷贝服务脚本到init.d目录，并设置开机启动 </p><p>[注意在 /usr/local/mysql 下执行]</p><p><strong>cp support-files/mysql.server /etc/init.d/mysql</strong></p><p><strong>chkconfig mysql on</strong></p><p><strong>service mysql start  –启动MySQL</strong></p><p>执行下面的命令修改root密码</p><p><strong>cd /usr/local/mysql/bin</strong></p><p><strong>./mysql -uroot</strong>  </p><p><strong>mysql&gt; SET PASSWORD = PASSWORD(‘123456’);</strong></p><h4 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h4><ul><li><p><strong>mysql&gt; use mysql;</strong></p></li><li><p><strong>mysql&gt; select user,host from user;</strong></p></li><li><p><strong>mysql&gt; grant all privileges on <em>.</em> to “root”@”%” identified by “123456”;</strong></p></li><li><p><strong>mysql&gt; flush privileges;</strong></p></li><li><p><strong>放行3306端口</strong></p></li></ul><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="远程连接" class="fancybox"><img alt="远程连接" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/mysqlremote.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="远程连接"></a></p><h1 id="shell快速入门"><a href="#shell快速入门" class="headerlink" title="shell快速入门"></a>shell快速入门</h1><h3 id="格式要求"><a href="#格式要求" class="headerlink" title="格式要求"></a>格式要求</h3><ul><li><p>1) 脚本以#!/bin/bash开头 </p></li><li><p>2) 脚本需要有可执行权限 </p></li></ul><h3 id="执行方式"><a href="#执行方式" class="headerlink" title="执行方式"></a>执行方式</h3><ul><li><p>方式1(输入脚本的绝对路径或相对路径) </p><ul><li><p>1)首先要赋予helloworld.sh 脚本的+x权限 </p></li><li><p>2)执行脚本 </p></li></ul></li><li><p>方式2(sh+脚本) </p><ul><li>说明：不用赋予脚本+x权限，直接执行即可</li></ul></li></ul><h3 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h3><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><ul><li><p>1)定义变量：变量=值 </p></li><li><p>2)撤销变量：unset 变量 </p></li><li><p>3) 声明静态变量：readonly变量，注意：不能unset</p></li></ul><h4 id="定义变量的规则"><a href="#定义变量的规则" class="headerlink" title="定义变量的规则"></a>定义变量的规则</h4><ul><li><p>1) 变量名称可以由字母、数字和下划线组成，但是不能以数字开头。 </p></li><li><p>2) 等号两侧不能有空格 </p></li><li><p>3) 变量名称一般习惯为大写 </p></li></ul><p><strong>将命令的返回值赋给变量</strong> </p><ul><li><p>1）A=<code>ls -la</code> 反引号，运行里面的命令，并把结果返回给变量A </p></li><li><p>2）A=$(ls -la) 等价于反引号</p></li></ul><h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a><strong>设置环境变量</strong></h4><h5 id="基本语法-1"><a href="#基本语法-1" class="headerlink" title="基本语法"></a><strong>基本语法</strong></h5><ul><li><p>1) export 变量名=变量值 </p><p>（功能描述：将shell变量输出为环境变量） </p></li><li><p>2) source 配置文件 </p><p>（功能描述：让修改后的配置信息立即生效） </p></li><li><p>3) echo $变量名 </p><p>（功能描述：查询环境变量的值）</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">profile内设置变量</span></span><br><span class="line">TEST_HOME=/usr/local</span><br><span class="line">export TEST_HOME</span><br><span class="line">:&lt;&lt;!</span><br><span class="line"></span><br><span class="line">多行注释</span><br><span class="line"></span><br><span class="line">!</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试</span></span><br><span class="line">echo "$TEST_HOME"</span><br></pre></td></tr></tbody></table></figure></div><h4 id="位置参数变量"><a href="#位置参数变量" class="headerlink" title="位置参数变量"></a>位置参数变量</h4><ul><li><p>$n （功能描述：n为数字，$0代表命令本身，$1-$9代表第一到第九个参数，十以上的参数，十以上的参 数需要用大括号包含，如${10}） </p></li><li><p>$* （功能描述：这个变量代表命令行中所有的参数，$*把所有的参数看成一个整体） </p></li><li><p>$@（功能描述：这个变量也代表命令行中所有的参数，不过$@把每个参数区分对待） </p></li><li><p>$#（功能描述：这个变量代表命令行中所有参数的个数）</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">获取参数</span></span><br><span class="line">echo "$0 $1 $2"</span><br><span class="line">echo "$*"</span><br><span class="line">echo "$@"</span><br><span class="line">echo "参数个数=$#"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">out</span></span><br><span class="line">[root@localhost shell]# ./pos.sh 100 200</span><br><span class="line">./pos.sh 100 200</span><br><span class="line">100 200</span><br><span class="line">100 200</span><br><span class="line">参数个数=2</span><br></pre></td></tr></tbody></table></figure></div><h4 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h4><ul><li><p>$$ </p><p>（功能描述：当前进程的进程号（PID）） </p></li><li><p>$! </p><p>（功能描述：后台运行的最后一个进程的进程号（PID）） </p></li><li><p>$？ </p><p>（功能描述：最后一次执行的命令的返回状态。如果这个变量的值为0，证明上一个命令正 确执行；如果这个变量的值为非0（具体是哪个数，由命令自己来决定），则证明上一个命令执行不正 确了。） </p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "当前进程号=$$"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">后台运行一个脚本 </span></span><br><span class="line">./hello.sh &amp;</span><br><span class="line">echo "最后运行的进程号=$!"</span><br><span class="line"></span><br><span class="line">echo "执行的结果=$?"</span><br></pre></td></tr></tbody></table></figure></div><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ul><li><p>1) “$((运算式))”或“$[运算式]” </p></li><li><p>2) expr m + n  </p><p>注意expr运算符间要有空格 </p></li><li><p>3) expr m - n </p></li><li><p>4) expr *, /, % 乘，除，取余 </p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">RESULT1=$(((2+3)*4))</span><br><span class="line">echo "result1=$RESULT1"</span><br><span class="line"></span><br><span class="line">RESULT2=$[(2+4)*5]</span><br><span class="line">echo "result2=$RESULT2"</span><br><span class="line"></span><br><span class="line">TEMP=`expr 2 + 3`</span><br><span class="line">RESULT3=`expr $TEMP \* 4`</span><br><span class="line">echo "result3=$RESULT3"</span><br></pre></td></tr></tbody></table></figure></div><h3 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h3><p><strong>[ condition ]（注意condition前后要有空格）</strong> </p><p><strong>#非空返回true，可使用$?验证（0为true，&gt;1为false</strong>） </p><p>• </p><h4 id="常用判断条件"><a href="#常用判断条件" class="headerlink" title="常用判断条件"></a>常用判断条件</h4><h5 id="两个整数的比较"><a href="#两个整数的比较" class="headerlink" title="两个整数的比较"></a>两个整数的比较</h5><blockquote><p>= 字符串比较 </p><p>-lt 小于 </p><p>-le 小于等于 </p><p>-eq 等于 </p><p>-gt 大于 </p><p>-ge 大于等于 </p><p>-ne 不等于 </p></blockquote><h5 id="按照文件权限进行判断"><a href="#按照文件权限进行判断" class="headerlink" title="按照文件权限进行判断"></a>按照文件权限进行判断</h5><blockquote><p>-r 有读的权限 </p><p>-w 有写的权限 </p><p>-x 有执行的权限 </p></blockquote><h5 id="按照文件类型进行判断"><a href="#按照文件类型进行判断" class="headerlink" title="按照文件类型进行判断"></a>按照文件类型进行判断</h5><blockquote><p>-f 文件存在并且是一个常规的文件 </p><p>-e 文件存在 </p><p>-d 文件存在并是一个目录</p></blockquote><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">判断 字符串是否相等</span></span><br><span class="line">if [ "ok" = "ok" ]</span><br><span class="line">then</span><br><span class="line">        echo "equal"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">判断 数字大小 </span></span><br><span class="line">if [ 23 -gt 22 ]</span><br><span class="line">then</span><br><span class="line">        echo "大于"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">判断 文件是否存在</span></span><br><span class="line"></span><br><span class="line">if [ -e /root/shell/hello.sh ]  </span><br><span class="line">then</span><br><span class="line">        echo "存在"</span><br><span class="line">fi</span><br></pre></td></tr></tbody></table></figure></div><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><h4 id="if"><a href="#if" class="headerlink" title="if"></a>if</h4><h5 id="基本语法-2"><a href="#基本语法-2" class="headerlink" title="基本语法"></a>基本语法</h5><blockquote><p>if [ 条件判断式 ];then  </p><p>程序 </p><p>fi  </p><p>或者 </p><p>if [ 条件判断式 ]  </p><p>then  </p><p>程序 </p><p>elif [条件判断式] </p><p>then </p><p>程序 </p><p>fi</p><p><strong>注意事项：（1）[ 条件判断式 ]，中括号和条件判断式之间必须有空格</strong></p></blockquote><h5 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if [ $1 -ge 60 ]</span><br><span class="line">then</span><br><span class="line">        echo "及格"</span><br><span class="line">elif [ $1 -lt 60 ]</span><br><span class="line">then</span><br><span class="line">        echo "不及格"</span><br><span class="line">fi</span><br></pre></td></tr></tbody></table></figure></div><h4 id="case"><a href="#case" class="headerlink" title="case"></a>case</h4><h5 id="基本语法-3"><a href="#基本语法-3" class="headerlink" title="基本语法"></a>基本语法</h5><blockquote><p>case $变量名 in  </p><p>“值1”） </p><p>如果变量的值等于值1，则执行程序1  </p><p>;;  </p><p>“值2”） </p><p>如果变量的值等于值2，则执行程序2  </p><p>;;  </p><p>…省略其他分支…  </p><p>*） </p><p>如果变量的值都不是以上的值，则执行此程序 </p><p>;;  </p><p>esac </p></blockquote><h5 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">case $1 in</span><br><span class="line">"1")</span><br><span class="line">echo "周一"</span><br><span class="line">;;</span><br><span class="line">"2")</span><br><span class="line">echo "周二"</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo "other"</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></tbody></table></figure></div><h4 id="for"><a href="#for" class="headerlink" title="for"></a>for</h4><h5 id="基本语法-4"><a href="#基本语法-4" class="headerlink" title="基本语法"></a>基本语法</h5><blockquote><ul><li><p><strong>for</strong> <strong>变量</strong> <strong>in</strong> <strong>值**</strong>1** <strong>值**</strong>2** <strong>值**</strong>3…**  </p><p><strong>do</strong>  </p><p><strong>程序</strong> </p><p><strong>done</strong> </p></li></ul></blockquote><blockquote><ul><li><p><strong>for (( 初始值;循环控制条件;变量变化 ))</strong>  </p><p><strong>do</strong>  </p><p><strong>程序</strong> </p><p><strong>done</strong></p></li></ul></blockquote><h5 id="案例-2"><a href="#案例-2" class="headerlink" title="案例"></a>案例</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">取出命令行中的参数</span></span><br><span class="line">for i in "$@"</span><br><span class="line">do</span><br><span class="line">        echo "the num is $i"</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="bash">求和</span></span><br><span class="line">SUM=0</span><br><span class="line">for((i=1;i&lt;=100;i++))</span><br><span class="line">do</span><br><span class="line">        SUM=$[$SUM+$i]</span><br><span class="line">done</span><br></pre></td></tr></tbody></table></figure></div><h4 id="while"><a href="#while" class="headerlink" title="while"></a>while</h4><h5 id="基本语法-5"><a href="#基本语法-5" class="headerlink" title="基本语法"></a>基本语法</h5><blockquote><p>while [ 条件判断式 ]  </p><p>do  </p><p>程序 </p><p>done</p></blockquote><h5 id="案例-3"><a href="#案例-3" class="headerlink" title="案例"></a>案例</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SUM=0</span><br><span class="line">i=0</span><br><span class="line">while [ $i -lt $1 ]</span><br><span class="line">do</span><br><span class="line">        echo "$i"</span><br><span class="line">        SUM=$[$SUM+$i]</span><br><span class="line">        i=$[$i+1]</span><br><span class="line">done</span><br><span class="line">echo "sum=$SUM"</span><br></pre></td></tr></tbody></table></figure></div><h4 id="read"><a href="#read" class="headerlink" title="read"></a><strong>read</strong></h4><p><strong>读取控制台输入</strong></p><h5 id="基本语法-6"><a href="#基本语法-6" class="headerlink" title="基本语法"></a>基本语法</h5><blockquote><p>read(选项)(参数) </p><p>选项： </p><p>-p：指定读取值时的提示符； </p><p>-t：指定读取值时等待的时间（秒），如果没有在指定的时间内输入，就不再等待了。。 </p><p>参数 </p><p>变量：指定读取值的变量名 </p></blockquote><h5 id="案例-4"><a href="#案例-4" class="headerlink" title="案例"></a>案例</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">读取控制台输入的值</span></span><br><span class="line">read -p "请输入第一个值：" NUM1</span><br><span class="line"></span><br><span class="line">echo "$NUM1"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">十秒内输入一个值</span></span><br><span class="line"></span><br><span class="line">read -t 10 -p "请输入第二个值：" NUM2</span><br><span class="line"></span><br><span class="line">echo "$NUM2"</span><br><span class="line"></span><br><span class="line">echo "结束"</span><br></pre></td></tr></tbody></table></figure></div><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="系统函数"><a href="#系统函数" class="headerlink" title="系统函数"></a>系统函数</h4><h5 id="basename-dirname"><a href="#basename-dirname" class="headerlink" title="basename/dirname"></a>basename/dirname</h5><h6 id="基本语法-7"><a href="#基本语法-7" class="headerlink" title="基本语法"></a>基本语法</h6><ul><li><p>basename功能：返回完整路径最后 / 的部分，常用于获取文件名 </p><p>basename [pathname] [suffix] </p><p>basename [string] [suffix] </p><p>（功能描述：basename命令会删掉所有的前缀包括最后一个（‘/’） 字符，然后将字符串显示出来。 </p></li><li><p>basename选项：<br>suffix为后缀，如果suffix被指定了，basename会将pathname或string中的suffix去掉。 </p></li><li><p>dirname 功能：返回完整路径最后 / 的前面的部分，常用于返回路径部分 dirname 文件绝对路径 （功能描述：从给定的包含绝对路径的文件名中去除文件名（非目录的部分）， 然后返回剩下的路径（目录的部分）） </p></li></ul><h4 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h4><h5 id="基本语法-8"><a href="#基本语法-8" class="headerlink" title="基本语法"></a>基本语法</h5><p><strong>[ function ] funname[()]</strong> </p><p><strong>{</strong> </p><p><strong>Action;</strong> </p><p><strong>[return int;]</strong> </p><p><strong>}</strong></p><p><strong>调用直接写函数名：funname [值]</strong> </p><h5 id="案例-5"><a href="#案例-5" class="headerlink" title="案例"></a>案例</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">读取控制台输入的值</span></span><br><span class="line">read -p "请输入第一个值：" NUM1</span><br><span class="line"></span><br><span class="line">echo "$NUM1"</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">读取控制台输入的值</span></span><br><span class="line">read -p "请输入第二个值：" NUM2</span><br><span class="line"></span><br><span class="line">echo "$NUM2"</span><br><span class="line"></span><br><span class="line">function getSum(){</span><br><span class="line">        SUM=$[$NUM1+$NUM2]</span><br><span class="line">        echo "和为$SUM"</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">调用getSum</span></span><br><span class="line">getSum $NUM1 $NUM2</span><br></pre></td></tr></tbody></table></figure></div><h3 id="shell脚本备份数据库"><a href="#shell脚本备份数据库" class="headerlink" title="shell脚本备份数据库"></a>shell脚本备份数据库</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">数据库备份</span></span><br><span class="line"><span class="meta">#</span><span class="bash">备份的路径</span></span><br><span class="line">BACKUP=/data/backup/db</span><br><span class="line"><span class="meta">#</span><span class="bash">当前时间作为文件名</span></span><br><span class="line">DATETIME=$( date +%Y_%m_%d_%H%M%S)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">echo</span> <span class="string">"<span class="variable">$DATETIME</span>"</span></span></span><br><span class="line"></span><br><span class="line">echo "=========&gt; 开始备份"</span><br><span class="line">echo "=========&gt; 备份路径：$BACKUP"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">主机</span></span><br><span class="line">HOST=localhost</span><br><span class="line"><span class="meta">#</span><span class="bash">用户名</span></span><br><span class="line">DB_USER=root</span><br><span class="line"><span class="meta">#</span><span class="bash">密码</span></span><br><span class="line">DB_PWD=123456</span><br><span class="line"><span class="meta">#</span><span class="bash">备份数据源库的名称</span></span><br><span class="line">DATABASE=testData</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">创建备份的路径</span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果路径存在，就使用，否则就创建</span></span><br><span class="line">[ ! -d "$BACKUP/$DATETIME" ] &amp;&amp; mkdir -p "$BACKUP/$DATETIME"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">执行数据库备份指令</span></span><br><span class="line">mysqldump -u$DB_USER -p$DB_PWD --host=$HOST $DATABASE | gzip &gt; $BACKUP/$DATETIME/$DATETIME.sql.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">打包并备份文件</span></span><br><span class="line">cd $BACKUP</span><br><span class="line">tar -zcvf $DATETIME.tar.gz $DATETIME</span><br><span class="line">rm -rf $DATETIME</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除10天前的备份文件</span></span><br><span class="line">find $BACKUP -mtime +10 -name "*.tar.gz" -exec rm -rf {} \;</span><br><span class="line">echo "=========&gt; 备份成功"</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">corntab -e</span><br><span class="line">30 12 * * * /root/shell/mysql.sh</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
            <tag> J2EE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>security深入浅出-入门</title>
      <link href="2020/11/12/spring%20security%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA/"/>
      <url>2020/11/12/spring%20security%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="security深入浅出-入门"><a href="#security深入浅出-入门" class="headerlink" title="security深入浅出-入门"></a>security深入浅出-入门</h1><p>Spring Security是spring采用AOP思想，基于servlet过滤器实现的安全框架。它提供了完善的认证机制和方法级的<br>授权功能。是一款非常优秀的权限管理框架。</p><h2 id="简单入门—基本配置"><a href="#简单入门—基本配置" class="headerlink" title="简单入门—基本配置"></a>简单入门—基本配置</h2><h3 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--SpringSecurity核心过滤器链--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--springSecurityFilterChain名词不能修改--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>springSecurityFilterChain<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.DelegatingFilterProxy<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>springSecurityFilterChain<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="security-xml"><a href="#security-xml" class="headerlink" title="security.xml"></a>security.xml</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">&lt;!--设置可以用spring的el表达式配置Spring Security并自动生成对应配置组件（过滤器）--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">auto-config</span>=<span class="string">"true"</span> <span class="attr">use-expressions</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--使用spring的el表达式来指定项目所有资源访问都必须有ROLE_USER或ROLE_ADMIN角色--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">"/**"</span> <span class="attr">access</span>=<span class="string">"hasAnyRole('ROLE_USER','ROLE_ADMIN')"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">security:http</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--设置Spring Security认证用户信息的来源--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- spring security的默认认证是加密认证，{noop}表示不加密认证 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:authentication-manager</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">security:authentication-provider</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">security:user-service</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">security:user</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">password</span>=<span class="string">"{noop}user"</span> <span class="attr">authorities</span>=<span class="string">"ROLE_USER"</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">security:user</span> <span class="attr">name</span>=<span class="string">"admin"</span> <span class="attr">password</span>=<span class="string">"{noop}admin"</span> <span class="attr">authorities</span>=<span class="string">"ROLE_ADMIN"</span>/&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">security:user-service</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">security:authentication-provider</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">security:authentication-manager</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="引入spring的主配置文件"><a href="#引入spring的主配置文件" class="headerlink" title="引入spring的主配置文件"></a>引入spring的主配置文件</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入SpringSecurity主配置文件--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"classpath:spring-security.xml"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="spring-security-的过滤器链"><a href="#spring-security-的过滤器链" class="headerlink" title="spring security 的过滤器链"></a>spring security 的过滤器链</h2><h3 id="常用过滤器"><a href="#常用过滤器" class="headerlink" title="常用过滤器"></a>常用过滤器</h3><ol><li>org.springframework.security.web.context.SecurityContextPersistenceFilter </li></ol><blockquote><p>首当其冲的一个过滤器，作用之重要，自不必多言。 </p><p>SecurityContextPersistenceFilter主要是使用SecurityContextRepository在session中保存或更新一个 SecurityContext，并将SecurityContext给以后的过滤器使用，来为后续fifilter建立所需的上下文。 SecurityContext中存储了当前用户的认证以及权限信息。 </p></blockquote><ol start="2"><li>org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter </li></ol><blockquote><p>此过滤器用于集成SecurityContext到Spring异步执行机制中的WebAsyncManager </p></blockquote><ol start="3"><li>org.springframework.security.web.header.HeaderWriterFilter </li></ol><blockquote><p>向请求的Header中添加相应的信息,可在http标签内部使用security:headers来控制 </p></blockquote><ol start="4"><li>org.springframework.security.web.csrf.CsrfFilter </li></ol><blockquote><p>csrf又称跨域请求伪造，SpringSecurity会对所有post请求验证是否包含系统生成的csrf的token信息， </p><p>如果不包含，则报错。起到防止csrf攻击的效果。 </p></blockquote><ol start="5"><li>org.springframework.security.web.authentication.logout.LogoutFilter</li></ol><blockquote><p>匹配URL为/logout的请求，实现用户退出,清除认证信息。 </p></blockquote><ol start="6"><li>org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter </li></ol><blockquote><p>认证操作全靠这个过滤器，默认匹配URL为/login且必须为POST请求。 </p></blockquote><ol start="7"><li>org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter </li></ol><blockquote><p>如果没有在配置文件中指定认证页面，则由该过滤器生成一个默认认证页面。 </p></blockquote><ol start="8"><li>org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter </li></ol><blockquote><p>由此过滤器可以生产一个默认的退出登录页面 </p></blockquote><ol start="9"><li>org.springframework.security.web.authentication.<a href="http://www.BasicAuthenticationFilter" target="_blank" rel="noopener">www.BasicAuthenticationFilter</a> </li></ol><blockquote><p>此过滤器会自动解析HTTP请求中头部名字为Authentication，且以Basic开头的头信息。 </p></blockquote><ol start="10"><li>org.springframework.security.web.savedrequest.RequestCacheAwareFilter </li></ol><blockquote><p>通过HttpSessionRequestCache内部维护了一个RequestCache，用于缓存HttpServletRequest </p></blockquote><ol start="11"><li>org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter </li></ol><blockquote><p>针对ServletRequest进行了一次包装，使得request具有更加丰富的API </p></blockquote><ol start="12"><li>org.springframework.security.web.authentication.AnonymousAuthenticationFilter </li></ol><blockquote><p>当SecurityContextHolder中认证信息为空,则会创建一个匿名用户存入到SecurityContextHolder中。 spring security为了兼容未登录的访问，也走了一套认证流程，只不过是一个匿名的身份。 </p></blockquote><ol start="13"><li>org.springframework.security.web.session.SessionManagementFilter </li></ol><blockquote><p>SecurityContextRepository限制同一用户开启多个会话的数量 </p></blockquote><ol start="14"><li>org.springframework.security.web.access.ExceptionTranslationFilter </li></ol><blockquote><p>异常转换过滤器位于整个springSecurityFilterChain的后方，用来转换整个链路中出现的异常 </p></blockquote><ol start="15"><li>org.springframework.security.web.access.intercept.FilterSecurityInterceptor </li></ol><blockquote><p>获取所配置资源访问的授权信息，根据SecurityContextHolder中存储的用户信息来决定其是否有权限。 </p></blockquote><h3 id="security过滤器链的加载原理"><a href="#security过滤器链的加载原理" class="headerlink" title="security过滤器链的加载原理"></a>security过滤器链的加载原理</h3><h4 id="DelegatingFilterProxy"><a href="#DelegatingFilterProxy" class="headerlink" title="DelegatingFilterProxy"></a>DelegatingFilterProxy</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain filterChain)</span> <span class="keyword">throws</span> ServletException, IOException </span>{</span><br><span class="line">        Filter delegateToUse = <span class="keyword">this</span>.delegate;</span><br><span class="line">        <span class="keyword">if</span> (delegateToUse == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">synchronized</span>(<span class="keyword">this</span>.delegateMonitor) {</span><br><span class="line">                delegateToUse = <span class="keyword">this</span>.delegate;</span><br><span class="line">                <span class="keyword">if</span> (delegateToUse == <span class="keyword">null</span>) {</span><br><span class="line">                    WebApplicationContext wac = <span class="keyword">this</span>.findWebApplicationContext();</span><br><span class="line">                    <span class="keyword">if</span> (wac == <span class="keyword">null</span>) {</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"No WebApplicationContext found: no ContextLoaderListener or DispatcherServlet registered?"</span>);</span><br><span class="line">                    }</span><br><span class="line"><span class="comment">//第一步：doFilter中最重要的一步，初始化上面私有过滤器属性delegate</span></span><br><span class="line">                    delegateToUse = <span class="keyword">this</span>.initDelegate(wac);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.delegate = delegateToUse;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"><span class="comment">//第三步：执行FilterChainProxy过滤器</span></span><br><span class="line">        <span class="keyword">this</span>.invokeDelegate(delegateToUse, request, response, filterChain);</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//第二步：直接看最终加载的过滤器到底是谁</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> Filter <span class="title">initDelegate</span><span class="params">(WebApplicationContext wac)</span> <span class="keyword">throws</span> ServletException </span>{</span><br><span class="line">        String targetBeanName = <span class="keyword">this</span>.getTargetBeanName();</span><br><span class="line">        Assert.state(targetBeanName != <span class="keyword">null</span>, <span class="string">"No target bean name set"</span>);</span><br><span class="line">        Filter delegate = (Filter)wac.getBean(targetBeanName, Filter<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.isTargetFilterLifecycle()) {</span><br><span class="line">            delegate.init(<span class="keyword">this</span>.getFilterConfig());</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> delegate;</span><br><span class="line">    }</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">invokeDelegate</span><span class="params">(Filter delegate, ServletRequest request, ServletResponse response, FilterChain filterChain)</span> <span class="keyword">throws</span> ServletException, IOException </span>{</span><br><span class="line">        delegate.doFilter(request, response, filterChain);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1604306010508" class="fancybox"><img alt="1604306010508" style="zoom: 80%;" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/1604306010508.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1604306010508"></a><h4 id="FilterChainProxy"><a href="#FilterChainProxy" class="headerlink" title="FilterChainProxy"></a>FilterChainProxy</h4><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="" class="fancybox"><img alt="" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/S5%5D%5BRRO4JTY6$%7B_%7BYCL2O~H.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title=""></a></p><h4 id="SecurityFilterChain"><a href="#SecurityFilterChain" class="headerlink" title="SecurityFilterChain"></a>SecurityFilterChain</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这是个接口，实现类也只有一个，这才是web.xml中配置的过滤器链对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">SecurityFilterChain</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(HttpServletRequest var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Filter&gt; <span class="title">getFilters</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="自定义页面使用"><a href="#自定义页面使用" class="headerlink" title="自定义页面使用"></a>自定义页面使用</h2><h3 id="security-xml-1"><a href="#security-xml-1" class="headerlink" title="security.xml"></a>security.xml</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--直接释放无需经过SpringSecurity过滤器的静态资源--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">pattern</span>=<span class="string">"/css/**"</span> <span class="attr">security</span>=<span class="string">"none"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">pattern</span>=<span class="string">"/img/**"</span> <span class="attr">security</span>=<span class="string">"none"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">pattern</span>=<span class="string">"/plugins/**"</span> <span class="attr">security</span>=<span class="string">"none"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">pattern</span>=<span class="string">"/failer.jsp"</span> <span class="attr">security</span>=<span class="string">"none"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">pattern</span>=<span class="string">"/favicon.ico"</span> <span class="attr">security</span>=<span class="string">"none"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--设置可以用spring的el表达式配置Spring Security并自动生成对应配置组件（过滤器）--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">security:http</span> <span class="attr">auto-config</span>=<span class="string">"true"</span> <span class="attr">use-expressions</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--指定login.jsp页面可以被匿名访问--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">"/login.jsp"</span> <span class="attr">access</span>=<span class="string">"permitAll()"</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--使用spring的el表达式来指定项目所有资源访问都必须有ROLE_USER或ROLE_ADMIN角色--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">security:intercept-url</span> <span class="attr">pattern</span>=<span class="string">"/**"</span> <span class="attr">access</span>=<span class="string">"hasAnyRole('ROLE_USER','ROLE_ADMIN')"</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--指定自定义的认证页面--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">security:form-login</span> <span class="attr">login-page</span>=<span class="string">"/login.jsp"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">login-processing-url</span>=<span class="string">"/login"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">default-target-url</span>=<span class="string">"/index.jsp"</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">authentication-failure-url</span>=<span class="string">"/failer.jsp"</span>/&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--指定退出登录后跳转的页面--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">security:logout</span> <span class="attr">logout-url</span>=<span class="string">"/logout"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">logout-success-url</span>=<span class="string">"/login.jsp"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">security:http</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p>修改login.jsp的跳转的请求地址，点击登录发现出现403错误，权限不足</p><blockquote><p> <strong>description</strong> Access to the specified resource has been forbidden.</p></blockquote><h3 id="csrf防护机制"><a href="#csrf防护机制" class="headerlink" title="csrf防护机制"></a>csrf防护机制</h3><blockquote><p>SpringSecurity的csrf机制把请求方式分成两类来处理 </p><ul><li>第一类：”GET”, “HEAD”, “TRACE”, “OPTIONS”四类请求可以直接通过 </li><li>第二类：除去上面四类，包括POST都要被验证携带token才能通过 </li></ul></blockquote><blockquote><p>方式一：直接禁用csrf，不推荐。 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--禁用csrf防护机制--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">security:csrf</span> <span class="attr">disabled</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p>方式二：在认证页面携带token请求。</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@taglib</span> uri=<span class="string">"http://www.springframework.org/security/tags"</span> prefix=<span class="string">"security"</span>%&gt;<span class="comment">//引入动态标签库</span></span><br><span class="line">&lt;form&gt;</span><br><span class="line">    &lt;security:csrfInput/&gt;<span class="comment">//携带token</span></span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></tbody></table></figure></div><h3 id="注销"><a href="#注销" class="headerlink" title="注销"></a>注销</h3><blockquote><p>跳转到     /logout</p><p>注意： 开启了CSRF防御，注销操作必须也是post请求</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"${pageContext.request.contextPath}/logout"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注销"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">security:csrfInput</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div></blockquote><h2 id="使用数据库数据完成认证"><a href="#使用数据库数据完成认证" class="headerlink" title="使用数据库数据完成认证"></a>使用数据库数据完成认证</h2><h3 id="认证流程分析"><a href="#认证流程分析" class="headerlink" title="认证流程分析"></a>认证流程分析</h3><blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">---&gt;</span></span><br><span class="line"><span class="comment">UsernamePasswordAuthenticationFilter:</span></span><br><span class="line"><span class="comment">//将填写的用户名和密码封装到了UsernamePasswordAuthenticationToken中</span></span><br><span class="line"><span class="comment">UsernamePasswordAuthenticationToken authRequest = new UsernamePasswordAuthenticationToken(username, password);</span></span><br><span class="line"><span class="comment">//调用AuthenticationManager对象实现认证 return this.getAuthenticationManager().authenticate(authRequest);</span></span><br><span class="line"><span class="comment">---&gt;</span></span><br><span class="line"><span class="comment">AuthenticationManager的实现类（ProviderManager）</span></span><br><span class="line"><span class="comment">//找到了对应认证类型就继续调用AuthenticationProvider对象完成认证业务。 </span></span><br><span class="line"><span class="comment">result = provider.authenticate(authentication);</span></span><br><span class="line"><span class="comment">---&gt;</span></span><br><span class="line"><span class="comment">AbstractUserDetailsAuthenticationProvider</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> UserDetails <span class="title">retrieveUser</span><span class="params">(String username, UsernamePasswordAuthenticationToken authentication)</span> <span class="keyword">throws</span> AuthenticationException </span>{</span><br><span class="line">        <span class="keyword">this</span>.prepareTimingAttackProtection();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//UserDetails就是SpringSecurity自己的用户对象。         //this.getUserDetailsService()其实就是得到UserDetailsService的一个实现类  //loadUserByUsername里面就是真正的认证逻辑 </span></span><br><span class="line">            <span class="comment">//也就是说我们可以直接编写一个UserDetailsService的实现类，告诉SpringSecurity就可以了！ </span></span><br><span class="line">            <span class="comment">//loadUserByUsername方法中只需要返回一个UserDetails对象即可</span></span><br><span class="line">            UserDetails loadedUser = <span class="keyword">this</span>.getUserDetailsService().loadUserByUsername(username);</span><br><span class="line">            <span class="keyword">if</span> (loadedUser == <span class="keyword">null</span>) {</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InternalAuthenticationServiceException(<span class="string">"UserDetailsService returned null, which is an interface contract violation"</span>);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> loadedUser;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (UsernameNotFoundException var4) {</span><br><span class="line">            <span class="keyword">this</span>.mitigateAgainstTimingAttack(authentication);</span><br><span class="line">            <span class="keyword">throw</span> var4;</span><br><span class="line">        } <span class="keyword">catch</span> (InternalAuthenticationServiceException var5) {</span><br><span class="line">            <span class="keyword">throw</span> var5;</span><br><span class="line">        } <span class="keyword">catch</span> (Exception var6) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InternalAuthenticationServiceException(var6.getMessage(), var6);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">---&gt;</span><br><span class="line"><span class="comment">//UsernamePasswordAuthenticationToken</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UsernamePasswordAuthenticationToken</span> <span class="keyword">extends</span> <span class="title">AbstractAuthenticationToken</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">510L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Object principal;</span><br><span class="line">    <span class="keyword">private</span> Object credentials;</span><br><span class="line"><span class="comment">//认证成功前，调用的是这个带有两个参数的。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UsernamePasswordAuthenticationToken</span><span class="params">(Object principal, Object credentials)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>((Collection)<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">this</span>.principal = principal;</span><br><span class="line">        <span class="keyword">this</span>.credentials = credentials;</span><br><span class="line">        <span class="keyword">this</span>.setAuthenticated(<span class="keyword">false</span>);</span><br><span class="line">    }</span><br><span class="line"><span class="comment">//认证成功后，调用的是这个带有三个参数的。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UsernamePasswordAuthenticationToken</span><span class="params">(Object principal, Object credentials, Collection&lt;? extends GrantedAuthority&gt; authorities)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(authorities);</span><br><span class="line">        <span class="keyword">this</span>.principal = principal;</span><br><span class="line">        <span class="keyword">this</span>.credentials = credentials;</span><br><span class="line">        <span class="keyword">super</span>.setAuthenticated(<span class="keyword">true</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">---&gt;<span class="keyword">super</span>(authorities)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AbstractAuthenticationToken</span><span class="params">(Collection&lt;? extends GrantedAuthority&gt; authorities)</span> </span>{</span><br><span class="line">    <span class="comment">//这时两个参数那个分支！</span></span><br><span class="line">        <span class="keyword">if</span> (authorities == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.authorities = AuthorityUtils.NO_AUTHORITIES;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            Iterator var2 = authorities.iterator();</span><br><span class="line"><span class="comment">//三个参数的    添加权限信息的步骤</span></span><br><span class="line">            GrantedAuthority a;</span><br><span class="line">            <span class="keyword">do</span> {</span><br><span class="line">                <span class="keyword">if</span> (!var2.hasNext()) {</span><br><span class="line">                    ArrayList&lt;GrantedAuthority&gt; temp = <span class="keyword">new</span> ArrayList(authorities.size());</span><br><span class="line">                    temp.addAll(authorities);</span><br><span class="line">                    <span class="keyword">this</span>.authorities = Collections.unmodifiableList(temp);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                a = (GrantedAuthority)var2.next();</span><br><span class="line">            } <span class="keyword">while</span>(a != <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Authorities collection cannot contain any null elements"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">---&gt; AbstractAuthenticationProcessingFilter</span><br><span class="line"><span class="comment">//认证成功，将认证信息存储到SecurityContext中！ SecurityContextHolder.getContext().setAuthentication(authResult);</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">可见AbstractAuthenticationProcessingFilter这个过滤器对于认证成功与否，做了两个分支，成功执行</span></span><br><span class="line"><span class="comment">successfulAuthentication，失败执行unsuccessfulAuthentication*/</span></span><br></pre></td></tr></tbody></table></figure></div></blockquote><h3 id="实现认证功能"><a href="#实现认证功能" class="headerlink" title="实现认证功能"></a>实现认证功能</h3><blockquote><ol><li><p>UserService接口继承UserDetailsService</p></li><li><p>重写loadeduser</p><pre><code>@Overridepublic UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {    SysUser sysUser = userDao.findByName(username);    if (sysUser == null) {        //若用户名不对，直接返回null，表示认证失败。        return null;    }    List&lt;SimpleGrantedAuthority&gt; authorities = new ArrayList&lt;&gt;();    List&lt;SysRole&gt; roles = sysUser.getRoles();    for (SysRole role : roles) {        authorities.add(new SimpleGrantedAuthority(role.getRoleName()));    }    //最终需要返回一个SpringSecurity的UserDetails对象，{noop}表示不加密认证。    return new User(sysUser.getUsername(), "{noop}" + sysUser.getPassword(), authorities);}</code></pre></li><li><p>Security配置文件中指定认证使用的业务对象</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置Spring Security认证用户信息的来源--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">security:authentication-manager</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security:authentication-provider</span> <span class="attr">user-service-ref</span>=<span class="string">"userServiceImpl"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;security:user-service&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;security:user name="user" password="{noop}user" authorities="ROLE_USER"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--                &lt;security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--            &lt;/security:user-service&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">security:authentication-provider</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">security:authentication-manager</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div></li></ol></blockquote><h3 id="实现加密认证"><a href="#实现加密认证" class="headerlink" title="实现加密认证"></a>实现加密认证</h3><h4 id="加盐加密"><a href="#加盐加密" class="headerlink" title="加盐加密"></a>加盐加密</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">    BCryptPasswordEncoder bCryptPasswordEncoder=<span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    System.out.println(bCryptPasswordEncoder.encode(<span class="string">"123456"</span>));</span><br><span class="line">}</span><br><span class="line"><span class="comment">//$2a$10$/.kJbT3YHzWPdf7tK/CjOe7LdUlFPa3l.YSLRyFv6sEk/KlMKhVZy</span></span><br><span class="line"><span class="comment">//$2a$10$O4VDcWESMuihBOO8qw3bi.tPUJ1aho/SvJsq5B6ZNoxNjRClVab8C</span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 把加密对象放到ioc容器 --&gt;</span><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"passwordEncoder"</span>      <span class="attr">class</span>=<span class="string">"org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p>修改用户保存</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(SysUser user)</span> </span>{</span><br><span class="line">        user.setPassword(bCryptPasswordEncoder.encode(user.getPassword()));</span><br><span class="line">        userDao.save(user);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><h4 id="idea-报错-端口被占用"><a href="#idea-报错-端口被占用" class="headerlink" title="idea 报错 端口被占用"></a>idea 报错 端口被占用</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">shell</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano|findstr 1099</span><br><span class="line"></span><br><span class="line">taskkill -f -pid id</span><br></pre></td></tr></tbody></table></figure></div><h2 id="设置用户状态"><a href="#设置用户状态" class="headerlink" title="设置用户状态"></a>设置用户状态</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String username, String password, <span class="keyword">boolean</span> enabled, <span class="keyword">boolean</span> accountNonExpired, <span class="keyword">boolean</span> credentialsNonExpired, <span class="keyword">boolean</span> accountNonLocked, Collection&lt;? extends GrantedAuthority&gt; authorities)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (username != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(username) &amp;&amp; password != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.username = username;</span><br><span class="line">            <span class="keyword">this</span>.password = password;</span><br><span class="line">            <span class="keyword">this</span>.enabled = enabled;</span><br><span class="line">            <span class="keyword">this</span>.accountNonExpired = accountNonExpired;</span><br><span class="line">            <span class="keyword">this</span>.credentialsNonExpired = credentialsNonExpired;</span><br><span class="line">            <span class="keyword">this</span>.accountNonLocked = accountNonLocked;</span><br><span class="line">            <span class="keyword">this</span>.authorities = Collections.unmodifiableSet(sortAuthorities(authorities));</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Cannot pass null or empty values to constructor"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><blockquote><ul><li>boolean enabled 是否可用 </li><li>boolean accountNonExpired 账户是否失效 </li><li>boolean credentialsNonExpired 秘密是否失效 </li><li>boolean accountNonLocked 账户是否锁定</li></ul></blockquote><h3 id="修改封装对象"><a href="#修改封装对象" class="headerlink" title="修改封装对象"></a>修改封装对象</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只有状态为1的用户才能登录</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> User(sysUser.getUsername(), sysUser.getPassword(), sysUser.getStatus()==<span class="number">1</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, authorities);</span><br></pre></td></tr></tbody></table></figure></div><h2 id="remember-me"><a href="#remember-me" class="headerlink" title="remember me"></a>remember me</h2><h3 id="逻辑分析"><a href="#逻辑分析" class="headerlink" title="逻辑分析"></a>逻辑分析</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*AbstractAuthenticationProcessingFilter---&gt;父类 AbstractAuthenticationProcessingFilter</span></span><br><span class="line"><span class="comment">认证成功后干了什么？</span></span><br><span class="line"><span class="comment">loginsuccess--&gt;*/</span>   </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">loginSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication successfulAuthentication)</span> </span>{</span><br><span class="line">   <span class="comment">// 这里this.parameter点进去是上面的private String parameter = "remember-me";</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">this</span>.rememberMeRequested(request, <span class="keyword">this</span>.parameter)) {</span><br><span class="line">            <span class="keyword">this</span>.logger.debug(<span class="string">"Remember-me login not requested."</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">this</span>.onLoginSuccess(request, response, successfulAuthentication);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">rememberMeRequested</span><span class="params">(HttpServletRequest request, String parameter)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.alwaysRemember) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="comment">// 从上面的字parameter的值为"remember-me"</span></span><br><span class="line">            <span class="comment">// 也就是说，此功能提交的属性名必须为"remember-me"</span></span><br><span class="line">            String paramValue = request.getParameter(parameter);</span><br><span class="line">            <span class="keyword">if</span> (paramValue != <span class="keyword">null</span> &amp;&amp; (paramValue.equalsIgnoreCase(<span class="string">"true"</span>) || paramValue.equalsIgnoreCase(<span class="string">"on"</span>) || paramValue.equalsIgnoreCase(<span class="string">"yes"</span>) || paramValue.equals(<span class="string">"1"</span>))) {</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">this</span>.logger.isDebugEnabled()) {</span><br><span class="line">                    <span class="keyword">this</span>.logger.debug(<span class="string">"Did not send remember-me cookie (principal did not set parameter '"</span> + parameter + <span class="string">"')"</span>);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"><span class="comment">//勾选之后</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onLoginSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication successfulAuthentication)</span> </span>{</span><br><span class="line">        String username = successfulAuthentication.getName();</span><br><span class="line">        <span class="keyword">this</span>.logger.debug(<span class="string">"Creating new persistent login for user "</span> + username);</span><br><span class="line">    <span class="comment">//创建记住我的token</span></span><br><span class="line">        PersistentRememberMeToken persistentToken = <span class="keyword">new</span> PersistentRememberMeToken(username, <span class="keyword">this</span>.generateSeriesData(), <span class="keyword">this</span>.generateTokenData(), <span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//将token持久化到数据库 </span></span><br><span class="line">            <span class="keyword">this</span>.tokenRepository.createNewToken(persistentToken);</span><br><span class="line">            <span class="comment">//将token写入到浏览器的Cookie中</span></span><br><span class="line">            <span class="keyword">this</span>.addCookie(persistentToken, request, response);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception var7) {</span><br><span class="line">            <span class="keyword">this</span>.logger.error(<span class="string">"Failed to save persistent token "</span>, var7);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><h3 id="前端实现"><a href="#前端实现" class="headerlink" title="前端实现"></a>前端实现</h3><p>name和value二等值不能乱写 ，只能是规定的4中之一（if (paramValue != null &amp;&amp; (paramValue.equalsIgnoreCase(“true”) || paramValue.equalsIgnoreCase(“on”) || paramValue.equalsIgnoreCase(“yes”) || paramValue.equals(“1”)))）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"remember-me"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span> 记住 下次自动登录<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="开启过滤器"><a href="#开启过滤器" class="headerlink" title="开启过滤器"></a>开启过滤器</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启remember me过滤器，设置token存储时间为60秒--&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">security:remember-me</span> <span class="attr">token-validity-seconds</span>=<span class="string">"60"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="remember me" class="fancybox"><img alt="remember me" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/445454545.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="remember me"></a></p><h3 id="持久化remember-me-信息"><a href="#持久化remember-me-信息" class="headerlink" title="持久化remember me  信息"></a>持久化remember me  信息</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`persistent_logins`</span> ( </span><br><span class="line">    <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>, </span><br><span class="line">    <span class="string">`series`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>, </span><br><span class="line">    <span class="string">`token`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>, </span><br><span class="line">    <span class="string">`last_used`</span> <span class="built_in">timestamp</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="string">`series`</span>) ) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启remember me过滤器， </span></span><br><span class="line"><span class="comment">data-source-ref="dataSource" 指定数据库连接池 </span></span><br><span class="line"><span class="comment">token-validity-seconds="60" 设置token存储时间为60秒 可省略</span></span><br><span class="line"><span class="comment"> remember-me-parameter="remember-me" 指定记住的参数名 可省略 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">security:remember-me</span> <span class="attr">data-source-ref</span>=<span class="string">"dataSource"</span></span></span><br><span class="line"><span class="tag">                                <span class="attr">token-validity-seconds</span>=<span class="string">"60"</span></span></span><br><span class="line"><span class="tag">                              <span class="attr">remember-me-parameter</span>=<span class="string">"remember-me"</span> /&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="显示认证用户的名称"><a href="#显示认证用户的名称" class="headerlink" title="显示认证用户的名称"></a>显示认证用户的名称</h2><h3 id="前端动态标签获取"><a href="#前端动态标签获取" class="headerlink" title="前端动态标签获取"></a>前端动态标签获取</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">security:authentication</span> <span class="attr">property</span>=<span class="string">"principal.username"</span> /&gt;</span></span><br><span class="line">或者</span><br><span class="line">&lt;%--&lt;security:authentication property="name" /&gt;--%&gt;</span><br></pre></td></tr></tbody></table></figure></div><h3 id="后端返回"><a href="#后端返回" class="headerlink" title="后端返回"></a>后端返回</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SecurityContextHolder.getContext().getAuthentication().getName();</span><br></pre></td></tr></tbody></table></figure></div><h2 id="动态展示菜单"><a href="#动态展示菜单" class="headerlink" title="动态展示菜单"></a>动态展示菜单</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"treeview-menu"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">security:authorize</span> <span class="attr">access</span>=<span class="string">"hasAnyRole('ROLE_PRODUCT','ROLE_ADMIN')"</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"system-setting"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">href</span>=<span class="string">"${pageContext.request.contextPath}/product/findAll"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 产品管理</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">security:authorize</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">security:authorize</span> <span class="attr">access</span>=<span class="string">"hasAnyRole('ROLE_ORDER','ROLE_ADMIN')"</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"system-setting"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">href</span>=<span class="string">"${pageContext.request.contextPath}/order/findAll"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-circle-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 订单管理</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">security:authorize</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="授权操作"><a href="#授权操作" class="headerlink" title="授权操作"></a>授权操作</h2><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="IOC容器结构说明" class="fancybox"><img alt="IOC容器结构说明" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/IOC.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="IOC容器结构说明"></a></p><blockquote><p> 说明：SpringSecurity可以通过注解的方式来控制类或者方法的访问权限。注解需要对应的注解支持，若注解放在controller类中，对应注解支持应该放在mvc配置文件中，因为controller类是有mvc配置文件扫描并创建的，同理，注解放在service类中，对应注解支持应该放在spring配置文件中。</p></blockquote><h3 id="开启授权的注解支持"><a href="#开启授权的注解支持" class="headerlink" title="开启授权的注解支持"></a>开启授权的注解支持</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开启权限控制注解支持</span></span><br><span class="line"><span class="comment">jsr250-annotations="enabled"表示支持jsr250-api的注解，需要jsr250-api的jar包</span></span><br><span class="line"><span class="comment">pre-post-annotations="enabled"表示支持spring表达式注解</span></span><br><span class="line"><span class="comment">secured-annotations="enabled"这才是SpringSecurity提供的注解 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">security:global-method-security</span></span></span><br><span class="line"><span class="tag">        <span class="attr">jsr250-annotations</span>=<span class="string">"enabled"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">pre-post-annotations</span>=<span class="string">"enabled"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">secured-annotations</span>=<span class="string">"enabled"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Secured</span>({<span class="string">"ROLE_ADMIN"</span>,<span class="string">"ROLE_ORDER"</span>}))<span class="comment">//SpringSecurity注解</span></span><br><span class="line"><span class="meta">@RolesAllowed</span>({<span class="string">"ROLE_ADMIN"</span>,<span class="string">"ROLE_PRODUCT"</span>})  <span class="comment">//JSR-250注解</span></span><br><span class="line"><span class="meta">@PreAuthorize</span>(<span class="string">"hasAnyRole('ROLE_ADMIN','ROLE_PRODUCT')"</span>)<span class="comment">//spring表达式注解</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="权限不足异常处理"><a href="#权限不足异常处理" class="headerlink" title="权限不足异常处理"></a>权限不足异常处理</h2><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="异常处理流程" class="fancybox"><img alt="异常处理流程" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/%E5%BC%82%E5%B8%B8%E6%B5%81%E7%A8%8B%E5%9B%BE.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="异常处理流程"></a></p><h3 id="在security-xml中处理"><a href="#在security-xml中处理" class="headerlink" title="在security.xml中处理"></a>在security.xml中处理</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--403异常处理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">security:access-denied-handler</span> <span class="attr">error-page</span>=<span class="string">"/403.jsp"</span>/&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="在web-xml中处理"><a href="#在web-xml中处理" class="headerlink" title="在web.xml中处理"></a>在web.xml中处理</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">error-code</span>&gt;</span>403<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">location</span>&gt;</span>/403.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="异常处理器"><a href="#异常处理器" class="headerlink" title="异常处理器"></a><strong>异常处理器</strong></h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ControllerExceptionAdvice</span> </span>{ </span><br><span class="line">    <span class="comment">//只有出现AccessDeniedException异常才调转403.jsp页面 </span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(AccessDeniedException<span class="class">.<span class="keyword">class</span>) </span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">String</span> <span class="title">exceptionAdvice</span>()</span></span><br><span class="line"><span class="class">    </span>{ </span><br><span class="line">        <span class="keyword">return</span> <span class="string">"forward:/403.jsp"</span>; </span><br><span class="line">    } </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="security与springboot整合—集中式"><a href="#security与springboot整合—集中式" class="headerlink" title="security与springboot整合—集中式"></a>security与springboot整合—集中式</h1><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><p>依赖 端口  启动器 数据库等等</p><h3 id="整合jsp"><a href="#整合jsp" class="headerlink" title="整合jsp"></a>整合jsp</h3><p>springboot不推荐视同jsp，需要导入tomcat插件启动项目，不能再用SpringBoot默认tomcat了。 </p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="security配置类"><a href="#security配置类" class="headerlink" title="security配置类"></a>security配置类</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.WebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>{</span><br><span class="line">    <span class="comment">//认真用户的来源</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        auth.inMemoryAuthentication().withUser(<span class="string">"user"</span>)</span><br><span class="line">                .password(<span class="string">"{noop}123456"</span>)</span><br><span class="line">                .roles(<span class="string">"USER"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">"/login.jsp"</span>, <span class="string">"/failer.jsp"</span>, <span class="string">"/css/**"</span>, <span class="string">"/img/**"</span>, <span class="string">"/plugins/**"</span>)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .antMatchers(<span class="string">"/**"</span>)</span><br><span class="line">                .hasAnyRole(<span class="string">"USER"</span>,<span class="string">"ADMIN"</span>)</span><br><span class="line">                .anyRequest()</span><br><span class="line">                .authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .formLogin()</span><br><span class="line">                .loginPage(<span class="string">"/login.jsp"</span>)</span><br><span class="line">                .loginProcessingUrl(<span class="string">"/login"</span>)</span><br><span class="line">                .successForwardUrl(<span class="string">"/index.jsp"</span>)</span><br><span class="line">                .failureForwardUrl(<span class="string">"/failer.jsp"</span>)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .and()</span><br><span class="line">                .logout()</span><br><span class="line">                .logoutUrl(<span class="string">".logout"</span>)</span><br><span class="line">                .logoutSuccessUrl(<span class="string">"/login.jsp"</span>)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .and()</span><br><span class="line">                .csrf()</span><br><span class="line">                .disable();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="数据库认证"><a href="#数据库认证" class="headerlink" title="数据库认证"></a>数据库认证</h2><blockquote><p>直接实现SpringSecurity的用户对象接口，并添加角色集合私有属性。 </p><p>注意接口属性都要标记不参与json的处理。</p></blockquote><h3 id="SysRole"><a href="#SysRole" class="headerlink" title="SysRole"></a>SysRole</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonIgnore;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.GrantedAuthority;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysRole</span> <span class="keyword">implements</span> <span class="title">GrantedAuthority</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String roleName;</span><br><span class="line">    <span class="keyword">private</span> String roleDesc;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRoleName</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> roleName;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRoleName</span><span class="params">(String roleName)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.roleName = roleName;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRoleDesc</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> roleDesc;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRoleDesc</span><span class="params">(String roleDesc)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.roleDesc = roleDesc;</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@JsonIgnore</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAuthority</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> roleName;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="SysUser"><a href="#SysUser" class="headerlink" title="SysUser"></a>SysUser</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">import com.fasterxml.jackson.annotation.JsonIgnore;</span><br><span class="line">import org.springframework.security.core.GrantedAuthority;</span><br><span class="line">import org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Collection;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public class SysUser implements UserDetails {</span><br><span class="line"></span><br><span class="line">    private Integer id;</span><br><span class="line">    private String username;</span><br><span class="line">    private String password;</span><br><span class="line">    private Integer status;</span><br><span class="line">    private List&lt;SysRole&gt; roles = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    public Integer getId() {</span><br><span class="line">        return id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public void setId(Integer id) {</span><br><span class="line">        this.id = id;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public void setUsername(String username) {</span><br><span class="line">        this.username = username;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public void setPassword(String password) {</span><br><span class="line">        this.password = password;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public Integer getStatus() {</span><br><span class="line">        return status;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public void setStatus(Integer status) {</span><br><span class="line">        this.status = status;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public List&lt;SysRole&gt; getRoles() {</span><br><span class="line">        return roles;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public void setRoles(List&lt;SysRole&gt; roles) {</span><br><span class="line">        this.roles = roles;</span><br><span class="line">    }</span><br><span class="line">    @JsonIgnore</span><br><span class="line">    @Override</span><br><span class="line">    public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() {</span><br><span class="line">        return roles;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getPassword() {</span><br><span class="line">        return password;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public String getUsername() {</span><br><span class="line">        return username;</span><br><span class="line">    }</span><br><span class="line">    @JsonIgnore</span><br><span class="line">    @Override</span><br><span class="line">    public boolean isAccountNonExpired() {</span><br><span class="line">        return true;</span><br><span class="line">    }</span><br><span class="line">    @JsonIgnore</span><br><span class="line">    @Override</span><br><span class="line">    public boolean isAccountNonLocked() {</span><br><span class="line">        return true;</span><br><span class="line">    }</span><br><span class="line">    @JsonIgnore</span><br><span class="line">    @Override</span><br><span class="line">    public boolean isCredentialsNonExpired() {</span><br><span class="line">        return true;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @JsonIgnore</span><br><span class="line">    @Override</span><br><span class="line">    public boolean isEnabled() {</span><br><span class="line">        return true;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="dao"><a href="#dao" class="headerlink" title="dao"></a>dao</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RoleMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">SysRole</span>&gt; </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT r.id, r.role_name roleName, r.role_desc roleDesc "</span></span><br><span class="line">            + <span class="string">"FROM sys_role r, sys_user_role ur "</span></span><br><span class="line">            + <span class="string">"WHERE r.id=ur.rid AND ur.uid=#{uid}"</span>)</span><br><span class="line">    <span class="function">List&lt;SysRole&gt; <span class="title">findByUid</span><span class="params">(Integer uid)</span></span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">SysUser</span>&gt; </span>{</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from sys_user where username = #{username}"</span>)</span><br><span class="line">    <span class="meta">@Results</span>({</span><br><span class="line">        <span class="meta">@Result</span>(id = <span class="keyword">true</span>, property = <span class="string">"id"</span>, column = <span class="string">"id"</span>),</span><br><span class="line">        <span class="meta">@Result</span>(property = <span class="string">"roles"</span>, column = <span class="string">"id"</span>,</span><br><span class="line">                javaType = List<span class="class">.<span class="keyword">class</span>,</span></span><br><span class="line"><span class="class">                <span class="title">many</span> </span>= <span class="meta">@Many</span>(select = <span class="string">"com.raptor.springboot_security_jsp.mapper.RoleMapper.findByUid"</span>))</span><br><span class="line">    })</span><br><span class="line">    <span class="function">SysUser <span class="title">findByName</span><span class="params">(String username)</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="UserService"><a href="#UserService" class="headerlink" title="UserService"></a>UserService</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> <span class="keyword">extends</span> <span class="title">UserDetailsService</span> </span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserServiceImpl</span><span class="params">(UserMapper userMapper)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.userMapper = userMapper;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String s)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>{</span><br><span class="line">        <span class="keyword">return</span> userMapper.findByName(s);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="security-config"><a href="#security-config" class="headerlink" title="security.config"></a>security.config</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.raptor.springboot_security_jsp.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.builders.HttpSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BCryptPasswordEncoder <span class="title">encoder</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line"><span class="comment">//        auth.inMemoryAuthentication().withUser("user")</span></span><br><span class="line"><span class="comment">//                .password("{noop}123456")</span></span><br><span class="line"><span class="comment">//                .roles("USER");</span></span><br><span class="line">        auth.userDetailsService(userService).passwordEncoder(encoder());</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">"/login.jsp"</span>, <span class="string">"/failer.jsp"</span>, <span class="string">"/css/**"</span>, <span class="string">"/img/**"</span>, <span class="string">"/plugins/**"</span>)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .antMatchers(<span class="string">"/**"</span>)</span><br><span class="line">                .hasAnyRole(<span class="string">"USER"</span>,<span class="string">"ADMIN"</span>)</span><br><span class="line">                .anyRequest()</span><br><span class="line">                .authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .formLogin()</span><br><span class="line">                .loginPage(<span class="string">"/login.jsp"</span>)</span><br><span class="line">                .loginProcessingUrl(<span class="string">"/login"</span>)</span><br><span class="line">                .successForwardUrl(<span class="string">"/index.jsp"</span>)</span><br><span class="line">                .failureForwardUrl(<span class="string">"/failer.jsp"</span>)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .and()</span><br><span class="line">                .logout()</span><br><span class="line">                .logoutUrl(<span class="string">"/logout"</span>)</span><br><span class="line">                .logoutSuccessUrl(<span class="string">"/login.jsp"</span>)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .and()</span><br><span class="line">                .csrf()</span><br><span class="line">                .disable();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="权限认证"><a href="#权限认证" class="headerlink" title="权限认证"></a>权限认证</h2><h3 id="注解支持"><a href="#注解支持" class="headerlink" title="注解支持"></a>注解支持</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableGlobalMethodSecurity {</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">prePostEnabled</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">securedEnabled</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">jsr250Enabled</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//在security配置类表明注解支持</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(securedEnabled = <span class="keyword">true</span>)</span><br></pre></td></tr></tbody></table></figure></div><h3 id="自定义错误处理页面"><a href="#自定义错误处理页面" class="headerlink" title="自定义错误处理页面"></a>自定义错误处理页面</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandleControllerException</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(RuntimeException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">String</span> <span class="title">handleException</span>(<span class="title">RuntimeException</span> <span class="title">e</span>)</span>{</span><br><span class="line">        <span class="keyword">if</span>(e <span class="keyword">instanceof</span> AccessDeniedException){</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/403.jsp"</span>;</span><br><span class="line">        }<span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"redirect:/500.jsp"</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="security与springboot整合—分布式"><a href="#security与springboot整合—分布式" class="headerlink" title="security与springboot整合—分布式"></a>security与springboot整合—分布式</h1><h2 id="分布式基础"><a href="#分布式基础" class="headerlink" title="分布式基础"></a>分布式基础</h2><blockquote><p>分布式认证，即我们常说的单点登录，简称SSO，指的是在多应用系统的项目中，用户只需要登录一次，就可以访 问所有互相信任的应用系统。 </p></blockquote><h3 id="分布式认证流程图"><a href="#分布式认证流程图" class="headerlink" title="分布式认证流程图"></a>分布式认证流程图</h3><blockquote><p>在分布式项目中，每台服务器都有各自独立的session，而这些session之间是无法直接共享资 </p><p>源的，所以，session通常不能被作为单点登录的技术方案。</p></blockquote><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="分布式认证流程图" class="fancybox"><img alt="分布式认证流程图" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/untidy/fenbushi.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="分布式认证流程图"></a></p><p><strong>单点登录的实现分两大环节：</strong> </p><ul><li><p>用户认证：这一环节主要是用户向认证服务器发起认证请求，认证服务器给用户返回一个成功的令牌token， 主要在认证服务器中完成，即图中的A系统，注意A系统只能有一个。 </p></li><li><p>身份校验：这一环节是用户携带token去访问其他服务器时，在其他服务器中要对token的真伪进行检验，主 要在资源服务器中完成，即图中的B系统，这里B系统可以有很多个。</p></li></ul><h3 id="JWT（JSON-Web-Token）"><a href="#JWT（JSON-Web-Token）" class="headerlink" title="JWT（JSON Web Token）"></a>JWT（JSON Web Token）</h3><h4 id="JWT生成的token由三部分组成："><a href="#JWT生成的token由三部分组成：" class="headerlink" title="JWT生成的token由三部分组成："></a>JWT生成的token由三部分组成：</h4><ul><li><p>头部：主要设置一些规范信息，签名部分的编码格式就在头部中声明。 </p></li><li><p>载荷：token中存放有效信息的部分，比如用户名，用户角色，过期时间等，但是不要放密码，会泄露！ </p></li><li><p>签名：将头部与载荷分别采用base64编码后，用“.”相连，再加入盐，最后使用头部声明的编码类型进行编 码，就得到了签名。 </p></li></ul><h4 id="非对称加密RSA介绍"><a href="#非对称加密RSA介绍" class="headerlink" title="非对称加密RSA介绍"></a>非对称加密RSA介绍</h4><blockquote><p> 基本原理：同时生成两把密钥：私钥和公钥，私钥隐秘保存，公钥可以下发给信任客户端 </p></blockquote><blockquote><ul><li>私钥加密，持有私钥或公钥才可以解密 </li></ul></blockquote><blockquote><ul><li>公钥加密，持有私钥才可解密 </li></ul></blockquote><blockquote><p> 优点：安全，难以破解 </p></blockquote><blockquote><p> 缺点：算法比较耗时，为了安全，可以接受 </p></blockquote><h2 id="SpringSecurity-JWT-RSA分布式认证思路分析"><a href="#SpringSecurity-JWT-RSA分布式认证思路分析" class="headerlink" title="SpringSecurity+JWT+RSA分布式认证思路分析"></a>SpringSecurity+JWT+RSA分布式认证思路分析</h2><h3 id="集中式认证"><a href="#集中式认证" class="headerlink" title="集中式认证"></a>集中式认证</h3><ul><li>用户认证： </li></ul><blockquote><p>使用UsernamePasswordAuthenticationFilter过滤器中attemptAuthentication方法实现认证功能，该过滤 器父类中successfulAuthentication方法实现认证成功后的操作。 </p></blockquote><ul><li>身份校验： </li></ul><blockquote><p> 使用BasicAuthenticationFilter过滤器中doFilterInternal方法验证是否登录，以决定能否进入后续过滤器。 </p></blockquote><h3 id="分布式认证"><a href="#分布式认证" class="headerlink" title="分布式认证"></a>分布式认证</h3><ul><li>用户认证： </li></ul><blockquote><p>由于，分布式项目，多数是前后端分离的架构设计，我们要满足可以接受异步post的认证请求参数，需要修改UsernamePasswordAuthenticationFilter过滤器中attemptAuthentication方法，让其能够接收请求体。 另外，默认successfulAuthentication方法在认证通过后，是把用户信息直接放入session就完事了，现在我 们需要修改这个方法，在认证通过后生成token并返回给用户。 </p></blockquote><ul><li>身份校验： </li></ul><blockquote><p>原来BasicAuthenticationFilter过滤器中doFilterInternal方法校验用户是否登录，就是看session中是否有用 户信息，我们要修改为，验证用户携带的token是否合法，并解析出用户信息，交给SpringSecurity，以便于后续的授权功能可以正常使用。</p></blockquote><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><h3 id="common"><a href="#common" class="headerlink" title="common"></a>common</h3><h5 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">xml</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jwt所需jar包--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.jsonwebtoken<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jjwt-jackson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--lombok插件--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--处理日期工具包--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>joda-time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--处理json工具包--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--日志包--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--测试包--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><h5 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h5><h6 id="JsonUtils"><a href="#JsonUtils" class="headerlink" title="JsonUtils"></a>JsonUtils</h6><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JsonUtils</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(JsonUtils<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toString</span><span class="params">(Object obj)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (obj.getClass() == String<span class="class">.<span class="keyword">class</span>) </span>{</span><br><span class="line">            <span class="keyword">return</span> (String) obj;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">return</span> mapper.writeValueAsString(obj);</span><br><span class="line">        } <span class="keyword">catch</span> (JsonProcessingException e) {</span><br><span class="line">            logger.error(<span class="string">"json序列化出错："</span> + obj, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">toBean</span><span class="params">(String json, Class&lt;T&gt; tClass)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">return</span> mapper.readValue(json, tClass);</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            logger.error(<span class="string">"json解析出错："</span> + json, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; <span class="function">List&lt;E&gt; <span class="title">toList</span><span class="params">(String json, Class&lt;E&gt; eClass)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">return</span> mapper.readValue(json, mapper.getTypeFactory().constructCollectionType(List<span class="class">.<span class="keyword">class</span>, <span class="title">eClass</span>))</span>;</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            logger.error(<span class="string">"json解析出错："</span> + json, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;K, V&gt; <span class="function">Map&lt;K, V&gt; <span class="title">toMap</span><span class="params">(String json, Class&lt;K&gt; kClass, Class&lt;V&gt; vClass)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">return</span> mapper.readValue(json, mapper.getTypeFactory().constructMapType(Map<span class="class">.<span class="keyword">class</span>, <span class="title">kClass</span>, <span class="title">vClass</span>))</span>;</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            logger.error(<span class="string">"json解析出错："</span> + json, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">nativeRead</span><span class="params">(String json, TypeReference&lt;T&gt; type)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">return</span> mapper.readValue(json, type);</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            logger.error(<span class="string">"json解析出错："</span> + json, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h6 id="JwtUtils"><a href="#JwtUtils" class="headerlink" title="JwtUtils"></a>JwtUtils</h6><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtUtils</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String JWT_PAYLOAD_USER_KEY = <span class="string">"user"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私钥加密token</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userInfo   载荷中的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> privateKey 私钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expire     过期时间，单位分钟</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> JWT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateTokenExpireInMinutes</span><span class="params">(Object userInfo, PrivateKey privateKey, <span class="keyword">int</span> expire)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> Jwts.builder()</span><br><span class="line">                .claim(JWT_PAYLOAD_USER_KEY, JsonUtils.toString(userInfo))</span><br><span class="line">                .setId(createJTI())</span><br><span class="line">                .setExpiration(DateTime.now().plusMinutes(expire).toDate())</span><br><span class="line">                .signWith(privateKey, SignatureAlgorithm.RS256)</span><br><span class="line">                .compact();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私钥加密token</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userInfo   载荷中的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> privateKey 私钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> expire     过期时间，单位秒</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> JWT</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateTokenExpireInSeconds</span><span class="params">(Object userInfo, PrivateKey privateKey, <span class="keyword">int</span> expire)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> Jwts.builder()</span><br><span class="line">                .claim(JWT_PAYLOAD_USER_KEY, JsonUtils.toString(userInfo))</span><br><span class="line">                .setId(createJTI())</span><br><span class="line">                .setExpiration(DateTime.now().plusSeconds(expire).toDate())</span><br><span class="line">                .signWith(privateKey, SignatureAlgorithm.RS256)</span><br><span class="line">                .compact();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 公钥解析token</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token     用户请求中的token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicKey 公钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Jws&lt;Claims&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Jws&lt;Claims&gt; <span class="title">parserToken</span><span class="params">(String token, PublicKey publicKey)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> Jwts.parser().setSigningKey(publicKey).parseClaimsJws(token);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">createJTI</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(Base64.getEncoder().encode(UUID.randomUUID().toString().getBytes()));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取token中的用户信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token     用户请求中的令牌</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicKey 公钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Payload&lt;T&gt; <span class="title">getInfoFromToken</span><span class="params">(String token, PublicKey publicKey, Class&lt;T&gt; userType)</span> </span>{</span><br><span class="line">        Jws&lt;Claims&gt; claimsJws = parserToken(token, publicKey);</span><br><span class="line">        Claims body = claimsJws.getBody();</span><br><span class="line">        Payload&lt;T&gt; claims = <span class="keyword">new</span> Payload&lt;&gt;();</span><br><span class="line">        claims.setId(body.getId());</span><br><span class="line">        claims.setUserInfo(JsonUtils.toBean(body.get(JWT_PAYLOAD_USER_KEY).toString(), userType));</span><br><span class="line">        claims.setExpiration(body.getExpiration());</span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取token中的载荷信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token     用户请求中的令牌</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicKey 公钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">Payload&lt;T&gt; <span class="title">getInfoFromToken</span><span class="params">(String token, PublicKey publicKey)</span> </span>{</span><br><span class="line">        Jws&lt;Claims&gt; claimsJws = parserToken(token, publicKey);</span><br><span class="line">        Claims body = claimsJws.getBody();</span><br><span class="line">        Payload&lt;T&gt; claims = <span class="keyword">new</span> Payload&lt;&gt;();</span><br><span class="line">        claims.setId(body.getId());</span><br><span class="line">        claims.setExpiration(body.getExpiration());</span><br><span class="line">        <span class="keyword">return</span> claims;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h6 id="RsaUtils"><a href="#RsaUtils" class="headerlink" title="RsaUtils"></a>RsaUtils</h6><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RsaUtils</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_KEY_SIZE = <span class="number">2048</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从文件中读取公钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename 公钥保存路径，相对于classpath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 公钥对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PublicKey <span class="title">getPublicKey</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = readFile(filename);</span><br><span class="line">        <span class="keyword">return</span> getPublicKey(bytes);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 从文件中读取密钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filename 私钥保存路径，相对于classpath</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 私钥对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> PrivateKey <span class="title">getPrivateKey</span><span class="params">(String filename)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        <span class="keyword">byte</span>[] bytes = readFile(filename);</span><br><span class="line">        <span class="keyword">return</span> getPrivateKey(bytes);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取公钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes 公钥的字节形式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> PublicKey <span class="title">getPublicKey</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        bytes = Base64.getDecoder().decode(bytes);</span><br><span class="line">        X509EncodedKeySpec spec = <span class="keyword">new</span> X509EncodedKeySpec(bytes);</span><br><span class="line">        KeyFactory factory = KeyFactory.getInstance(<span class="string">"RSA"</span>);</span><br><span class="line">        <span class="keyword">return</span> factory.generatePublic(spec);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取密钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bytes 私钥的字节形式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> PrivateKey <span class="title">getPrivateKey</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> <span class="keyword">throws</span> NoSuchAlgorithmException, InvalidKeySpecException </span>{</span><br><span class="line">        bytes = Base64.getDecoder().decode(bytes);</span><br><span class="line">        PKCS8EncodedKeySpec spec = <span class="keyword">new</span> PKCS8EncodedKeySpec(bytes);</span><br><span class="line">        KeyFactory factory = KeyFactory.getInstance(<span class="string">"RSA"</span>);</span><br><span class="line">        <span class="keyword">return</span> factory.generatePrivate(spec);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据密文，生存rsa公钥和私钥,并写入指定文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> publicKeyFilename  公钥文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> privateKeyFilename 私钥文件路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> secret             生成密钥的密文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">generateKey</span><span class="params">(String publicKeyFilename, String privateKeyFilename, String secret, <span class="keyword">int</span> keySize)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance(<span class="string">"RSA"</span>);</span><br><span class="line">        SecureRandom secureRandom = <span class="keyword">new</span> SecureRandom(secret.getBytes());</span><br><span class="line">        keyPairGenerator.initialize(Math.max(keySize, DEFAULT_KEY_SIZE), secureRandom);</span><br><span class="line">        KeyPair keyPair = keyPairGenerator.genKeyPair();</span><br><span class="line">        <span class="comment">// 获取公钥并写出</span></span><br><span class="line">        <span class="keyword">byte</span>[] publicKeyBytes = keyPair.getPublic().getEncoded();</span><br><span class="line">        publicKeyBytes = Base64.getEncoder().encode(publicKeyBytes);</span><br><span class="line">        writeFile(publicKeyFilename, publicKeyBytes);</span><br><span class="line">        <span class="comment">// 获取私钥并写出</span></span><br><span class="line">        <span class="keyword">byte</span>[] privateKeyBytes = keyPair.getPrivate().getEncoded();</span><br><span class="line">        privateKeyBytes = Base64.getEncoder().encode(privateKeyBytes);</span><br><span class="line">        writeFile(privateKeyFilename, privateKeyBytes);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] readFile(String fileName) <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="keyword">return</span> Files.readAllBytes(<span class="keyword">new</span> File(fileName).toPath());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeFile</span><span class="params">(String destPath, <span class="keyword">byte</span>[] bytes)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">        File dest = <span class="keyword">new</span> File(destPath);</span><br><span class="line">        <span class="keyword">if</span> (!dest.exists()) {</span><br><span class="line">            dest.createNewFile();</span><br><span class="line">        }</span><br><span class="line">        Files.write(dest.toPath(), bytes);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h6 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h6><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Payload</span>&lt;<span class="title">T</span>&gt; </span>{</span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="keyword">private</span> T userInfo;</span><br><span class="line">    <span class="keyword">private</span> Date expiration;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h5 id="生成私钥公钥"><a href="#生成私钥公钥" class="headerlink" title="生成私钥公钥"></a>生成私钥公钥</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RsaUtilsTest</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String privateKeyPath=<span class="string">"***"</span>;</span><br><span class="line">    <span class="keyword">private</span> String publicKeyPath=<span class="string">"***"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generateKey</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        RsaUtils.generateKey(publicKeyPath,privateKeyPath,<span class="string">"raptor"</span>,<span class="number">2048</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPublicKey</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        System.out.println(RsaUtils.getPublicKey(publicKeyPath));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPrivateKey</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        System.out.println(RsaUtils.getPrivateKey(privateKeyPath));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="auth-server"><a href="#auth-server" class="headerlink" title="auth_server"></a>auth_server</h3><h4 id="RsaKeyProperties"><a href="#RsaKeyProperties" class="headerlink" title="RsaKeyProperties"></a>RsaKeyProperties</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(<span class="string">"rsa.key"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RsaKeyProperties</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> String pubKeyFile;</span><br><span class="line">    <span class="keyword">private</span> String priKeyFile;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> PublicKey publicKey;</span><br><span class="line">    <span class="keyword">private</span> PrivateKey privateKey;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在什么什么之后构造</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">creatRsaKey</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        publicKey= RsaUtils.getPublicKey(pubKeyFile);</span><br><span class="line">        privateKey=RsaUtils.getPrivateKey(priKeyFile);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPubKeyFile</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> pubKeyFile;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPubKeyFile</span><span class="params">(String pubKeyFile)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.pubKeyFile = pubKeyFile;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPriKeyFile</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> priKeyFile;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPriKeyFile</span><span class="params">(String priKeyFile)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.priKeyFile = priKeyFile;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PublicKey <span class="title">getPublicKey</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> publicKey;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPublicKey</span><span class="params">(PublicKey publicKey)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.publicKey = publicKey;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PrivateKey <span class="title">getPrivateKey</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> privateKey;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrivateKey</span><span class="params">(PrivateKey privateKey)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.privateKey = privateKey;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h4 id="认证过滤器"><a href="#认证过滤器" class="headerlink" title="认证过滤器"></a>认证过滤器</h4><h5 id="JwtLoginFilter"><a href="#JwtLoginFilter" class="headerlink" title="JwtLoginFilter"></a>JwtLoginFilter</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtLoginFilter</span> <span class="keyword">extends</span> <span class="title">UsernamePasswordAuthenticationFilter</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RsaKeyProperties rsaKeyProperties;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JwtLoginFilter</span><span class="params">(AuthenticationManager authenticationManager, RsaKeyProperties rsaKeyProperties)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.authenticationManager = authenticationManager;</span><br><span class="line">        <span class="keyword">this</span>.rsaKeyProperties = rsaKeyProperties;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 接收并解析用户凭证，出現错误时，返回json数据前端 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Authentication <span class="title">attemptAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> AuthenticationException </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//将json格式请求体转成JavaBean对象</span></span><br><span class="line">            SysUser sysUser = <span class="keyword">new</span> ObjectMapper().readValue(request.getInputStream(), SysUser<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            UsernamePasswordAuthenticationToken authRequest = <span class="keyword">new</span> UsernamePasswordAuthenticationToken(sysUser.getUsername(), sysUser.getPassword());</span><br><span class="line">            <span class="keyword">this</span>.setDetails(request, authRequest);</span><br><span class="line">            <span class="keyword">return</span> authenticationManager.authenticate(authRequest);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="comment">//如果认证失败，提供自定义json格式异常</span></span><br><span class="line">                response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">                response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);</span><br><span class="line">                PrintWriter out = response.getWriter();</span><br><span class="line">                Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">                map.put(<span class="string">"code"</span>, HttpServletResponse.SC_UNAUTHORIZED);</span><br><span class="line">                map.put(<span class="string">"message"</span>, <span class="string">"账号或密码错误！"</span>);</span><br><span class="line">                out.write(<span class="keyword">new</span> ObjectMapper().writeValueAsString(map));</span><br><span class="line">                out.flush();</span><br><span class="line">                out.close();</span><br><span class="line">            } <span class="keyword">catch</span> (Exception outException) {</span><br><span class="line">                outException.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 用户登录成功后，生成token,并且返回json数据给前端 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">successfulAuthentication</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain, Authentication authResult)</span> <span class="keyword">throws</span> IOException, ServletException </span>{</span><br><span class="line">        SysUser user=<span class="keyword">new</span> SysUser();</span><br><span class="line">        user.setUsername(authResult.getName());</span><br><span class="line">        user.setRoles((List&lt;SysRole&gt;) authResult.getAuthorities());</span><br><span class="line">        <span class="comment">//json web token构建</span></span><br><span class="line">        String token=JwtUtils.generateTokenExpireInMinutes(user,rsaKeyProperties.getPrivateKey(),<span class="number">24</span>*<span class="number">60</span>);</span><br><span class="line">        <span class="comment">//返回token</span></span><br><span class="line">        response.addHeader(<span class="string">"Authorization"</span>, <span class="string">"Bearer "</span> + token);</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//登录成功時，返回json格式进行提示</span></span><br><span class="line">            response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">            response.setStatus(HttpServletResponse.SC_OK);</span><br><span class="line">            PrintWriter out = response.getWriter();</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">            map.put(<span class="string">"code"</span>, HttpServletResponse.SC_OK);</span><br><span class="line">            map.put(<span class="string">"message"</span>, <span class="string">"认证通过！！"</span>);</span><br><span class="line">            out.write(<span class="keyword">new</span> ObjectMapper().writeValueAsString(map));</span><br><span class="line">            out.flush();</span><br><span class="line">            out.close();</span><br><span class="line">        } <span class="keyword">catch</span> (Exception outException) {</span><br><span class="line">            outException.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h5 id="JwtVerifyFilter"><a href="#JwtVerifyFilter" class="headerlink" title="JwtVerifyFilter"></a>JwtVerifyFilter</h5><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JwtVerifyFilter</span> <span class="keyword">extends</span> <span class="title">BasicAuthenticationFilter</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RsaKeyProperties rsaKeyProperties;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JwtVerifyFilter</span><span class="params">(AuthenticationManager authenticationManager, RsaKeyProperties rsaKeyProperties)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(authenticationManager);</span><br><span class="line">        <span class="keyword">this</span>.rsaKeyProperties = rsaKeyProperties;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//请求体的头中是否包含Authorization</span></span><br><span class="line">            String header = request.getHeader(<span class="string">"Authorization"</span>);</span><br><span class="line">            <span class="comment">//Authorization中是否包含Bearer，不包含直接返回</span></span><br><span class="line">            <span class="keyword">if</span> (header == <span class="keyword">null</span> || !header.startsWith(<span class="string">"Bearer "</span>)) {</span><br><span class="line">                chain.doFilter(request, response);</span><br><span class="line">                responseJson(response);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//获取权限失败，会抛出异常</span></span><br><span class="line">            UsernamePasswordAuthenticationToken authentication = getAuthentication(request);</span><br><span class="line">            <span class="comment">//获取后，将Authentication写入SecurityContextHolder中供后序使用</span></span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authentication);</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            responseJson(response);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">responseJson</span><span class="params">(HttpServletResponse response)</span> </span>{</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//未登录提示</span></span><br><span class="line">            response.setContentType(<span class="string">"application/json;charset=utf-8"</span>);</span><br><span class="line">            response.setStatus(HttpServletResponse.SC_FORBIDDEN);</span><br><span class="line">            PrintWriter out = response.getWriter();</span><br><span class="line">            Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">            map.put(<span class="string">"code"</span>, HttpServletResponse.SC_FORBIDDEN);</span><br><span class="line">            map.put(<span class="string">"message"</span>, <span class="string">"请登录！"</span>);</span><br><span class="line">            out.write(<span class="keyword">new</span> ObjectMapper().writeValueAsString(map));</span><br><span class="line">            out.flush();</span><br><span class="line">            out.close();</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e1) {</span><br><span class="line">            e1.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> UsernamePasswordAuthenticationToken <span class="title">getAuthentication</span><span class="params">(HttpServletRequest request)</span> </span>{</span><br><span class="line">        String token = request.getHeader(<span class="string">"Authorization"</span>);</span><br><span class="line">        <span class="keyword">if</span> (token != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="comment">//通过token解析出载荷信息</span></span><br><span class="line">            Payload&lt;SysUser&gt; payload = JwtUtils.getInfoFromToken(token.replace(<span class="string">"Bearer "</span>, <span class="string">""</span>), rsaKeyProperties.getPublicKey(), SysUser<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            SysUser user = payload.getUserInfo();</span><br><span class="line">            <span class="comment">//不为null，返回</span></span><br><span class="line">            <span class="keyword">if</span> (user != <span class="keyword">null</span>) {</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> UsernamePasswordAuthenticationToken(user, <span class="keyword">null</span>, user.getRoles());</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h4 id="SecurityConfig"><a href="#SecurityConfig" class="headerlink" title="SecurityConfig"></a>SecurityConfig</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(securedEnabled = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RsaKeyProperties rsaKeyProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BCryptPasswordEncoder <span class="title">encoder</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        auth.userDetailsService(userService).passwordEncoder(encoder());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>{</span><br><span class="line">        http</span><br><span class="line">                .cors().and().csrf().disable()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">"/product"</span>).hasAnyRole(<span class="string">"USER"</span>)</span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .addFilter(<span class="keyword">new</span> JwtLoginFilter(<span class="keyword">super</span>.authenticationManager(),rsaKeyProperties))</span><br><span class="line">                .addFilter(<span class="keyword">new</span> JwtVerifyFilter(<span class="keyword">super</span>.authenticationManager(),rsaKeyProperties))</span><br><span class="line">                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)</span><br><span class="line">                ;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="sources-server"><a href="#sources-server" class="headerlink" title="sources_server"></a>sources_server</h3><h4 id="RsaKeyProperties-1"><a href="#RsaKeyProperties-1" class="headerlink" title="RsaKeyProperties"></a>RsaKeyProperties</h4><blockquote><p> 去掉私钥地址</p></blockquote><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@ConfigurationProperties("rsa.key")</span><br><span class="line">public class RsaKeyProperties {</span><br><span class="line">    private String pubKeyFile;</span><br><span class="line"></span><br><span class="line">    private PublicKey publicKey;</span><br><span class="line"></span><br><span class="line">    //在什么什么之后构造</span><br><span class="line">    @PostConstruct</span><br><span class="line">    public void creatRsaKey() throws Exception {</span><br><span class="line">        publicKey= RsaUtils.getPublicKey(pubKeyFile);</span><br><span class="line">    }</span><br><span class="line">    public String getPubKeyFile() {</span><br><span class="line">        return pubKeyFile;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public void setPubKeyFile(String pubKeyFile) {</span><br><span class="line">        this.pubKeyFile = pubKeyFile;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public PublicKey getPublicKey() {</span><br><span class="line">        return publicKey;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public void setPublicKey(PublicKey publicKey) {</span><br><span class="line">        this.publicKey = publicKey;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h1 id="OAuth2-0"><a href="#OAuth2-0" class="headerlink" title="OAuth2.0"></a>OAuth2.0</h1><blockquote><p>OAuth协议为用户资源的授权提供了一个安全的、开放而又简易的标准。与以往的授权方式不同之处是 OAuth的授权不会使第三方触及到用户的帐号信息（如用户名与密码），即第三方无需使用用户的用户名与 密码就可以申请获得该用户资源的授权，因此OAuth是安全的。 </p><p>OAuth2.0是OAuth协议的延续版本，但不向前兼容(即完全废止了OAuth1.0)。单点登录是用户一次登录，自己可以操作其 </p><p>他关联的服务资源。OAuth2则是用户给一个系统授权，可以直接操作其他系统资源的一种方式。 </p><p><strong>SpringSecurity的OAuth2可以做服务之间资源共享，也可以实现单点登录！</strong></p></blockquote><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1></body></html>]]></content>
      
      
      <categories>
          
          <category> spring security </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css+js技巧学习笔记</title>
      <link href="2020/07/05/css%E6%8A%80%E5%B7%A7%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>2020/07/05/css%E6%8A%80%E5%B7%A7%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="CSDN地址"><a href="#CSDN地址" class="headerlink" title="CSDN地址"></a>CSDN地址</h1><p>  不知道为啥css代码会被自动渲染，遂挂上csdn地址。<br>  <a href="https://blog.csdn.net/C18854805113/article/details/107210819" target="_blank" rel="noopener">https://blog.csdn.net/C18854805113/article/details/107210819</a></p><h1 id="文章内容"><a href="#文章内容" class="headerlink" title="文章内容"></a>文章内容</h1><h2 id="精灵图"><a href="#精灵图" class="headerlink" title="精灵图"></a>精灵图</h2><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>  浏览器工作时向服务器发送请求，服务器接受请求后，将数据返回页面，页面中图片较多时，会出现频繁的请求和发送请求，服务器压力变大，会降低网页加载速度。将网页中小的一些小背景图片合并到一张图中，就称为css精灵技术。</p><ul><li>主要针对于小的背景图片</li><li>借助于background-position实现</li><li>注意网页中的坐标方式<h3 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h3><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="精灵图" class="fancybox"><img alt="精灵图" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvdW50aWR5L2FiY2QuanBn?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="精灵图"></a><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>{</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box1</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">130px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">130px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(img/abcd.jpg) no-repeat -<span class="number">230px</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box2</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">146px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">118px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(img/abcd.jpg) no-repeat -<span class="number">108px</span> -<span class="number">550px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box3</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">118px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">125px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(img/abcd.jpg) no-repeat -<span class="number">210px</span> -<span class="number">132px</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></li></ul><h2 id="字体图标"><a href="#字体图标" class="headerlink" title="字体图标"></a>字体图标</h2><h3 id="场景-1"><a href="#场景-1" class="headerlink" title="场景"></a>场景</h3><p>  使用场景：用于显示网页中通用，常用的一些小图标。</p><ul><li>轻量级：一个字体图标鼻翼系列的图片小，一旦字体加载了，图标马上就会被渲染，减少了服务器的请求</li><li>灵活性：本质是文字，不失真</li><li>兼容性：几乎所有浏览器都支持<br>  不能替代精灵图技术，只是对部分技术的提升和优化。<br><a href="https://icomoon.io/" target="_blank" rel="noopener">https://icomoon.io/</a><br><a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a><h3 id="demo-1"><a href="#demo-1" class="headerlink" title="demo"></a>demo</h3></li><li>steo1：下载字体图标</li><li>Ctrl+C、Ctrl+V</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> {</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">'icomoon'</span>;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'fonts/icomoon.eot?y9mr9t'</span>);</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'fonts/icomoon.eot?y9mr9t#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>), <span class="built_in">url</span>(<span class="string">'fonts/icomoon.ttf?y9mr9t'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>), <span class="built_in">url</span>(<span class="string">'fonts/icomoon.woff?y9mr9t'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>), <span class="built_in">url</span>(<span class="string">'fonts/icomoon.svg?y9mr9t#icomoon'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>);</span><br><span class="line"><span class="attribute">font-weight</span>: normal;</span><br><span class="line"><span class="attribute">font-style</span>: normal;</span><br><span class="line"><span class="attribute">font-display</span>: block;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.demo</span>{</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">'icomoon'</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="css三角"><a href="#css三角" class="headerlink" title="css三角"></a>css三角</h2><h3 id="普通小三角"><a href="#普通小三角" class="headerlink" title="普通小三角"></a>普通小三角</h3><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="京东三角效果" class="fancybox"><img alt="京东三角效果" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvdW50aWR5L3NhbmppYW94aWFvZ3VvLnBuZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="京东三角效果"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.jingdong</span> {</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: palegreen;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.trang</span> {</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">top</span>: -<span class="number">20px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*border: 10px solid red;*/</span></span><br><span class="line"><span class="attribute">border</span>: <span class="number">10px</span> solid transparent;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">10px</span> solid palegreen;</span><br><span class="line">}</span><br><span class="line">&lt;div class="jingdong"&gt;</span><br><span class="line">&lt;div class="trang"&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></tbody></table></figure></div><h3 id="直角三角形"><a href="#直角三角形" class="headerlink" title="直角三角形"></a>直角三角形</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">*{</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*.trang {</span></span><br><span class="line"><span class="comment">width: 0;</span></span><br><span class="line"><span class="comment">height: 0;</span></span><br><span class="line"><span class="comment">border: 10px solid red;</span></span><br><span class="line"><span class="comment">border-color: transparent gold transparent transparent;   </span></span><br><span class="line"><span class="comment">border-style: solid;</span></span><br><span class="line"><span class="comment">border-width: 150px 50px  0 0 ;</span></span><br><span class="line"><span class="comment">}*/</span></span><br><span class="line"><span class="selector-class">.box</span>{</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">160px</span> ;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.price</span>{</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">background-color</span>: red;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.price</span> <span class="selector-tag">i</span>{</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">80px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border-color</span>:transparent <span class="number">#FFFFFF</span> transparent transparent; </span><br><span class="line"><span class="attribute">border-style</span>:solid ;</span><br><span class="line"><span class="attribute">border-width</span>: <span class="number">24px</span> <span class="number">10px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.oldprice</span>{</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#EEEEEE</span>;</span><br><span class="line"><span class="attribute">text-decoration</span>: line-through;</span><br><span class="line">}</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div class="box"&gt;</span><br><span class="line">&lt;span class="price"&gt;￥1999</span><br><span class="line">&lt;i&gt;&lt;/i&gt;</span><br><span class="line">&lt;/span&gt;</span><br><span class="line">&lt;span class="oldprice"&gt;￥2999&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></tbody></table></figure></div><h2 id="css用户界面样式"><a href="#css用户界面样式" class="headerlink" title="css用户界面样式"></a>css用户界面样式</h2><h3 id="更改用户鼠标样式"><a href="#更改用户鼠标样式" class="headerlink" title="更改用户鼠标样式"></a>更改用户鼠标样式</h3><p>  cursor（default（默认），pointer（小手），move（移动），text（文本），not-allowed（禁止））</p><h3 id="轮廓线"><a href="#轮廓线" class="headerlink" title="轮廓线"></a>轮廓线</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>{</span><br><span class="line"><span class="attribute">outline</span>: none;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">textarea</span>{</span><br><span class="line"><span class="attribute">resize</span>: none;</span><br><span class="line"><span class="attribute">outline</span>: none;</span><br><span class="line">}</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;!<span class="selector-tag">--</span>取消表单轮廓<span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;input type="" name="" id="" value="" /&gt;</span><br><span class="line">&lt;!<span class="selector-tag">--</span>文本域防止拖拽<span class="selector-tag">--</span>&gt;</span><br><span class="line">&lt;textarea name="" rows="10" cols="30"&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></tbody></table></figure></div><h2 id="vertical-align属性应用"><a href="#vertical-align属性应用" class="headerlink" title="vertical-align属性应用"></a>vertical-align属性应用</h2><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>  经常用于设置图片或者表单和文字垂直对齐。<br>  用于设置一个元素的垂直对齐方式，但是只针对行内元素和行内块元素有效。<br>  可用于解决图片与盒子之间有一道空隙问题，图片与文字默认基于基线对齐，只需要设置对齐方式为middle、top或bottom，第二种解决方案把图片转换为块级元素。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="小米" class="fancybox"><img alt="小米" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvdW50aWR5L3hpYW9taS5wbmc?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="小米"></a></p><h3 id="demo-2"><a href="#demo-2" class="headerlink" title="demo"></a>demo</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>{</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#0000FF</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span>{</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">322px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">58px</span>;</span><br><span class="line"><span class="attribute">margin</span>:<span class="number">100px</span> auto;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#FFFFFF</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">58px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">58px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.icon</span>{</span><br><span class="line"><span class="attribute">vertical-align</span>: middle;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.icon</span>{</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">25%</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">5px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.icontext</span>{</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">40%</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#0000FF</span>;</span><br><span class="line"><span class="attribute">cursor</span>: pointer;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.icontext</span><span class="selector-pseudo">:hover</span>{</span><br><span class="line"><span class="attribute">color</span>: blueviolet;</span><br><span class="line">}</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div class="box"&gt;</span><br><span class="line">&lt;img src="img/xiaomitubiao.png" class="icon"/&gt;&lt;span class="icontext"&gt;使用小米账号登录&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></tbody></table></figure></div><h2 id="溢出文字省略号显示"><a href="#溢出文字省略号显示" class="headerlink" title="溢出文字省略号显示"></a>溢出文字省略号显示</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: palegoldenrod;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line"><span class="comment">/*自动换行*/</span></span><br><span class="line"><span class="comment">/*white-space: normal;*/</span></span><br><span class="line"><span class="comment">/*必须一行*/</span></span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="comment">/*多余的省略号显示*/</span></span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box2</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">44px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: palegoldenrod;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="comment">/*弹性伸缩盒子模型显示*/</span></span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"><span class="comment">/*限制在一个块元素显示的文本的行数*/</span></span><br><span class="line"><span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>;</span><br><span class="line"><span class="comment">/*设置伸缩盒子对象的子元素的排列方式*/</span></span><br><span class="line"><span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">}</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div class="box"&gt;</span><br><span class="line">我就是这条街最靓的仔最亮的仔最亮的最亮的仔</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class="box2"&gt;</span><br><span class="line">我就是这条街最靓的仔最亮的仔最亮的最亮的仔</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></tbody></table></figure></div><h2 id="常见布局技巧"><a href="#常见布局技巧" class="headerlink" title="常见布局技巧"></a>常见布局技巧</h2><h3 id="margin负值的运用"><a href="#margin负值的运用" class="headerlink" title="margin负值的运用"></a>margin负值的运用</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>{</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line"><span class="attribute">margin-left</span>: -<span class="number">1px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>{</span><br><span class="line"><span class="comment">/*若是盒子原本不带有相对定位*/</span></span><br><span class="line"><span class="comment">/*position: relative;*/</span></span><br><span class="line"><span class="comment">/*盒子原本带有相对定位，改变层级*/</span></span><br><span class="line"><span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span><br><span class="line">}</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">&lt;li&gt;1&lt;/li&gt;</span><br><span class="line">&lt;li&gt;2&lt;/li&gt;</span><br><span class="line">&lt;li&gt;3&lt;/li&gt;</span><br><span class="line">&lt;li&gt;4&lt;/li&gt;</span><br><span class="line">&lt;li&gt;5&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></tbody></table></figure></div><h3 id="文字围绕浮动元素"><a href="#文字围绕浮动元素" class="headerlink" title="文字围绕浮动元素"></a>文字围绕浮动元素</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">*{</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">360px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: pink;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.pic</span>{</span><br><span class="line"><span class="attribute">float</span>: left;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">margin-right</span>: <span class="number">9px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.pic</span> <span class="selector-tag">img</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">}</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div class="box"&gt;</span><br><span class="line">&lt;div class="pic"&gt;</span><br><span class="line">&lt;img src="img/31.jpg"/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">p</span>&gt;标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流</span><br><span class="line">标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流</span><br><span class="line">标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流</span><br><span class="line">标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流</span><br><span class="line">标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流标准流&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></tbody></table></figure></div><h3 id="行内块元素应用"><a href="#行内块元素应用" class="headerlink" title="行内块元素应用"></a>行内块元素应用</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang"></div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">* {</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span> {</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">a</span> {</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">36px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">36px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">36px</span>;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line"><span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.prev</span>,<span class="selector-class">.box</span> <span class="selector-class">.next</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">85px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.current</span>,<span class="selector-class">.box</span> <span class="selector-class">.elp</span>{</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0px</span> solid transparent;</span><br><span class="line"><span class="attribute">background-color</span>: transparent ;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">input</span>{</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">button</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">36px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#f7f7f7</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">&lt;div class="box"&gt;</span><br><span class="line">&lt;a href="#" class="prev"&gt;&amp;lt;&amp;lt;上一页&lt;/a&gt;</span><br><span class="line">&lt;a href="#" class="current"&gt;2&lt;/a&gt;</span><br><span class="line">&lt;a href="#"&gt;3&lt;/a&gt;</span><br><span class="line">&lt;a href="#"&gt;4&lt;/a&gt;</span><br><span class="line">&lt;a href="#"&gt;5&lt;/a&gt;</span><br><span class="line">&lt;a href="#"&gt;6&lt;/a&gt;</span><br><span class="line">&lt;a href="#" class="elp"&gt;...&lt;/a&gt;</span><br><span class="line">&lt;a href="#" class="next"&gt;&amp;gt;&amp;gt;下一页&lt;/a&gt;</span><br><span class="line">到第几</span><br><span class="line">&lt;input type="text" name="" id="" value="" /&gt;</span><br><span class="line">页</span><br><span class="line">&lt;button&gt;确定&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></tbody></table></figure></div><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="Web-APIs"><a href="#Web-APIs" class="headerlink" title="Web APIs"></a>Web APIs</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API</a></p><h2 id="js基础"><a href="#js基础" class="headerlink" title="js基础"></a>js基础</h2><h3 id="元素偏移量offset系列"><a href="#元素偏移量offset系列" class="headerlink" title="元素偏移量offset系列"></a>元素偏移量offset系列</h3><h4 id="放大镜"><a href="#放大镜" class="headerlink" title="放大镜"></a>放大镜</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pac"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/img.jpg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"big"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../img/img.jpg"</span> <span class="attr">class</span>=<span class="string">"bigimg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pac = <span class="built_in">document</span>.querySelector(<span class="string">".pac"</span>);</span><br><span class="line"><span class="keyword">var</span> mask = <span class="built_in">document</span>.querySelector(<span class="string">".mask"</span>);</span><br><span class="line"><span class="keyword">var</span> big = <span class="built_in">document</span>.querySelector(<span class="string">".big"</span>);</span><br><span class="line"><span class="comment">//鼠标经过img显示mask和big</span></span><br><span class="line">pac.addEventListener(<span class="string">"mouseover"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">mask.style.display = <span class="string">"block"</span>;</span><br><span class="line">big.style.display = <span class="string">"block"</span>;</span><br><span class="line">})</span><br><span class="line">pac.addEventListener(<span class="string">"mouseout"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">mask.style.display = <span class="string">"none"</span>;</span><br><span class="line">big.style.display = <span class="string">"none"</span>;</span><br><span class="line">})</span><br><span class="line"><span class="comment">//mask跟随鼠标</span></span><br><span class="line">pac.addEventListener(<span class="string">"mousemove"</span>,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>{</span><br><span class="line"><span class="keyword">var</span> x = e.pageX - <span class="keyword">this</span>.offsetLeft;</span><br><span class="line"><span class="keyword">var</span> y = e.pageY - <span class="keyword">this</span>.offsetTop;</span><br><span class="line"><span class="keyword">var</span> maskx = x - mask.offsetWidth / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> masky = y - mask.offsetHeight / <span class="number">2</span>;</span><br><span class="line"><span class="comment">//限制mask的位置</span></span><br><span class="line"><span class="comment">//left值最小0   最大为当前div的宽度减去mask的宽度</span></span><br><span class="line"><span class="keyword">if</span>(maskx &lt;= <span class="number">0</span>) {</span><br><span class="line">maskx = <span class="number">0</span>;</span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span>(maskx &gt;= pac.offsetWidth-mask.offsetWidth) {</span><br><span class="line">maskx = pac.offsetWidth-mask.offsetWidth;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(masky&lt;=<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">masky=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(masky&gt;=pac.offsetHeight-mask.offsetHeight)</span><br><span class="line">{</span><br><span class="line">masky=pac.offsetHeight-mask.offsetHeight;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//鼠标在中心   盒子的一半</span></span><br><span class="line">mask.style.left = maskx + <span class="string">"px"</span>;</span><br><span class="line">mask.style.top = masky + <span class="string">"px"</span>;</span><br><span class="line"><span class="keyword">var</span> bigimg=<span class="built_in">document</span>.querySelector(<span class="string">".bigimg"</span>);</span><br><span class="line"><span class="keyword">var</span> maskMaxx=pac.offsetHeight-mask.offsetHeight;</span><br><span class="line"><span class="keyword">var</span> maskMaxy=pac.offsetHeight-mask.offsetHeight;</span><br><span class="line"><span class="comment">//大图最大移动距离</span></span><br><span class="line"><span class="keyword">var</span> bigMax=bigimg.offsetWidth-big.offsetWidth;</span><br><span class="line"><span class="comment">//大图片的移动距离</span></span><br><span class="line"><span class="keyword">var</span> bigx=maskx*bigMax/maskMaxx;</span><br><span class="line"><span class="keyword">var</span> bigy=masky*bigMax/maskMaxy;</span><br><span class="line">bigimg.style.left=-bigx+<span class="string">"px"</span>;</span><br><span class="line">bigimg.style.top=-bigy+<span class="string">"px"</span>;</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="元素的可视区client系列"><a href="#元素的可视区client系列" class="headerlink" title="元素的可视区client系列"></a>元素的可视区client系列</h3><h4 id="client的使用"><a href="#client的使用" class="headerlink" title="client的使用"></a>client的使用</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box=<span class="built_in">document</span>.querySelector(<span class="string">".box"</span>);</span><br><span class="line"><span class="comment">//client返回的元素属性不带边框</span></span><br><span class="line"><span class="built_in">console</span>.log(box.clientWidth);</span><br><span class="line"><span class="built_in">console</span>.log(box.offsetWidth);</span><br><span class="line"></span><br><span class="line"><span class="comment">//client通过clientTop获取边框之</span></span><br><span class="line"><span class="built_in">console</span>.log(box.clientTop);</span><br><span class="line"></span><br><span class="line"><span class="comment">//立即执行 函数</span></span><br><span class="line"><span class="comment">//(function(){})()    或者     (function(){}())</span></span><br><span class="line"><span class="comment">//创建一个独立的作用域，避免了命名冲突问题</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">})(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></tbody></table></figure></div><h3 id="元素scroll系列"><a href="#元素scroll系列" class="headerlink" title="元素scroll系列"></a>元素scroll系列</h3><h4 id="侧翼导航栏"><a href="#侧翼导航栏" class="headerlink" title="侧翼导航栏"></a>侧翼导航栏</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">*{</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.w</span>{</span><br><span class="line"><span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line"><span class="attribute">margin-bottom</span>:<span class="number">20px</span> ;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.header</span>{</span><br><span class="line"><span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: greenyellow;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.banner</span>{</span><br><span class="line"><span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: pink;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.main</span>{</span><br><span class="line"><span class="attribute">height</span>: <span class="number">1000px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#00A4FF</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.slider-bar</span>{</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">right</span>: <span class="number">22px</span>;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">150px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#98FB98</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.goBack</span>{</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slider-bar"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"goBack"</span>&gt;</span>赶回顶部<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header w"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner w"</span> &gt;</span>banner<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main w"</span>&gt;</span>main<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*var box=document.querySelector(".box");</span></span><br><span class="line"><span class="comment">//不包含边框  包含padding</span></span><br><span class="line"><span class="comment">console.log(box.scrollHeight);</span></span><br><span class="line"><span class="comment">//scroll得到的是自身实际高度的大小</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">//内容超出边界时，scrollTop得到被卷的高度</span></span><br><span class="line"><span class="comment">box.addEventListener("scroll",function(){</span></span><br><span class="line"><span class="comment">console.log(this.scrollTop);</span></span><br><span class="line"><span class="comment">})</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> sliderbar=<span class="built_in">document</span>.querySelector(<span class="string">".slider-bar"</span>);</span><br><span class="line"><span class="keyword">var</span> banner=<span class="built_in">document</span>.querySelector(<span class="string">".banner"</span>);</span><br><span class="line"><span class="comment">//定义在此处 防止  banner随着页面滚动top值变化</span></span><br><span class="line"><span class="keyword">var</span> bannerTop=banner.offsetTop;</span><br><span class="line"><span class="keyword">var</span> goBack=<span class="built_in">document</span>.querySelector(<span class="string">".goBack"</span>);</span><br><span class="line"><span class="keyword">var</span> main=<span class="built_in">document</span>.querySelector(<span class="string">".main"</span>);</span><br><span class="line"><span class="keyword">var</span> mainTop=main.offsetTop;</span><br><span class="line"><span class="built_in">console</span>.log(bannerTop);</span><br><span class="line"><span class="keyword">var</span> sliderbarTop=sliderbar.offsetTop-bannerTop;</span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"scroll"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>{</span><br><span class="line"><span class="comment">//页面被卷去的头部</span></span><br><span class="line"><span class="comment">//console.log(window.pageYOffset);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//当页面被卷去的头部大于等于  一定值  侧边栏改为固定定位</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.pageYOffset&gt;=bannerTop)</span><br><span class="line">{</span><br><span class="line">sliderbar.style.position=<span class="string">"fixed"</span>;</span><br><span class="line"><span class="comment">//防止到达一定值 后 跳动    保持原来位置</span></span><br><span class="line">sliderbar.style.top=sliderbarTop+<span class="string">"px"</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.pageYOffset&lt;bannerTop){</span><br><span class="line">sliderbar.style.position=<span class="string">"absolute"</span>;</span><br><span class="line">sliderbar.style.top=<span class="string">"150px"</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//到达main  显示返回</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.pageYOffset&gt;=mainTop)</span><br><span class="line">{</span><br><span class="line">goBack.style.display=<span class="string">"block"</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.pageYOffset&lt;mainTop){</span><br><span class="line">goBack.style.display=<span class="string">"none"</span>;</span><br><span class="line">}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h3 id="mouseover和mouseenter"><a href="#mouseover和mouseenter" class="headerlink" title="mouseover和mouseenter"></a>mouseover和mouseenter</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> father=<span class="built_in">document</span>.querySelector(<span class="string">".father"</span>);</span><br><span class="line"><span class="keyword">var</span> son=<span class="built_in">document</span>.querySelector(<span class="string">".son"</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *mouseover和mouseenter鼠标事件</span></span><br><span class="line"><span class="comment"> * 当鼠标移动到元素上处罚mouseenter时间</span></span><br><span class="line"><span class="comment"> * 类似mouseover，差别在于mouseover鼠标经过自身盒子会触发，经过子盒子还会触发mousenter只会经过自身盒子触发</span></span><br><span class="line"><span class="comment"> * mouseenter不会冒泡，跟mouseenter搭配离开mouseleave  同样不会冒泡</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line">father.addEventListener(<span class="string">"mouseover"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"mouseover"</span>);</span><br><span class="line">})</span><br><span class="line">father.addEventListener(<span class="string">"mouseenter"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"mouseenter"</span>);</span><br><span class="line">})</span><br><span class="line"><span class="comment">//console</span></span><br><span class="line"><span class="comment">//mouseover</span></span><br><span class="line"><span class="comment">//mouseenter</span></span><br><span class="line"><span class="comment">//mouseover</span></span><br></pre></td></tr></tbody></table></figure></div><h3 id="动画封装"><a href="#动画封装" class="headerlink" title="动画封装"></a>动画封装</h3><h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj,target</span>)</span>{</span><br><span class="line">clearInterval(obj.timer);</span><br><span class="line">obj.timer=setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line"><span class="keyword">if</span>(obj.offsetLeft&gt;=target)</span><br><span class="line">{</span><br><span class="line">clearInterval(obj.timer);</span><br><span class="line">}</span><br><span class="line">obj.style.left=obj.offsetLeft+<span class="number">5</span>+<span class="string">"px"</span>;</span><br><span class="line">},<span class="number">30</span>)</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> box=<span class="built_in">document</span>.querySelector(<span class="string">".box"</span>);</span><br><span class="line">animate(box,<span class="number">400</span>);</span><br></pre></td></tr></tbody></table></figure></div><h4 id="缓动"><a href="#缓动" class="headerlink" title="缓动"></a>缓动</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 缓动动画</span></span><br><span class="line"><span class="comment"> * 核心：（目标值-现在的位置）/10 作为每次移动的距离步长</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target, callback</span>) </span>{</span><br><span class="line">clearInterval(obj.timer);</span><br><span class="line">obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="keyword">if</span>(obj.offsetLeft == target) {</span><br><span class="line">clearInterval(obj.timer);</span><br><span class="line"><span class="keyword">if</span>(callback)</span><br><span class="line">callback();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> step = (target - obj.offsetLeft) / <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(step &gt; <span class="number">0</span>)</span><br><span class="line">step = <span class="built_in">Math</span>.ceil(step);</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line">step = <span class="built_in">Math</span>.floor(step);</span><br><span class="line">}</span><br><span class="line">obj.style.left = obj.offsetLeft + step + <span class="string">"px"</span>;</span><br><span class="line">}, <span class="number">30</span>)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h3 id="常见网页特效"><a href="#常见网页特效" class="headerlink" title="常见网页特效"></a>常见网页特效</h3><h4 id="轮播图"><a href="#轮播图" class="headerlink" title="轮播图"></a>轮播图</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"load"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="keyword">var</span> prev = <span class="built_in">document</span>.querySelector(<span class="string">".prev"</span>);</span><br><span class="line"><span class="keyword">var</span> next = <span class="built_in">document</span>.querySelector(<span class="string">".next"</span>);</span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.querySelector(<span class="string">".box"</span>);</span><br><span class="line"><span class="comment">//鼠标滑过动作</span></span><br><span class="line">box.addEventListener(<span class="string">"mouseover"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">prev.style.display = <span class="string">"block"</span>;</span><br><span class="line">next.style.display = <span class="string">"block"</span>;</span><br><span class="line">clearInterval(timer);</span><br><span class="line">timer = <span class="literal">null</span>;</span><br><span class="line">})</span><br><span class="line">box.addEventListener(<span class="string">"mouseout"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">prev.style.display = <span class="string">"none"</span>;</span><br><span class="line">next.style.display = <span class="string">"none"</span>;</span><br><span class="line">timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">next.click();</span><br><span class="line">}, <span class="number">2000</span>)</span><br><span class="line">})</span><br><span class="line"><span class="comment">//动态生成小圆圈</span></span><br><span class="line"><span class="keyword">var</span> focus = <span class="built_in">document</span>.querySelector(<span class="string">".focus"</span>);</span><br><span class="line"><span class="keyword">var</span> nav = <span class="built_in">document</span>.querySelector(<span class="string">".nav"</span>);</span><br><span class="line"><span class="comment">//根据图片数量生成</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; focus.children.length; i++) {</span><br><span class="line"><span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line"><span class="comment">//设置索引</span></span><br><span class="line">li.setAttribute(<span class="string">"index"</span>, i);</span><br><span class="line">nav.appendChild(li);</span><br><span class="line"><span class="comment">//排他</span></span><br><span class="line">li.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; nav.children.length; i++) {</span><br><span class="line">nav.children[i].className = <span class="string">""</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//留下我自己  干掉其他人</span></span><br><span class="line"><span class="keyword">this</span>.className = <span class="string">"selected"</span>;</span><br><span class="line"><span class="keyword">var</span> focuswidth = focus.children[<span class="number">0</span>].offsetWidth;</span><br><span class="line"><span class="comment">//console.log(foucswidth);</span></span><br><span class="line"><span class="keyword">var</span> index = <span class="keyword">this</span>.getAttribute(<span class="string">"index"</span>);</span><br><span class="line">num = index;</span><br><span class="line">circle = index;</span><br><span class="line"><span class="comment">//console.log(index);</span></span><br><span class="line"><span class="comment">//缓动</span></span><br><span class="line">animate(focus, -index * focuswidth);</span><br><span class="line">})</span><br><span class="line">}</span><br><span class="line"><span class="comment">//默认第一个</span></span><br><span class="line">nav.children[<span class="number">0</span>].className = <span class="string">"selected"</span>;</span><br><span class="line"><span class="comment">//点击上下按钮</span></span><br><span class="line"><span class="comment">//克隆第一张图片</span></span><br><span class="line"><span class="keyword">var</span> first = focus.children[<span class="number">0</span>].cloneNode(<span class="literal">true</span>);</span><br><span class="line">focus.appendChild(first);</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> circle = <span class="number">0</span>; <span class="comment">//小圆圈</span></span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>; <span class="comment">//节流阀</span></span><br><span class="line"><span class="keyword">var</span> focuswidth = focus.children[<span class="number">0</span>].offsetWidth;</span><br><span class="line"><span class="comment">//无缝滚动  第一张复制到最后  达到最后一张 迅速切换到第一张</span></span><br><span class="line">next.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="keyword">if</span>(flag) {</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//达到最后</span></span><br><span class="line"><span class="keyword">if</span>(num == focus.children.length - <span class="number">1</span>) {</span><br><span class="line">focus.style.left = <span class="number">0</span>;</span><br><span class="line">num = <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">num++;</span><br><span class="line">animate(focus, -num * focuswidth, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">});</span><br><span class="line">circle++;</span><br><span class="line"><span class="comment">//到达最后一张</span></span><br><span class="line"><span class="keyword">if</span>(circle == nav.children.length)</span><br><span class="line">circle = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//干掉其他人</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; nav.children.length; j++) {</span><br><span class="line">nav.children[j].className = <span class="string">""</span>;</span><br><span class="line">}</span><br><span class="line">nav.children[circle].className = <span class="string">"selected"</span>;</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line">prev.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="keyword">if</span>(flag) {</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(num == <span class="number">0</span>) {</span><br><span class="line">num = nav.children.length;</span><br><span class="line">focus.style.left = -num * focuswidth + <span class="string">"px"</span>;</span><br><span class="line">}</span><br><span class="line">num--;</span><br><span class="line">animate(focus, -num * focuswidth, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">});</span><br><span class="line">circle--;</span><br><span class="line"><span class="comment">//到达最后一张</span></span><br><span class="line"><span class="keyword">if</span>(circle &lt; <span class="number">0</span>)</span><br><span class="line">circle = nav.children.length - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; nav.children.length; j++) {</span><br><span class="line">nav.children[j].className = <span class="string">""</span>;</span><br><span class="line">}</span><br><span class="line">nav.children[circle].className = <span class="string">"selected"</span>;</span><br><span class="line">}</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line"><span class="comment">//自动播放</span></span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">next.click();</span><br><span class="line">}, <span class="number">2000</span>)</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div><h4 id="返回顶部"><a href="#返回顶部" class="headerlink" title="返回顶部"></a>返回顶部</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">goBack.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="comment">//console.log(11);</span></span><br><span class="line"><span class="comment">//window.scroll(0, 0);</span></span><br><span class="line">animate(<span class="built_in">window</span>,<span class="number">0</span>);</span><br><span class="line">});</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">obj, target, callback</span>) </span>{</span><br><span class="line">clearInterval(obj.timer);</span><br><span class="line">obj.timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.pageYOffset == target) {</span><br><span class="line">clearInterval(obj.timer);</span><br><span class="line"><span class="comment">//if(callback)</span></span><br><span class="line"><span class="comment">//callback();</span></span><br><span class="line">callback &amp;&amp; callback();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">var</span> step = (target - <span class="built_in">window</span>.pageYOffset) / <span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(step &gt; <span class="number">0</span>)</span><br><span class="line">step = <span class="built_in">Math</span>.ceil(step);</span><br><span class="line"><span class="keyword">else</span> {</span><br><span class="line">step = <span class="built_in">Math</span>.floor(step);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//obj.style.top = window.pageYOffset + step + "px";</span></span><br><span class="line"><span class="built_in">window</span>.scroll(<span class="number">0</span>,<span class="built_in">window</span>.pageYOffset + step);</span><br><span class="line">}, <span class="number">30</span>)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h4 id="筋斗云"><a href="#筋斗云" class="headerlink" title="筋斗云"></a>筋斗云</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"load"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line"><span class="keyword">var</span> cloud = <span class="built_in">document</span>.querySelector(<span class="string">".cloud"</span>);</span><br><span class="line"><span class="keyword">var</span> c_nav = <span class="built_in">document</span>.querySelector(<span class="string">".c-nav"</span>);</span><br><span class="line"><span class="keyword">var</span> lis = c_nav.querySelectorAll(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">var</span> ancient = cloud.offsetLeft;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) {</span><br><span class="line">lis[i].addEventListener(<span class="string">"mouseenter"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">animate(cloud, <span class="keyword">this</span>.offsetLeft);</span><br><span class="line">})</span><br><span class="line">lis[i].addEventListener(<span class="string">"mouseleave"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">animate(cloud, ancient);</span><br><span class="line">})</span><br><span class="line">lis[i].addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">ancient=<span class="keyword">this</span>.offsetLeft;</span><br><span class="line">})</span><br><span class="line">}</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> css学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css学习 </tag>
            
            <tag> 前端基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取妹子图【Python学习】</title>
      <link href="2020/07/02/%E7%88%AC%E5%8F%96%E5%A6%B9%E5%AD%90%E5%9B%BE%E3%80%90Python%E5%AD%A6%E4%B9%A0%E3%80%91/"/>
      <url>2020/07/02/%E7%88%AC%E5%8F%96%E5%A6%B9%E5%AD%90%E5%9B%BE%E3%80%90Python%E5%AD%A6%E4%B9%A0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p><strong>——&gt;&gt;python小白一枚，仅限于了解基础语法，经过多天的学习，结果令人欣慰，可以正确的输出”Hello world！！”。</strong></p><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>2019.7.2发布的文章，csdn2020.7.2给我审核不通过了。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzIwMjAwNzAyMTAzOTUzLnBuZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzIwMjAwNzAyMTA0MDAzLnBuZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>使用爬虫爬取网络图片，只需要知道图片的地址，以百度随意一张为例，<a href="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1562045484890&amp;di=942bc24341f9fe3e9c63d158a0b65543&amp;imgtype=0&amp;src=http://www.chinapoesy.com/UploadFiles/Poesy/20141015_92b4978b-973a-472c-b4e8-33d89e01853f.jpg" target="_blank" rel="noopener">图片示例</a></p><p>想要保存图片，只需要分析出图片的src。一个简单的例子，爬取一张妹子图片。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzIwMTkwNzAyMTA0NTU0MjYyLnBuZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a></p><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><p>发送网络请求—–&gt;获取响应—-&gt;分析img标签的位置—–&gt;获取图片的地址—-&gt;保存—-&gt;打完收工</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">​</span><br><span class="line">rs = requests.get(<span class="string">"http://www.mmonly.cc/mmtp/swmn/289848_2.html"</span>)</span><br><span class="line">soup = BeautifulSoup(rs.text, <span class="string">'lxml'</span>)</span><br><span class="line">ele = soup.find(<span class="string">"div"</span>, class_=<span class="string">"big-pic"</span>)</span><br><span class="line">img = ele.find(<span class="string">'img'</span>)</span><br><span class="line">src1 = img.get(<span class="string">'src'</span>)</span><br><span class="line">print(src1)</span><br><span class="line">rs1 = requests.get(src1)</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'2.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(rs1.content)</span><br><span class="line"></span><br><span class="line">​</span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzAyYmQwOWM4MDQxNTA3YTM5MjgxMThhMzBiOGU1NjNlLmpwZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br><strong>老司机快上车，</strong><a href="http://www.mzitu.com/all" target="_blank" rel="noopener">http://www.mzitu.com/all</a><br>该网站是典型的反扒，直接访问是没有问题的，但是当你复制地址，在新的对话框内打开时，会出现403，解决策略，通过目录页间接进入。学习于一言不合就开车的<a href="http://47.93.248.15/" target="_blank" rel="noopener">张诚的博客</a>python入门系列课程。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzIwMTkwNzAyMTEwMTM5NDg3LnBuZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzIwMTkwNzAyMTEwMTU5MjgucG5n?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>获取目录后，诸葛进行访问，获取每个界面的最大值，遍历保存即可。<br>（滑稽）要是只想保存比较色青的图片，可以使用阿里云的图片智能鉴黄api。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">​</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mzi_Spider</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.all_url = <span class="string">"http://www.mzitu.com/all"</span></span><br><span class="line">        self.headers = {</span><br><span class="line">            <span class="string">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36"</span>,</span><br><span class="line">            <span class="string">"referer"</span>: <span class="string">"https://www.mzitu.com/tag/youhuo/"</span>,</span><br><span class="line">            }</span><br><span class="line">        <span class="comment"># 存储路径</span></span><br><span class="line">        self.path = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_link_list</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 发送请求</span></span><br><span class="line">        start_html = requests.get(self.all_url, headers=self.headers)</span><br><span class="line">        <span class="comment"># print(start_html.text)</span></span><br><span class="line"></span><br><span class="line">        soup = BeautifulSoup(start_html.text, <span class="string">"html.parser"</span>)</span><br><span class="line">        peles = soup.find_all(<span class="string">"p"</span>, class_=<span class="string">"url"</span>)</span><br><span class="line">        <span class="keyword">return</span> peles</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_link</span><span class="params">(self, peles)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> peles:</span><br><span class="line">            <span class="comment"># 读取每一个p分组内的a标签</span></span><br><span class="line">            aeles = n.find_all(<span class="string">"a"</span>)</span><br><span class="line">        <span class="keyword">return</span> aeles</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_max_size</span><span class="params">(self, a)</span>:</span></span><br><span class="line">        <span class="comment"># 进行请求  获得最大页面</span></span><br><span class="line">        html = requests.get(a[<span class="string">"href"</span>], headers=self.headers)</span><br><span class="line">        mess = BeautifulSoup(html.text, <span class="string">"html.parser"</span>)</span><br><span class="line">        pic_max = mess.find(<span class="string">"div"</span>, class_=<span class="string">"pagenavi"</span>).find_all(<span class="string">'span'</span>)[<span class="number">-2</span>]</span><br><span class="line">        pic_max = pic_max.text</span><br><span class="line">        <span class="keyword">return</span> pic_max</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider_f</span><span class="params">(self, aeles)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> aeles:</span><br><span class="line">            title = a.get_text()</span><br><span class="line">            <span class="keyword">if</span> title != <span class="string">""</span>:</span><br><span class="line">                print(<span class="string">"ready:"</span> + title)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> os.path.exists(self.path + title.strip().replace(<span class="string">'?'</span>, <span class="string">''</span>)):</span><br><span class="line">                print(<span class="string">"directory already exists"</span>)</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 创建目录</span></span><br><span class="line">                os.makedirs(self.path + title.strip().replace(<span class="string">'?'</span>, <span class="string">''</span>))</span><br><span class="line">                flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                pic_max = self.get_max_size(a)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> flag == <span class="number">1</span> <span class="keyword">and</span> len(os.listdir(self.path + title.strip().replace(<span class="string">'?'</span>, <span class="string">''</span>))) &gt;= int(pic_max):</span><br><span class="line">                print(<span class="string">"已经保存完毕,跳过"</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self.Save(a, pic_max, title)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Save</span><span class="params">(self, a, pic_max, title)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, int(pic_max) + <span class="number">1</span>):</span><br><span class="line">            pic = a[<span class="string">"href"</span>] + <span class="string">"/"</span> + str(num)</span><br><span class="line">            html = requests.get(pic, headers=self.headers)</span><br><span class="line">            mess = BeautifulSoup(html.text, <span class="string">"html.parser"</span>)</span><br><span class="line">            pic_url = mess.find(<span class="string">'img'</span>, alt=title)</span><br><span class="line">            <span class="keyword">if</span> pic_url == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            print(pic_url[<span class="string">'src'</span>])</span><br><span class="line">            html = requests.get(pic_url[<span class="string">'src'</span>], headers=self.headers)</span><br><span class="line"></span><br><span class="line">            filename = pic_url[<span class="string">'src'</span>].split(<span class="string">'/'</span>)[<span class="number">-1</span>]</span><br><span class="line">            f = open(title + <span class="string">"/"</span> + filename, <span class="string">"wb"</span>)</span><br><span class="line">            f.write(html.content)</span><br><span class="line">            f.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">MainLoop</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#主要逻辑</span></span><br><span class="line">        <span class="comment">#网站的目录列表获取</span></span><br><span class="line">        peles = self.get_link_list()</span><br><span class="line">        <span class="comment">#读取获取到的连接</span></span><br><span class="line">        aeles = self.read_link(peles)</span><br><span class="line">        <span class="comment">#开始爬取</span></span><br><span class="line">        self.spider_f(aeles)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    spiderman = mzi_Spider()</span><br><span class="line">    spiderman.MainLoop()</span><br><span class="line">    print(<span class="string">"success"</span>)</span><br><span class="line"></span><br><span class="line">​</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python学习 </tag>
            
            <tag> 爬虫基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello，HDU！</title>
      <link href="2020/05/19/Hello%EF%BC%8CHDU%EF%BC%81/"/>
      <url>2020/05/19/Hello%EF%BC%8CHDU%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p>　　<strong>山重水复疑无路，柳暗花明又一村。</strong><br>　　这段时间真实“命运多舛”，自己花了几个月的时间接受了自己没考上这个既定事实，转身投入到找工作阶段，因为碰上了疫情，各种僵尸岗，加上在大学期间没有太多的项目经验，抛出去的简历各种沉没，还有就是自己心高气傲，在一开始什么都没有准备的情况下，只投大厂，百度小米京东虎牙……<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzE1Nzg4ODYwMTk4MjMuanBlZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a><br>　　大厂春招补录那都是神仙打架，自己直接被“怼”的体无完肤，记得最开始的时候，hashmap、aop、ioc、多线程、索引等等，但凡关于底层的事情，自己一句说不上来，各种“我不了解”，想想也是觉得好笑，三分钟热度过了之后，开始痛定思痛，沉寂了一个多月。<br>　　<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzcyYTk1MDFlNzlhMmI1NWI5MzRkZWJkYmFlZjg4M2FhLmdpZg#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a><br>　　“不在沉默中中爆发，就在沉默中灭亡”，在经历了各种碰壁之后，自己也算是变得圆滑，加之着手于中小型公司，可以引导面试官的思路，总算是皇天不负有心人，offer接踵而至，这时候已经到了4.15，也就是国家线公布，264，我卡线，看着录取更加无望，直接放弃，经过筛选，决定先签订一家公司，再继续找更好的，因为毕竟好友很长时间才毕业，毕设都是顺手就做了，没什么事情，又不用复试。<br>　　<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzIxNzkzYjFlMmRiZjRjNmRmNDBmYTU2NWYxODBkNzY4LmpwZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a><br>　　签约后去练了几天车，考了个科三，在这期间认识了个读研一的姐姐，也多亏她告知了我很多关于研究生的经历，又勾起了自己对研究生的向往，不然我可能真的会直接放弃接下来的复试，然后就到五月了。在自己铆足了劲准备二战百度时，（为什么选百度？因为当时跟百度的hr算是聊的最长的，将近一个小时，我还觉得这次可能可以，没想到最后人家说我这边算法答的很好，但是java基础部分可能比较欠缺，因为java多线程部分我基本没接触过，反射、动态代理这些一个都没说明白，然后他推荐我去算法工程师，就不安排下一轮面试了。）在这时候我同学和我说，我进入复试了，我以为是说笑，还跟他口吐芬芳，“你××在讲个锤子啊”，我去看了下，果然有我，又是因为碰上疫情，大部分学校扩招，所以我就进了。<br>　　<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzAyYmQwOWM4MDQxNTA3YTM5MjgxMThhMzBiOGU1NjNlLmpwZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a><br>　　既然进了，那就准备吧，反正自己暂时签约了，没啥后顾之忧，就停下找工作，此时5.5，距离复试十天，自己深知要想干过哪些一直在准备的确实是没希望了，因为也不知道到底最后要多少人，只能尽自己最大的努力，不让自己失望就好了。</p><p>　　前三天，盲目的复习看书，根本不知道自己应该干什么，心收不回来，好在自己数据结构基础还可以，漫不经心复习完了，接下来还有os，计组、网络、数据库、编译原理、软工感觉自己肯定复习不完，因为有些课我根本没上过，随便面了个实验室，莫名其妙过了。多少增加了点信心，自己决定战略性放弃几门课，回顾408和数据库，其他爱咋咋地，我是最低分，光脚的不怕穿鞋的，而且自己觉得自己本科期间的学科竞赛和项目名经验多少会加点分，就这样度过了艰难的一周，中间各种煎熬无法用语言形容，尤其是在接受没考上，这时又给了你一次机会，自己更加紧张。<br>　　<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzE1MDQ2MjAwNjE3MzQ2LmpwZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a><br>　　我本人绝对的大心脏类型，和张继科打球时一样，绝对敢在关键时刻果断处理的。在复试的过程中，基本都在按照我想象的剧本走，中英文介绍三分钟，自由问答三分钟，这段没什么难度，毕竟这种东西但凡准备下，就能流利的对答，我最担心的只是英文对话和专业课部分，说实话算法我一点都不担心，因为自己初试分数低，可能老师会有偏见，故意为难，下面英文，我抽到了“学校是否应该对校园自杀负责”，我当时看到“campus suicide”，小小的脑袋有大大的问好，因为我之前查的资料关于复试的，都是问“你的理想啊”、“你的家乡啊”、“你为什么读研啊”、“为啥选我们学校啊”，我一度认为自己理解错了，因为这尺度也太大了吧，我中文都不一定会回答，还用英文，硬着头皮答了几句，草草了事，多说无益，只会暴露自己的水平。有一个考官还发文，你六级都过了，怎么反而初试英语考得这么差。我虎躯一震，这什么问题，这两者有什么关系吗，随意应付了一句。第二题，专业课，数据结构，天助我也，“图的主要存储信息”，简直就是1+1，直接下一个算法，我一看，“字符串去空格”，我还确定了一遍，就这样吗，得到是的，差点笑出声音，读完题，我就出结果了。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzVhMzYwNzZmMGYzNGMyNWE1ODliODRlODQ3OWE1ODgwLmpwZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a>)接下来，我看别人说的就是噩梦般的自由问答，最担心的部分，因为内容广，自己没复习，考官1，我问你几个网络的吧，我，不知道，不熟悉；考官2，我问你几个组成原理吧，我，不知道，忘了，有点印象。。。。。。下面是我和考官1的对话，“你是计算机专业吗”，“是”，“那你这些应该都会啊”，“因为初试分数低，没怎么复习”，“那你选一门你熟悉的”，“数据结构”，“几个数据结构的题目巴拉巴拉巴拉巴拉”，“巴拉巴拉巴拉巴拉”。这时候我觉得差不多了，干脆就说，“其实您完全可以问我一些java底层或者框架，或者说我可以介绍下我的项目”，<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFL2I2Zjk3ZGQ0MDMxZjdlYjYwYzhjODg3ZDM5YzkwZWE5LmpwZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a>话筒给到组长，接下来的几分钟就是我独奏了，面公司面得多了，套路熟悉了，步步引导，只说会的，就这样大概五六分钟，组长说，好，不错，就到这里吧。<br>　　面试结束，因为没有简历，只有个人陈述，而我上面什么都没写，我自己还是有点慌的，很多东西都没展示出来，知道第二天一早，以为教授的秘书联系我，问我愿不愿意加入他们，这时候就算是有底了。至此也就全部结束了。<br>　　<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFLzIzNGM1N2FmN2ViZWE2MWVlNDVjZmM1NzAxYmI3NjcwLnBuZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a><br>　　“在这一条十分漫长的路上，我走过阳关大道，也走过独木小桥。路旁有深山大泽，也有平坡宜人；有杏花春雨，也有塞北秋风；有山重水复，也有柳暗花明；有迷途知返，也有绝处逢生。路太长了，时间太长了，影子太多了，回忆太重了”，如同做梦一般，从地狱到天堂，这下估计用尽了我一生的运气。<br>　　<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvSmF2YUVFL2U2NGRkYWZhNjllMWFhYjA5YjcwZWM1M2ZiYmNlZjVhLmpwZw?x-oss-process=image/format,png#pic_center" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="1"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello，HDU！ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔试+面试题目总结</title>
      <link href="2020/03/12/%E7%AC%94%E8%AF%95+%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
      <url>2020/03/12/%E7%AC%94%E8%AF%95+%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h1><h2 id="和equals区别"><a href="#和equals区别" class="headerlink" title="==和equals区别"></a>==和equals区别</h2><p><a href="http://raptor1998.top/2020/01/10/Java%E4%B8%AD%E7%9A%84String%E7%B1%BB/">见Java中的String类</a></p><h2 id="hashcode"><a href="#hashcode" class="headerlink" title="hashcode"></a>hashcode</h2><p> 哈希算法也称为散列算法，是将数据依特定算法直接指定到一个地址上。这样一来，当集合要添加新的元素时，先调用这个元素的HashCode方法，就一下子能定位到它应该放置的物理位置上。</p><ul><li>如果这个位置上没有元素，它就可以直接存储在这个位置上，不用再进行任何比较了；</li><li>如果这个位置上已经有元素了，就调用它的equals方法与新元素进行比较，相同的话就不存了；</li><li>不相同的话，也就是发生了Hash key相同导致冲突的情况，那么就在这个Hash key的地方产生一个链表，将所有产生相同HashCode的对象放到这个单链表上去，串在一起。这样一来实际调用equals方法的次数就大大降低了，几乎只需要一两次。<br><a href="https://blog.csdn.net/SEU_Calvin/article/details/52094115?utm_source=blogxgwz1" target="_blank" rel="noopener">原文地址：Java面试——HashCode的作用原理和实例解析</a><br>hashcode相等，然而equals为false，因为在散列表中，hashcode相等即两个键值对的哈希值相等，哈希值相等，并不一定得出键值对相等。<h2 id="HashMap的底层实原理"><a href="#HashMap的底层实原理" class="headerlink" title="HashMap的底层实原理"></a>HashMap的底层实原理</h2><h3 id="HashMap概述"><a href="#HashMap概述" class="headerlink" title="HashMap概述"></a>HashMap概述</h3>　　HashMap是基于哈希表的map接口的非同步实现，此实现提供所有可选的映射操作，并且允许使用null值和null键。不保证映射的顺序，特别是他不保证顺序恒久不变。<h3 id="HashMap的数据结构"><a href="#HashMap的数据结构" class="headerlink" title="HashMap的数据结构"></a>HashMap的数据结构</h3>在Java中，基本的结构就两种，数组和引用，它是“链表散列”的数据结构，即数组和链表的结合体。<br>当我们往HashMap中添加元素时，首先根据key的hashcode计算hash值，根据这个值得到元素在数组中的下标，如果该位置上已经有了元素，则这个位置上的元素将以链表的形式存放，新加入的元素在链表头，最先加入的元素在链尾。<br>jdk1.8中队HashMap实现了优化，当链表中的结点数据超过8个之后，链表会转变为红黑树。<h3 id="与hashtable的区别"><a href="#与hashtable的区别" class="headerlink" title="与hashtable的区别"></a>与hashtable的区别</h3></li><li>hashMap去掉了hashTable的contains方法，但是加上了containsValue()和containsKey()</li><li>hashTable是同步的，map是不同步的，效率上比hashTable要高</li><li>hashMap语序空键值<h3 id="hashSet实现原理"><a href="#hashSet实现原理" class="headerlink" title="hashSet实现原理"></a>hashSet实现原理</h3>hashSet底层由hashMap实现<br>hashSet的值存放于hashMap的key上<br>hashMap的value统一设为PRESENT<h2 id="final、static"><a href="#final、static" class="headerlink" title="final、static"></a>final、static</h2><h3 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h3></li><li>final修饰的类不能被继承，最终类</li><li>final修饰的方法不能被重写</li><li>final修饰的变量叫常量，常量必须初始化，初始化之后不能被修改<h3 id="static关键字"><a href="#static关键字" class="headerlink" title="static关键字"></a>static关键字</h3></li><li>static变量：按照是否被static修饰成员变量分类，一种是被修饰的，叫做静态变量或者类变量；不能被修饰的叫做实例变量。<br>  区别：静态变量被所有对象所拥共享，在内存中只有一个副本，它当且仅当类除此加载时才会被初始化。实例变量是对象所拥有的，在创建对象是被初始化，存在多个副本，各个对象拥有的副本互不影响。</li><li>static方法：静态方法，可以直接使用类名.方法名（）来调用。<br>因为静态方法可以直接通过类名调用，任何实例也可以调用，所以静态方法中不能使用super和this关键字；静态方法中不能使用非静态成员变量，也不能调用非静态方法；静态方法和静态变量都是独立于任何实例，所以静态方法不能被abstract修饰。</li><li>static代码块：静态代码块实在jvm加载类的时候执行的，并且只会执行一次，<h3 id="final和static结合"><a href="#final和static结合" class="headerlink" title="final和static结合"></a>final和static结合</h3>可以理解为“全局变量” <h2 id="ceil-、floor-、round"><a href="#ceil-、floor-、round" class="headerlink" title="ceil()、floor() 、round()"></a>ceil()、floor() 、round()</h2>分别为向上取证。向下取整和四舍五入<br>==Math.round(-1.5)  =  -1==0.5即向右取整<h2 id="String、StringBuffer和StringBuilder"><a href="#String、StringBuffer和StringBuilder" class="headerlink" title="String、StringBuffer和StringBuilder"></a>String、StringBuffer和StringBuilder</h2><h3 id="三者区别"><a href="#三者区别" class="headerlink" title="三者区别"></a>三者区别</h3>String类是不变的对象，每次操作都会产生新的String对象，然后将指针指向新的String对象；而StringBuffer和StringBuilder可以再原有的对象的基础上进行操作，所以经常改变字符串的内容尽量避免使用String。<h3 id="StringBuffer和StringBuilder区别"><a href="#StringBuffer和StringBuilder区别" class="headerlink" title="StringBuffer和StringBuilder区别"></a>StringBuffer和StringBuilder区别</h3>StringBuffer：线程安全，StringBuilder：线程不安全。因为 StringBuffer 的所有公开方法都是 synchronized 修饰的，而 StringBuilder 并没有 StringBuilder 修饰。<br><a href="https://segmentfault.com/a/1190000017909550" target="_blank" rel="noopener">https://segmentfault.com/a/1190000017909550</a><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2>不一定，抽象类是为了把相同的但不确定的东西的提取出来，为了以后的重用。定义成抽象类的目的，就是为了在子类中实现抽象类。 。抽象类不能被实例化。因为抽象类中方法未具体化，这是一种不完整的类，所以直接实例化也就没有意义了。一旦类中包含了abstract方法，那类该类必须声明为abstract类。<h3 id="抽象类可以被final修饰吗"><a href="#抽象类可以被final修饰吗" class="headerlink" title="抽象类可以被final修饰吗"></a>抽象类可以被final修饰吗</h3>不能，定义抽象类就是为了让其他类继承，定义为final类就不能被继承。<h3 id="接口和抽象类区别"><a href="#接口和抽象类区别" class="headerlink" title="接口和抽象类区别"></a>接口和抽象类区别</h3></li><li>抽象类extends来继承；接口implements来实现。</li><li>抽象类可以有构造函数；接口不行。</li><li>抽象类可以有main方法，接口不行。</li><li>类可以实现多个接口，但是只能继承一个抽象类</li><li>接口中方法默认public修饰，抽象类中可以使任意访问修饰符<h2 id="IO"><a href="#IO" class="headerlink" title="IO"></a>IO</h2>字节流和字符流，字节流是8位传输以字节为单位输入输出数据；字符流按16位传输以字符为单位输入输出。<h2 id="ArrayList和LinkedList的区别"><a href="#ArrayList和LinkedList的区别" class="headerlink" title="ArrayList和LinkedList的区别"></a>ArrayList和LinkedList的区别</h2>ArrayList底层的数据结构是数组，支持随机访问，而LinkedList的底层数据结构是双向循环链表，不支持随机访问，使用下标访问同一个元素，ArrayList的时间复杂度是O(1),而LinkedList是O(n)。<h3 id="如果catch中return了，finally还会执行吗"><a href="#如果catch中return了，finally还会执行吗" class="headerlink" title="如果catch中return了，finally还会执行吗"></a>如果catch中return了，finally还会执行吗</h3>会执行，在return前执行。<br>finally中如实没有return，则返回catch中已经形成的路径，如实finally中有返回，则形成新的返回路径，直径返回。<h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><h3 id="进程（Process）-amp-线程（Thread）"><a href="#进程（Process）-amp-线程（Thread）" class="headerlink" title="进程（Process）&amp;线程（Thread）"></a>进程（Process）&amp;线程（Thread）</h3>简而言之，进程是程序运行和资源分配的基本单位，一个程序至少有一个进程，一个进程至少有一个线程。进程在执行过程中拥有独立的内存单元，而多个线程共享内存资源，减少切换次数，从而效率更高。线程是进程的一个实体，是cpu调度和分配的基本单位，是比程序更小的能独立运行得到基本单位。统一进程中的多个线程可以并发执行。<h3 id="并发、并行"><a href="#并发、并行" class="headerlink" title="并发、并行"></a>并发、并行</h3></li><li>并行是指两个或者多个事件在同一时间发生；并发是指多个事件在同一时间间隔发生。</li><li>并行是指在不同实体的多个事件，并发是同一实体的多个事件。</li><li>并发是在一台处理器上处理多个任务，并行在多台处理器处理多个任务。如hadoop分布式集群。<h3 id="线程生命周期"><a href="#线程生命周期" class="headerlink" title="线程生命周期"></a>线程生命周期</h3>在程序开发中，将一个对象从被实例化完成，到这个对象使用结束，并销毁，将这样的过程称为对象的生命周期。<br>线程被实例化完成，到这个线程被销毁，中间的过程称之为一个线程的生命周期。</li><li>新生态：（New）一个线程对象被实例化完成，但是还没有做任何操作。</li><li>就绪态：（Ready）一个线程已经被开启，已经开始去争取cpu时间片。</li><li>运行态：（Run）一个线程争取到了cpu时间片，开始执行这个线程中的逻辑。</li><li>阻塞态：（Interrupt）一个线程在运行过程中，收到了某些操作的影响，放弃了已经争抢到的cpu时间片，并且不再参与时间片的争抢，此时线程处于挂起状态。</li><li>死亡态：（Dead）一个线程对象被销毁。<h3 id="什么是守护线程daemon-thread"><a href="#什么是守护线程daemon-thread" class="headerlink" title="什么是守护线程daemon thread"></a>什么是守护线程daemon thread</h3>如果 JVM 中没有一个正在运行的非守护线程，这个时候，JVM 会退出。换句话说，守护线程拥有自动结束自己生命周期的特性，而非守护线程不具备这个特点。JVM 中的垃圾回收线程就是典型的守护线程。<h3 id="创建线程的几种方式"><a href="#创建线程的几种方式" class="headerlink" title="创建线程的几种方式"></a>创建线程的几种方式</h3>。。。。。。<h3 id="sleep-和wait-的区别"><a href="#sleep-和wait-的区别" class="headerlink" title="sleep()和wait()的区别"></a>sleep()和wait()的区别</h3><h4 id="sleep"><a href="#sleep" class="headerlink" title="sleep()"></a>sleep()</h4>该方法是线程类Thread的静态方法，让调用的线程进入睡眠状态，让出时间片给其他线程，等到休眠时间结束，线程进入就绪态和其他线程一起争抢cpu时间片，因为sleep()是static方法，他不能改变对象的机锁，当一个synchronized代码块中调用了sleep方法，线程虽然在休眠，但是它并不释放对象的机锁，其他线程依然无法访问这个线程。如果线程在休眠时被打断，JVM就会抛出InterruptedException异常。<h4 id="wait"><a href="#wait" class="headerlink" title="wait()"></a>wait()</h4>wait是Object类的方法，当一个线程执行wait()方法时，他就进入到一个和该对象相关的等待池，同时释放对象的机锁，使得其它线程可以访问，可以通过notify或notifyall唤醒。<h3 id="notify和notifyAll的区别"><a href="#notify和notifyAll的区别" class="headerlink" title="notify和notifyAll的区别"></a>notify和notifyAll的区别</h3>锁池：假设线程A已经拥有对象锁，线程B、C想要获取锁就会被阻塞，进入一个地方去等待锁的等待，这个地方就是该对象的锁池；<br>等待池：假设线程A调用某个对象的wait方法，线程A就会释放该对象锁，同时线程A进入该对象的等待池中，进入等待池中的线程不会去竞争该对象的锁。<br>notify和notifyAll的区别：</li><li>notify只会随机选取一个处于等待池中的线程进入锁池去竞争获取锁的机会；</li><li>notifyAll会让所有处于等待池的线程全部进入锁池去竞争获取锁的机会；<h3 id="线程的run和start有什么区别"><a href="#线程的run和start有什么区别" class="headerlink" title="线程的run和start有什么区别"></a>线程的run和start有什么区别</h3>start方法用来启动一个线程。这时无需等待run方法执行完毕，可以直接执行下面的代码，这时的线程处于就绪状态，并没有运行。<br>run方法是本线程里的，只是线程的一个函数，不是多线程的。直接调用run方法，想防御调用了一个普通方法，必须等待run执行完成才能执行下面的代码，执行路径还是一条。<h3 id="java中如何保证多线程运行安全"><a href="#java中如何保证多线程运行安全" class="headerlink" title="java中如何保证多线程运行安全"></a>java中如何保证多线程运行安全</h3></li><li>原子性：提供互斥访问，同一时刻只能有一个线程对数据进行操作做。</li><li>可见性：一盒现成对主内存中的修改可以及时的被其他线程看见。</li><li>有序性：一个线程观察其他线程中的指令执行顺序，由于指令的重排序，该观察结果一般杂乱无序。<h3 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4>死锁是指两个或者多个进程在执行过程中，由于竞争彼此需要的资源或者由于彼此通信中造成的一种阻塞的现象，这些永远相互等待的进程成为死锁进程。<h4 id="死锁必要条件"><a href="#死锁必要条件" class="headerlink" title="死锁必要条件"></a>死锁必要条件</h4></li><li>互斥条件：进程对所分配到的资源不允许其他进程进行访问，若其他进程访问该资源，只能等待，直至占有该资源的进程使用完成后释放该资源</li><li>请求和保持条件：进程获得一定的资源之后，又对其他资源发出请求，但是该资源可能被其他进程占有，此事请求阻塞，但又对自己获得的资源保持不放</li><li>不可剥夺条件：是指进程已获得的资源，在未完成使用之前，不可被剥夺，只能在使用完后自己释放</li><li>环路等待条件：是指进程发生死锁后，若干进程之间形成一种头尾相接的循环等待资源关系<h3 id="ThreadLocal"><a href="#ThreadLocal" class="headerlink" title="ThreadLocal"></a>ThreadLocal</h3><a href="https://www.cnblogs.com/cjsblog/p/9773079.html" target="_blank" rel="noopener">ThreadLocal原理</a><br><a href="https://blog.csdn.net/Oeljeklaus/article/details/80545749?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">切底明白ThreadLocal的原理与使用</a><h3 id="synchronized底层实现原理"><a href="#synchronized底层实现原理" class="headerlink" title="synchronized底层实现原理"></a>synchronized底层实现原理</h3><a href="https://blog.csdn.net/weixin_43213517/article/details/89713899" target="_blank" rel="noopener">synchronized的底层实现原理及各种优化</a><h3 id="synchronized和volatile的区别"><a href="#synchronized和volatile的区别" class="headerlink" title="synchronized和volatile的区别"></a>synchronized和volatile的区别</h3></li><li>volatile本质是告诉jvm当前变量在寄存器（工作主存）中的值是不确定的，需要从主存中去读取；synchronized则是锁定当前变量，只有当前线程可以访问该变量，其他线程被阻塞。</li><li>volatile只能使用在变量级别；synchronized可以使用在变量、方法和类级别。</li><li>volatile仅能实现变量修改的可见性，不保证原子性；synchronized可以保证变量的修改可见性和原子性。</li><li>volatile不会造成线程堵塞；synchronized可能会造成堵塞</li><li>volatile标记的变量不会被编译器优化；synchronized标记的变量可以被编译器优化。<h3 id="synchronized和lock的区别"><a href="#synchronized和lock的区别" class="headerlink" title="synchronized和lock的区别"></a>synchronized和lock的区别</h3></li><li>sy是java的内置关键字，在jvm层面，而lock是个类</li><li>sy会自动释放锁（执行完成释放锁或者执行中发生异常会释放锁）；lock需要手工在finally中释放，否则容易死锁。</li><li>用synchronized关键字，两个线程，线程1获得锁，线程而等待；若是线程1阻塞，线程2会一直等下去，而Lock可以让等待锁的线程响应中断。</li><li>在性能上来说，如果竞争资源不激烈，两者的性能是差不多的，而当竞争资源非常激烈时（即有大量线程同时竞争），此时Lock的性能要远远优于synchronized。<br><a href="https://blog.csdn.net/suchahaerkang/article/details/80456085" target="_blank" rel="noopener">干货：synchronized和volatile的区别</a><h3 id="synchronized和Reentrantlock的区别"><a href="#synchronized和Reentrantlock的区别" class="headerlink" title="synchronized和Reentrantlock的区别"></a>synchronized和Reentrantlock的区别</h3>sy是关键字，后者是类，提供了比sy更加灵活的特性</li><li>可以对获取锁的等待时间进行设置，这样就避免了死锁。</li><li>可以获取各种的锁信息。</li><li>可以灵活的实现多路通知。<br><a href="https://blog.csdn.net/zheng548/article/details/54426947" target="_blank" rel="noopener">synchronized和Reentrantlock的区别</a><h2 id="深拷贝和浅拷贝"><a href="#深拷贝和浅拷贝" class="headerlink" title="深拷贝和浅拷贝"></a>深拷贝和浅拷贝</h2>浅拷贝只是复制了对象的引用地址，两个对象指向同一个内存地址，所以修改其中任意的值，另一个值都会随之变化。<br>深拷贝是将对象及值复制过来，两个对象修改其中任意的值另一个值不会改变。<h1 id="J2EE"><a href="#J2EE" class="headerlink" title="J2EE"></a>J2EE</h1><h2 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h2><h3 id="SpringAOP"><a href="#SpringAOP" class="headerlink" title="SpringAOP"></a>SpringAOP</h3>aop面向切面编程，面向对象的补充和完善（oop），oop通过引入封装继承多态等来建立一种对象层次结构，用以模拟公共行为的一个集合，当我们需要为这些分散的对象引入共公共行为的时候，oop显得无能为力。oop适合定义从上到下的关系，不适合从左到右的关系，例如日志功能，日志代码往往水平的分散在所有对象层次中，而且与它分布到的对象的核心功能毫无关系，这种被散布在各种无关处的代码称为横切代码，在oop中，它导致了大量代码的冗余，而不利于模块的重用。<br>而aop技术它是利用一种成为横切的技术，剖解开封装的对象的内部，并将那些影响了多个类的公共行为封装到一个可重用的模块中，并将其命名为“Aspect”，即方面。简单来说，就是将那些与业务无关，却为业务模块所共同调用的逻辑或责任封装起来，便于减少系统的重复代码，降低模块之间的耦合度，并有利于为来的可操作性和可维护性。<br>aop的核心思想就是：将应用程序中的商业逻辑同对其提供支持的通用服务进行分离。<h3 id="SpringIOC"><a href="#SpringIOC" class="headerlink" title="SpringIOC"></a>SpringIOC</h3>ioc最早在一篇探讨面向对象的框架的文章中提出。对于面向对象，就是吧复杂的系统分解成相互合作的对象，这些对象通过封装以后，内部实现对外部是透明的，从而降低的解决问题的复杂度，而且可以重用和拓展。<br>IOC是借助于“第三方”实现具有依赖关系的对象之间的解耦，全部对象的控制权全部交给ioc容器，起到一种粘合剂的作用，当去掉ioc容器后，就是要实现的全部内容，对象之间的关系已经没有了耦合关系，每一成员只需要实现自己的类就可以了。<br>在没有引入ioc之前，对象A要调用B，A必须要主动的去创建B，控制权都在自己手上。引入ioc后，由于ioc的注入，A与B失去直接联系，当A运行中需要使用对象B时，ioc会会主动去创建一个B到A需要的地方。<br>对象A获得依赖对象B的过程，由主动行为变为被动行为，控制权点到过来，这就是“控制反转”.<h2 id="web基础"><a href="#web基础" class="headerlink" title="web基础"></a>web基础</h2><h3 id="session和cookie的区别"><a href="#session和cookie的区别" class="headerlink" title="session和cookie的区别"></a>session和cookie的区别</h3><blockquote><p>1.分给顾客一张卡片，每消费一次记录一次；</p></blockquote></li></ul><p>2.发给顾客一张卡片，上面有卡号，顾客每消费一次，由店员在操作机上记录一次。<br>分析： 方案1和2正是对应的客户端记录和服务端记录。与之相对应的正是cookie和session。 </p><h3 id="session工作原理"><a href="#session工作原理" class="headerlink" title="session工作原理"></a>session工作原理</h3><p>session类似于独立于服务器上的一个散列表格文件，像一个map，键值存的是用户的sessionid，用户向服务器发送请求时会带上这个sessionid，去除value。<br>禁止cookie之后session不能使用，session需要sessionid来确定当前对话所对应服务器的session，而sessionid是通过cookie传递的。</p><h3 id="jsp和servlet的区别"><a href="#jsp和servlet的区别" class="headerlink" title="jsp和servlet的区别"></a>jsp和servlet的区别</h3><ol><li><p>sp经编译后就变成了Servlet.（JSP的本质就是Servlet，JVM只能识别java的类，不能识别JSP的代码，Web容器将JSP的代码编译成JVM能够识别的java类）</p></li><li><p>jsp更擅长表现于页面显示，servlet更擅长于逻辑控制。</p></li><li><p>Servlet中没有内置对象，Jsp中的内置对象都是必须通过HttpServletRequest对象，HttpServletResponse对象以及HttpServlet对象得到。</p></li><li><p>Jsp是Servlet的一种简化，使用Jsp只需要完成程序员需要输出到客户端的内容，Jsp中的Java脚本如何镶嵌到一个类中，由Jsp容器完成。而Servlet则是个完整的Java类，这个类的Service方法用于生成对客户端的响应。</p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2></li><li><p>Atomicity（原子性）：一个事务（transaction）中的所有操作，或者全部完成，或者全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被恢复（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。即，事务不可分割、不可约简。</p></li><li><p>Consistency（一致性）：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设约束、触发器、级联回滚等。</p></li><li><p>Isolation（隔离性）：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。</p></li><li><p>Durability（持久性）：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p><h2 id="乐观锁与悲观锁"><a href="#乐观锁与悲观锁" class="headerlink" title="乐观锁与悲观锁"></a>乐观锁与悲观锁</h2></li><li><p>乐观锁：每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在提交更新的时候会判断一下在此期间别人有没有去更新这个数据。</p></li><li><p>悲观锁：每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会阻止，直到这个锁被释放。<br>数据库的乐观锁需要自己实现，在表里面添加一个 version 字段，每次修改成功值加 1，这样每次修改的时候先对比一下，自己拥有的 version 和数据库现在的 version 是否一致，如果不一致就不修改，这样就实现了乐观锁。</p></li></ol><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="b-树"><a href="#b-树" class="headerlink" title="b+树"></a>b+树</h3><p><a href="https://blog.csdn.net/qq_26222859/article/details/80631121" target="_blank" rel="noopener">https://blog.csdn.net/qq_26222859/article/details/80631121</a></p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ol><li>为搜索字段设置索引</li><li>避免使用select * ，列出需要查询的字段</li><li>垂直分割分表</li><li>选择正确的存储引擎<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><h2 id="约瑟夫环问题"><a href="#约瑟夫环问题" class="headerlink" title="约瑟夫环问题"></a>约瑟夫环问题</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">common</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span><span class="comment">//</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> died=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(died&lt;n)</span><br><span class="line">    {</span><br><span class="line">        ++i;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;n)   <span class="comment">//暴力循环</span></span><br><span class="line">            i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(vis[i]!=<span class="number">1</span>)   <span class="comment">//没有死亡  则报数</span></span><br><span class="line">            num++;</span><br><span class="line">        <span class="keyword">if</span>(num==m)     <span class="comment">//当前人死亡 则清零重新开始</span></span><br><span class="line">        {</span><br><span class="line">            num=<span class="number">0</span>;</span><br><span class="line">            vis[i]=<span class="number">1</span>;</span><br><span class="line">            ++died;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;died&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div><h2 id="最大上升子序列和"><a href="#最大上升子序列和" class="headerlink" title="最大上升子序列和"></a>最大上升子序列和</h2></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">      <span class="built_in">memset</span>(sum,<span class="number">0</span>,<span class="keyword">sizeof</span>(sum));</span><br><span class="line">      <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//以第i个数为结尾的最长上升子序列和</span></span><br><span class="line">      {</span><br><span class="line">          max=<span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span>(j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">          {</span><br><span class="line">              <span class="keyword">if</span>(a[j]&lt;a[i])</span><br><span class="line">              {</span><br><span class="line">                  <span class="keyword">if</span>(sum[j]&gt;max)<span class="comment">//搜索左端最大上升子序列和</span></span><br><span class="line">                      max=sum[j];</span><br><span class="line">              }</span><br><span class="line">          }</span><br><span class="line">      sum[i]+=max;</span><br></pre></td></tr></tbody></table></figure></div><h2 id="筛素数"><a href="#筛素数" class="headerlink" title="筛素数"></a>筛素数</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> prime[N],vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Aila</span><span class="params">(<span class="keyword">int</span> n)</span><span class="comment">//埃氏筛法，线性筛</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        {</span><br><span class="line">            prime[k++]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;n;j+=i)</span><br><span class="line">            {</span><br><span class="line">                vis[j]=<span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Oula</span><span class="params">(<span class="keyword">int</span> n)</span><span class="comment">//欧拉筛法</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">            prime[k++]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;k&amp;&amp;i*prime[j]&lt;n;j++)</span><br><span class="line">        {</span><br><span class="line">            vis[i*prime[j]]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)<span class="comment">//此保证了合数只会被他的最小质因数筛掉，当i是prime[j]的整数倍时，i*prime[j+1]肯定被筛过，跳出循环。因为i可以看做prime[j]*某个数， i*prime[j+1]就可以看做 prime[j]*某个数*prime[j+1] 。而 prime[j] 必定小于 prime[j+1]，</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
      
      
      <categories>
          
          <category> 面试总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java中的String类</title>
      <link href="2020/01/10/Java%E4%B8%AD%E7%9A%84String%E7%B1%BB/"/>
      <url>2020/01/10/Java%E4%B8%AD%E7%9A%84String%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在理解String类之前，需要了解java内存的栈（对象引用）、堆（对象本身）和方法区（共享数据区，常量池等）等。此处不做赘述。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="Programming" class="fancybox"><img alt="Programming" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/JavaEE/program.jpg" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="Programming"></a></p><h2 id="与equals方法的比较"><a href="#与equals方法的比较" class="headerlink" title="==与equals方法的比较"></a>==与equals方法的比较</h2><h3 id="操作符"><a href="#操作符" class="headerlink" title="==操作符"></a>==操作符</h3><ol><li>引用类型比较引用(是否指向同一个对象)</li><li>基本类型比较值<h3 id="equals"><a href="#equals" class="headerlink" title="equals()"></a>equals()</h3></li><li>是Object类的方法，由于所有类都继承Object类，也就继承了equals()方法。只能比较引用类型。在Object类的定义中，其作用与“==”相同,比较是否指向同一个对象。</li><li>注意：对类File、String、Date、封装类（Wrapper Class）及很多重写了equals()方法的类来说，是比较类型及内容而不考虑引用是否指向同一个对象<h4 id="equals源码"><a href="#equals源码" class="headerlink" title="equals源码"></a>equals源码</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">this</span> == obj);</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><h4 id="demo1"><a href="#demo1" class="headerlink" title="demo1"></a>demo1</h4></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Student student1 = <span class="keyword">new</span> Student();</span><br><span class="line">Student student2 = <span class="keyword">new</span> Student();</span><br><span class="line">System.out.println(student1 + <span class="string">"\n"</span> + student2);<span class="comment">// com.raptor.entity.Student@106d69c</span></span><br><span class="line">   <span class="comment">// com.raptor.entity.Student@52e922</span></span><br><span class="line">System.out.println(student1 == student2);<span class="comment">// false</span></span><br><span class="line">System.out.println(student1.equals(student2));<span class="comment">// false</span></span><br></pre></td></tr></tbody></table></figure></div><h2 id="String重写的equals"><a href="#String重写的equals" class="headerlink" title="String重写的equals()"></a>String重写的equals()</h2><h3 id="重写后的方法"><a href="#重写后的方法" class="headerlink" title="重写后的方法"></a>重写后的方法</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) {</span><br><span class="line">            String anotherString = (String)anObject;</span><br><span class="line">            <span class="keyword">int</span> n = value.length;</span><br><span class="line">            <span class="keyword">if</span> (n == anotherString.value.length) {</span><br><span class="line">                <span class="keyword">char</span> v1[] = value;</span><br><span class="line">                <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (n-- != <span class="number">0</span>) {</span><br><span class="line">                    <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    i++;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure></div><h3 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h3><h4 id="demo1：String创建"><a href="#demo1：String创建" class="headerlink" title="demo1：String创建"></a>demo1：String创建</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String newS1 = <span class="keyword">new</span> String(<span class="string">"hello"</span>);</span><br><span class="line">String newS2 = <span class="keyword">new</span> String(<span class="string">"hello"</span>);</span><br><span class="line">String ss1 = <span class="string">"hello"</span>;</span><br><span class="line">String ss2 = <span class="string">"hello"</span>;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"ss1==ss2是"</span> + (ss1 == ss2));<span class="comment">//true</span></span><br><span class="line">System.out.println(<span class="string">"ss1==newS1是"</span> + (ss1 == newS1));<span class="comment">//false</span></span><br><span class="line">System.out.println(<span class="string">"newS1==newS2是"</span> + (newS1 == newS2));<span class="comment">//false</span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="demo1内存分析"><a href="#demo1内存分析" class="headerlink" title="demo1内存分析"></a>demo1内存分析</h4><ol><li>使用直接赋值，即ss1和ss2方式创建字符串常量时。JVM会首先检查字符串常量池，如果该字符串已经存在常量池中，那么就将此字符串对象的地址赋值给引用ss1和ss2。如果字符串不存在常量池中，就会实例化该字符串并且将其放到常量池中，并将此字符串对象的地址赋值给引用ss1和ss2。</li><li>使用new关键字创建字符串常量时。JVM会首先检查字符串常量池，如果该字符串已经存在常量池中，那么不再在字符串常量池创建该字符串对象，而直接堆中复制该对象的副本，然后将堆中对象的地址赋值给引用newS1，newS2，如果字符串不存在常量池中，就会实例化该字符串并且将其放到常量池中，然后在堆中复制该对象的副本，然后将堆中对象的地址赋值给引用newS1，newS2。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="内存分析" class="fancybox"><img alt="内存分析" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/JavaEE/jvm1.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="内存分析"></a><h4 id="demo2：String类型拼接"><a href="#demo2：String类型拼接" class="headerlink" title="demo2：String类型拼接"></a>demo2：String类型拼接</h4>String类的引用可以指向不同的字符串，这是因为字符串对象虽然是不能修改的, 但是它们的地址可以共享。<br>java中String类型不可变，‘+’的实现：jvm复制了一份“hello”对象与“world”做拼接，并没有改变原来的“hello”的值。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String s = <span class="string">"hello"</span>;</span><br><span class="line">s+=<span class="string">"world"</span>;</span><br><span class="line">System.out.println(s);  <span class="comment">//helloworld</span></span><br></pre></td></tr></tbody></table></figure></div><h4 id="demo2内存分析"><a href="#demo2内存分析" class="headerlink" title="demo2内存分析"></a>demo2内存分析</h4><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="'+'在内存的实现" class="fancybox"><img alt="'+'在内存的实现" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/JavaEE/jvm2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="'+'在内存的实现"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> String </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2019/12/25/HelloWorld/"/>
      <url>2019/12/25/HelloWorld/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><h3 id="更新-12-31"><a href="#更新-12-31" class="headerlink" title="更新 12.31"></a>更新 12.31</h3><p>　　更换了来必力评论系统，避免了valine评论后不知道是谁的缺陷，个人认为来必力更友好。</p><h3 id="更新-12-28"><a href="#更新-12-28" class="headerlink" title="更新 12.28"></a>更新 12.28</h3><p>　　经过多个日夜奋战，终于，能看的到的功能基本实现。</p><h3 id="自我简介"><a href="#自我简介" class="headerlink" title="自我简介"></a>自我简介</h3><div class="justified-gallery"><p><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcveWluZ211LmpwZWc?x-oss-process=image/format,png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcveWluZ211LmpwZWc?x-oss-process=image/format,png" alt="" title=""></a><br><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvamsucG5n?x-oss-process=image/format,png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvamsucG5n?x-oss-process=image/format,png" alt="" title=""></a><br><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvams0LmpwZw?x-oss-process=image/format,png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvams0LmpwZw?x-oss-process=image/format,png" alt="" title=""></a><br><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvcHViZy5qcGc?x-oss-process=image/format,png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvcHViZy5qcGc?x-oss-process=image/format,png" alt="" title=""></a><br><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvY3FlMi5qcGc?x-oss-process=image/format,png" data-fancybox="group" data-caption="千秋万载，一统江湖，狗头" class="fancybox"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvY3FlMi5qcGc?x-oss-process=image/format,png" alt="千秋万载，一统江湖，狗头" title="千秋万载，一统江湖，狗头"></a><br><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvamszLmpwZw?x-oss-process=image/format,png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvamszLmpwZw?x-oss-process=image/format,png" alt="" title=""></a><br><a href="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvNTEzNmEzZDYxY2RlYS5qcGc?x-oss-process=image/format,png" data-fancybox="group" data-caption="" class="fancybox"><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvNTEzNmEzZDYxY2RlYS5qcGc?x-oss-process=image/format,png" alt="" title=""></a></p>          </div><p>　　我就是江湖上人见人爱、花见花开、车见车载，人称上天入地、无所不能、英俊潇洒、风流倜傥、玉树临风、学富五车、高大威猛、拥有千万‘粉丝’、迷倒万千少女,号称一朵梨花压海棠的玉面小白龙!<br>　　三岁习文，四岁习武，五岁精通诗词歌赋，六岁就能胸口岁大石，八岁就能通晓琴棋书画，上知天文地理，下知鸡毛蒜皮，每外出行走，常引美女回头，帅哥跳楼，心地善良，乐于助人。<br>　　七岁那年在医院。<br>　　<strong><font color="red" size="6">以上纯属扯淡</font></strong><br>　　本人国内某不知名大学计算机专业在读小小白，老家坐标，山东琅琊。前期主修C/C++，后期主修Java，一直希望到浙江某大读书，目前来看，势态研凉~~。<br>　　FPS游戏爱好者；业余到不能再业余的乒乓球选手，混迹于球队打杂；不善于表达，至今之身一人独创江湖。<br>　　大学期间未修成神功，但<font color="red">发量</font>显示有向大拿发展的趋势。<br>　　废话不多说，<strong>Talk is cheap, show me the code.</strong></p><h3 id="CSDN"><a href="#CSDN" class="headerlink" title="CSDN"></a><font color="red">CSDN</font></h3><p>　　CSDN文章经常性被人工驳回，明明无敏感内容，实在无法忍受，遂搭建此博客，对博客维护与博客规则实属小白一枚，若是有功能出现问题，不要大惊小怪，实属正常，还望不吝赐教，<strong>若有侵权，及时联系</strong>，本人会第一时间解决。<br><a href="https://blog.csdn.net/C18854805113" target="_blank" rel="noopener">CSDN博客地址，https://blog.csdn.net/C18854805113，点我进入</a>虽然不怎么想用，还很菜，但是有一颗上进的心<font color="red">❤</font>（滑稽），欢迎大家关注。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="GuanzhuLaozi" class="fancybox"><img alt="GuanzhuLaozi" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvZ3VhbnpodS5wbmc?x-oss-process=image/format,png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="GuanzhuLaozi"></a></p><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p><a href="https://github.com/Raptor1998/" target="_blank" rel="noopener">https://github.com/Raptor1998/</a></p><h3 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h3><h4 id="邮箱"><a href="#邮箱" class="headerlink" title="邮箱"></a>邮箱</h4><p><a href="mailto:knightcwh@163.com">knightcwh@163.com</a></p><h4 id="微信"><a href="#微信" class="headerlink" title="微信 "></a>微信 <a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="扫码加微信" class="fancybox"><img alt="扫码加微信" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvd2VjaGF0LmpwZw?x-oss-process=image/format,png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="扫码加微信"></a></h4><h4 id="扣扣"><a href="#扣扣" class="headerlink" title="扣扣"></a>扣扣</h4><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="扫码加扣" class="fancybox"><img alt="扫码加扣" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvcXEuanBn?x-oss-process=image/format,png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="扫码加扣"></a></p><h4 id="微博"><a href="#微博" class="headerlink" title="微博"></a>微博</h4><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="扫码关注" class="fancybox"><img alt="扫码关注" data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3JhcHRvcjE5OTgvaW1naG91c2UvcmFwdG9yMTk5OF9pbWcvc2luYS5wbmc?x-oss-process=image/format,png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="扫码关注"></a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>　　<strong>有网页加载出来不要慌，不要怀疑，不是你网速慢，就是该站的问题，多等一会估计就好了，等多久，……，那就不好说了。</strong><br>　　<strong>一到晚上打开的速度更慢，很鸡肋，不慌，慢就慢吧，正在想办法解决。</strong><br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="计算机可有意思了，压力也不是很大，就是头冷" class="fancybox"><img alt="计算机可有意思了，压力也不是很大，就是头冷" data-src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/press.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="计算机可有意思了，压力也不是很大，就是头冷"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷CSDN浏览量【Python学习】</title>
      <link href="2019/11/01/%E5%88%B7CSDN%E6%B5%8F%E8%A7%88%E9%87%8F%E3%80%90Python%E5%AD%A6%E4%B9%A0%E3%80%91/"/>
      <url>2019/11/01/%E5%88%B7CSDN%E6%B5%8F%E8%A7%88%E9%87%8F%E3%80%90Python%E5%AD%A6%E4%B9%A0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p><strong>——&gt;&gt;python小白一枚，仅限于了解基础语法，经过多天的学习，结果令人欣慰，可以正确的输出”Hello world！！”。</strong></p><h2 id="现已经失效，仅在更新前有效。"><a href="#现已经失效，仅在更新前有效。" class="headerlink" title="现已经失效，仅在更新前有效。"></a><strong><font color="red">现已经失效，仅在更新前有效。</font></strong></h2><p>在学习爬虫之余，突发奇想，博客不也可以用爬虫模拟访问吗，于是乎（/滑稽/滑稽）</p><p>综合各个大佬的方式之后，终于可以缓慢的刷取</p><p>简单说下思路，1，只用一个ip无限的访问肯定是不行的，所以要用代理；2，为了避免出现无限次访问同一篇文章，先获取一下所有文章的url，保存后，随机访问。而且在主页文章之间来回切换访问，还有就是间接性的，访问之后暂停几秒，伪装一下是人为点击。</p><h2 id="step1-获取文章的url"><a href="#step1-获取文章的url" class="headerlink" title="step1 获取文章的url"></a>step1 获取文章的url</h2><p>分析csdn的目录结构可以发现其特点，<a href="https://blog.csdn.net/C18854805113/article/list/2?" target="_blank" rel="noopener">https://blog.csdn.net/C18854805113/article/list/2? </a><br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191016221327906.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>利用xpath获取文章的url地址，爬取地址后保存在文件中即可。<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191016221354324.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36"</span></span><br><span class="line">,</span><br><span class="line">    <span class="string">"referer"</span>: <span class="string">"https://blog.csdn.net/C18854805113/article/list/11?"</span></span><br><span class="line">}</span><br><span class="line">url = <span class="string">"https://blog.csdn.net/C18854805113/article/list/{}?"</span></span><br><span class="line">url_list = [url.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">12</span>)]</span><br><span class="line"><span class="comment"># print(url_list)</span></span><br><span class="line">all_list = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    html_str = response.content.decode()</span><br><span class="line">    html = etree.HTML(html_str)</span><br><span class="line">    content_url_list = html.xpath(<span class="string">"//*[@id='mainBox']/main/div[2]/div/h4/a/@href"</span>)</span><br><span class="line">    <span class="comment"># print(content_url_list)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> content_url_list[<span class="number">1</span>:]:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"url_list.txt"</span>, <span class="string">"a"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(i)</span><br><span class="line">            f.write(<span class="string">"\n"</span>)</span><br><span class="line">    f.close()</span><br><span class="line">f = open(<span class="string">"url_list.txt"</span>, <span class="string">"r"</span>)   <span class="comment">#设置文件对象</span></span><br><span class="line">line = f.readline()</span><br><span class="line">line = line[:<span class="number">-1</span>]</span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">while</span> line:             <span class="comment">#直到读取完文件</span></span><br><span class="line">    line = f.readline()  <span class="comment">#读取一行文件，包括换行符</span></span><br><span class="line">    line = line[:<span class="number">-1</span>]     <span class="comment">#去掉换行符，也可以不去</span></span><br><span class="line">    data.append(line)</span><br><span class="line">f.close() <span class="comment">#关闭文件</span></span><br><span class="line">print(data)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="step2-通过代理ip访问"><a href="#step2-通过代理ip访问" class="headerlink" title="step2 通过代理ip访问"></a>step2 通过代理ip访问</h2><p>国内高速代理 <a href="https://www.kuaidaili.com/free/" target="_blank" rel="noopener">https://www.kuaidaili.com/free/</a><br>通过ip伪装加上随机访问，header随机选取，模拟手点。在代理的页数靠后时，便返回第一页。</p><p>不知是什么原因，在程序运行超一定时间后，总是莫名的停止。此为业余学习，当时在进行大数据课程的实训，未进行深究。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> urllib2</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span>:</span></span><br><span class="line">    f = open(<span class="string">"url_list.txt"</span>, <span class="string">"r"</span>)   <span class="comment">#设置文件对象</span></span><br><span class="line">    line = f.readline()</span><br><span class="line">    line = line[:<span class="number">-1</span>]</span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">while</span> line:             <span class="comment">#直到读取完文件</span></span><br><span class="line">        line = f.readline()  <span class="comment">#读取一行文件，包括换行符</span></span><br><span class="line">        line = line[:<span class="number">-1</span>]     <span class="comment">#去掉换行符，也可以不去</span></span><br><span class="line">        data.append(line)</span><br><span class="line"></span><br><span class="line">    data = data[:<span class="number">-1</span>]</span><br><span class="line">    f.close() <span class="comment">#关闭文件</span></span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CsdnSpider</span><span class="params">()</span>:</span></span><br><span class="line">    USER_AGENTS = [</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,</span><br><span class="line">        <span class="string">'Opera/8.0 (Windows NT 5.1; U; en)'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50'</span>,</span><br><span class="line">        <span class="string">'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 Safari/534.16'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 SE 2.X MetaSr 1.0'</span>,</span><br><span class="line">        <span class="string">'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36'</span></span><br><span class="line"></span><br><span class="line">    ]</span><br><span class="line">    <span class="comment"># url_list = [</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/94392168",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/category/8519763",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/94036536",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/71799137",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/71799246"</span></span><br><span class="line">    <span class="comment"># ]</span></span><br><span class="line">    url_list = get_url()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.url_list)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.page = <span class="number">0</span></span><br><span class="line">        self.proxy = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_proxy</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.page += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.page &gt; <span class="number">100</span>:</span><br><span class="line">            self.page = <span class="number">1</span></span><br><span class="line">        headers = {</span><br><span class="line">            <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11"</span>}</span><br><span class="line">        request = urllib2.Request(<span class="string">"https://www.kuaidaili.com/free/inha/"</span> + str(self.page), headers=headers)</span><br><span class="line">        html = urllib2.urlopen(request).read()</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">        content = etree.HTML(html)</span><br><span class="line">        <span class="comment">#拼接ip和端口</span></span><br><span class="line">        ip = content.xpath(<span class="string">'//td[@data-title="IP"]/text()'</span>)</span><br><span class="line">        port = content.xpath(<span class="string">'//td[@data-title="PORT"]/text()'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ip)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(port)):</span><br><span class="line">                <span class="keyword">if</span> i == j:</span><br><span class="line">                    <span class="keyword">if</span> ip[i] + <span class="string">':'</span> + port[j] <span class="keyword">not</span> <span class="keyword">in</span> self.proxy:</span><br><span class="line">                        self.proxy.append(ip[i] + <span class="string">':'</span> + port[j])</span><br><span class="line">        <span class="keyword">if</span> self.proxy:</span><br><span class="line">            <span class="comment"># print(self.proxy)</span></span><br><span class="line">            print(self.page)</span><br><span class="line">            self.spider()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 计数</span></span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 随机url</span></span><br><span class="line">            referer = random.choice(self.url_list)</span><br><span class="line">            headers = {</span><br><span class="line">                <span class="string">"Connection"</span>: <span class="string">"keep-alive"</span>,</span><br><span class="line">                <span class="string">"Cache-Control"</span>: <span class="string">"max-age=0"</span>,</span><br><span class="line">                <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"</span>,</span><br><span class="line">                <span class="string">"Accept-Language"</span>: <span class="string">"zh-CN,zh;q=0.9"</span>,</span><br><span class="line">                <span class="string">"Cookie"</span>: <span class="string">"uuid_tt_dd=10_20081384450-1562761655235-270500; dc_session_id=10_1562761655235.392566; Hm_ct_6bcd52f51e9b3dce32bec4a3997715ac=6525*1*10_20081384450-1562761655235-270500!5744*1*C18854805113; UN=C18854805113; CloudGuest=byxGt8dE3RvtEz2oPwFIN4d4NHuINtlXX10tuXLr2GyDEpsCK1BxLZ2T24YccocFl1aaJBYAOU+YxwgYrhUxj7BWKkZ7xHbKk3cKQU29eTp9QBpeIexgr+IVxVyj5I935zh1Mq7P13M4qsqkTE4E0ChiJQLJLp+4v432tREU6bE0dSg8OBX1hmHwrRPVEVtX; notice=1; acw_tc=2760827d15703636379943603eb1140aca8f4c03908da444421deef8f21d76; SESSION=ebfdd772-5267-4070-865b-2632f63ec881; UserName=C18854805113; UserInfo=2c09ed524322460daf346529b7c4e00b; UserToken=2c09ed524322460daf346529b7c4e00b; UserNick=raptor.; AU=3C8; BT=1571232517453; p_uid=U000000; Hm_lvt_6bcd52f51e9b3dce32bec4a3997715ac=1570363692,1570364978,1571231774,1571232698; acw_sc__v2=5da720c72c274258c05e864dd1026b954a230e72; Hm_lvt_c072e0d113e6b5841848d39d71a2c580=1571234374; Hm_lpvt_c072e0d113e6b5841848d39d71a2c580=1571234374; Hm_ct_c072e0d113e6b5841848d39d71a2c580=5744*1*C18854805113!6525*1*10_20081384450-1562761655235-270500; dc_tos=pzh0ry; Hm_lpvt_6bcd52f51e9b3dce32bec4a3997715ac=1571235119"</span></span><br><span class="line">            }</span><br><span class="line">            proxy = random.choice(self.proxy)</span><br><span class="line">            httpproxy_handler = urllib2.ProxyHandler({<span class="string">"http"</span>: proxy})</span><br><span class="line">            opener = urllib2.build_opener(httpproxy_handler)</span><br><span class="line">            urllib2.install_opener(opener)</span><br><span class="line">            request = urllib2.Request(referer, headers=headers)</span><br><span class="line">            user_agent = random.choice(self.USER_AGENTS)</span><br><span class="line">            request.add_header(<span class="string">"User-Agent"</span>, user_agent)</span><br><span class="line">            response = urllib2.urlopen(request)</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            print(response.url + <span class="string">"  proxy: "</span> + str(proxy) + <span class="string">"   success"</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#print(num)</span></span><br><span class="line">            <span class="keyword">if</span> num &gt; <span class="number">50</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        self.get_proxy()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># CsdnSpider().show()</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            CsdnSpider().get_proxy()</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></tbody></table></figure></div><p>单个程序刷起来较慢，可以多开，（/滑稽）</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python学习 </tag>
            
            <tag> 爬虫基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="2019/11/01/test/"/>
      <url>2019/11/01/test/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p><strong>——&gt;&gt;python小白一枚，仅限于了解基础语法，经过多天的学习，结果令人欣慰，可以正确的输出”Hello world！！”。</strong></p><h2 id="现已经失效，仅在更新前有效。"><a href="#现已经失效，仅在更新前有效。" class="headerlink" title="现已经失效，仅在更新前有效。"></a><strong><font color="red">现已经失效，仅在更新前有效。</font></strong></h2><p>在学习爬虫之余，突发奇想，博客不也可以用爬虫模拟访问吗，于是乎（/滑稽/滑稽）</p><p>综合各个大佬的方式之后，终于可以缓慢的刷取</p><p>简单说下思路，1，只用一个ip无限的访问肯定是不行的，所以要用代理；2，为了避免出现无限次访问同一篇文章，先获取一下所有文章的url，保存后，随机访问。而且在主页文章之间来回切换访问，还有就是间接性的，访问之后暂停几秒，伪装一下是人为点击。</p><h2 id="step1-获取文章的url"><a href="#step1-获取文章的url" class="headerlink" title="step1 获取文章的url"></a>step1 获取文章的url</h2><p>分析csdn的目录结构可以发现其特点，<a href="https://blog.csdn.net/C18854805113/article/list/2?" target="_blank" rel="noopener">https://blog.csdn.net/C18854805113/article/list/2? </a><br><a href="https://img-blog.csdnimg.cn/20191016221327906.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191016221327906.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload"></a><br>利用xpath获取文章的url地址，爬取地址后保存在文件中即可。<br><a href="https://img-blog.csdnimg.cn/20191016221354324.png" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20191016221354324.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload"></a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">headers = {</span><br><span class="line">    <span class="string">"user-agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36"</span></span><br><span class="line">,</span><br><span class="line">    <span class="string">"referer"</span>: <span class="string">"https://blog.csdn.net/C18854805113/article/list/11?"</span></span><br><span class="line">}</span><br><span class="line">url = <span class="string">"https://blog.csdn.net/C18854805113/article/list/{}?"</span></span><br><span class="line">url_list = [url.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">12</span>)]</span><br><span class="line"><span class="comment"># print(url_list)</span></span><br><span class="line">all_list = []</span><br><span class="line"><span class="keyword">for</span> url <span class="keyword">in</span> url_list:</span><br><span class="line">    response = requests.get(url, headers=headers)</span><br><span class="line">    html_str = response.content.decode()</span><br><span class="line">    html = etree.HTML(html_str)</span><br><span class="line">    content_url_list = html.xpath(<span class="string">"//*[@id='mainBox']/main/div[2]/div/h4/a/@href"</span>)</span><br><span class="line">    <span class="comment"># print(content_url_list)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> content_url_list[<span class="number">1</span>:]:</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"url_list.txt"</span>, <span class="string">"a"</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(i)</span><br><span class="line">            f.write(<span class="string">"\n"</span>)</span><br><span class="line">    f.close()</span><br><span class="line">f = open(<span class="string">"url_list.txt"</span>, <span class="string">"r"</span>)   <span class="comment">#设置文件对象</span></span><br><span class="line">line = f.readline()</span><br><span class="line">line = line[:<span class="number">-1</span>]</span><br><span class="line">data = []</span><br><span class="line"><span class="keyword">while</span> line:             <span class="comment">#直到读取完文件</span></span><br><span class="line">    line = f.readline()  <span class="comment">#读取一行文件，包括换行符</span></span><br><span class="line">    line = line[:<span class="number">-1</span>]     <span class="comment">#去掉换行符，也可以不去</span></span><br><span class="line">    data.append(line)</span><br><span class="line">f.close() <span class="comment">#关闭文件</span></span><br><span class="line">print(data)</span><br></pre></td></tr></tbody></table></figure></div><h2 id="step2-通过代理ip访问"><a href="#step2-通过代理ip访问" class="headerlink" title="step2 通过代理ip访问"></a>step2 通过代理ip访问</h2><p>国内高速代理 <a href="https://www.kuaidaili.com/free/" target="_blank" rel="noopener">https://www.kuaidaili.com/free/</a><br>通过ip伪装加上随机访问，header随机选取，模拟手点。在代理的页数靠后时，便返回第一页。</p><p>不知是什么原因，在程序运行超一定时间后，总是莫名的停止。此为业余学习，当时在进行大数据课程的实训，未进行深究。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> urllib2</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url</span><span class="params">()</span>:</span></span><br><span class="line">    f = open(<span class="string">"url_list.txt"</span>, <span class="string">"r"</span>)   <span class="comment">#设置文件对象</span></span><br><span class="line">    line = f.readline()</span><br><span class="line">    line = line[:<span class="number">-1</span>]</span><br><span class="line">    data = []</span><br><span class="line">    <span class="keyword">while</span> line:             <span class="comment">#直到读取完文件</span></span><br><span class="line">        line = f.readline()  <span class="comment">#读取一行文件，包括换行符</span></span><br><span class="line">        line = line[:<span class="number">-1</span>]     <span class="comment">#去掉换行符，也可以不去</span></span><br><span class="line">        data.append(line)</span><br><span class="line"></span><br><span class="line">    data = data[:<span class="number">-1</span>]</span><br><span class="line">    f.close() <span class="comment">#关闭文件</span></span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CsdnSpider</span><span class="params">()</span>:</span></span><br><span class="line">    USER_AGENTS = [</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,</span><br><span class="line">        <span class="string">'Opera/8.0 (Windows NT 5.1; U; en)'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50'</span>,</span><br><span class="line">        <span class="string">'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 Safari/534.16'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 SE 2.X MetaSr 1.0'</span>,</span><br><span class="line">        <span class="string">'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)'</span>,</span><br><span class="line">        <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36'</span></span><br><span class="line"></span><br><span class="line">    ]</span><br><span class="line">    <span class="comment"># url_list = [</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/94392168",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/category/8519763",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/94036536",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/71799137",</span></span><br><span class="line">    <span class="comment">#     "https://blog.csdn.net/C18854805113/article/details/71799246"</span></span><br><span class="line">    <span class="comment"># ]</span></span><br><span class="line">    url_list = get_url()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.url_list)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.page = <span class="number">0</span></span><br><span class="line">        self.proxy = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_proxy</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.page += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.page &gt; <span class="number">100</span>:</span><br><span class="line">            self.page = <span class="number">1</span></span><br><span class="line">        headers = {</span><br><span class="line">            <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11"</span>}</span><br><span class="line">        request = urllib2.Request(<span class="string">"https://www.kuaidaili.com/free/inha/"</span> + str(self.page), headers=headers)</span><br><span class="line">        html = urllib2.urlopen(request).read()</span><br><span class="line">        <span class="comment"># print(html)</span></span><br><span class="line">        content = etree.HTML(html)</span><br><span class="line">        <span class="comment">#拼接ip和端口</span></span><br><span class="line">        ip = content.xpath(<span class="string">'//td[@data-title="IP"]/text()'</span>)</span><br><span class="line">        port = content.xpath(<span class="string">'//td[@data-title="PORT"]/text()'</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ip)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(port)):</span><br><span class="line">                <span class="keyword">if</span> i == j:</span><br><span class="line">                    <span class="keyword">if</span> ip[i] + <span class="string">':'</span> + port[j] <span class="keyword">not</span> <span class="keyword">in</span> self.proxy:</span><br><span class="line">                        self.proxy.append(ip[i] + <span class="string">':'</span> + port[j])</span><br><span class="line">        <span class="keyword">if</span> self.proxy:</span><br><span class="line">            <span class="comment"># print(self.proxy)</span></span><br><span class="line">            print(self.page)</span><br><span class="line">            self.spider()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 计数</span></span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># 随机url</span></span><br><span class="line">            referer = random.choice(self.url_list)</span><br><span class="line">            headers = {</span><br><span class="line">                <span class="string">"Connection"</span>: <span class="string">"keep-alive"</span>,</span><br><span class="line">                <span class="string">"Cache-Control"</span>: <span class="string">"max-age=0"</span>,</span><br><span class="line">                <span class="string">"Upgrade-Insecure-Requests"</span>: <span class="string">"1"</span>,</span><br><span class="line">                <span class="string">"Accept"</span>: <span class="string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8"</span>,</span><br><span class="line">                <span class="string">"Accept-Language"</span>: <span class="string">"zh-CN,zh;q=0.9"</span>,</span><br><span class="line">                <span class="string">"Cookie"</span>: <span class="string">"uuid_tt_dd=10_20081384450-1562761655235-270500; dc_session_id=10_1562761655235.392566; Hm_ct_6bcd52f51e9b3dce32bec4a3997715ac=6525*1*10_20081384450-1562761655235-270500!5744*1*C18854805113; UN=C18854805113; CloudGuest=byxGt8dE3RvtEz2oPwFIN4d4NHuINtlXX10tuXLr2GyDEpsCK1BxLZ2T24YccocFl1aaJBYAOU+YxwgYrhUxj7BWKkZ7xHbKk3cKQU29eTp9QBpeIexgr+IVxVyj5I935zh1Mq7P13M4qsqkTE4E0ChiJQLJLp+4v432tREU6bE0dSg8OBX1hmHwrRPVEVtX; notice=1; acw_tc=2760827d15703636379943603eb1140aca8f4c03908da444421deef8f21d76; SESSION=ebfdd772-5267-4070-865b-2632f63ec881; UserName=C18854805113; UserInfo=2c09ed524322460daf346529b7c4e00b; UserToken=2c09ed524322460daf346529b7c4e00b; UserNick=raptor.; AU=3C8; BT=1571232517453; p_uid=U000000; Hm_lvt_6bcd52f51e9b3dce32bec4a3997715ac=1570363692,1570364978,1571231774,1571232698; acw_sc__v2=5da720c72c274258c05e864dd1026b954a230e72; Hm_lvt_c072e0d113e6b5841848d39d71a2c580=1571234374; Hm_lpvt_c072e0d113e6b5841848d39d71a2c580=1571234374; Hm_ct_c072e0d113e6b5841848d39d71a2c580=5744*1*C18854805113!6525*1*10_20081384450-1562761655235-270500; dc_tos=pzh0ry; Hm_lpvt_6bcd52f51e9b3dce32bec4a3997715ac=1571235119"</span></span><br><span class="line">            }</span><br><span class="line">            proxy = random.choice(self.proxy)</span><br><span class="line">            httpproxy_handler = urllib2.ProxyHandler({<span class="string">"http"</span>: proxy})</span><br><span class="line">            opener = urllib2.build_opener(httpproxy_handler)</span><br><span class="line">            urllib2.install_opener(opener)</span><br><span class="line">            request = urllib2.Request(referer, headers=headers)</span><br><span class="line">            user_agent = random.choice(self.USER_AGENTS)</span><br><span class="line">            request.add_header(<span class="string">"User-Agent"</span>, user_agent)</span><br><span class="line">            response = urllib2.urlopen(request)</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            print(response.url + <span class="string">"  proxy: "</span> + str(proxy) + <span class="string">"   success"</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#print(num)</span></span><br><span class="line">            <span class="keyword">if</span> num &gt; <span class="number">50</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        self.get_proxy()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># CsdnSpider().show()</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            CsdnSpider().get_proxy()</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></tbody></table></figure></div><p>单个程序刷起来较慢，可以多开，（/滑稽）</p></body></html>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python学习 </tag>
            
            <tag> 爬虫基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取爱奇艺vip电影【Python学习】</title>
      <link href="2019/07/03/%E7%88%AC%E5%8F%96%E7%88%B1%E5%A5%87%E8%89%BAvip%E7%94%B5%E5%BD%B1%E3%80%90Python%E5%AD%A6%E4%B9%A0%E3%80%91/"/>
      <url>2019/07/03/%E7%88%AC%E5%8F%96%E7%88%B1%E5%A5%87%E8%89%BAvip%E7%94%B5%E5%BD%B1%E3%80%90Python%E5%AD%A6%E4%B9%A0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p><strong>——&gt;&gt;python小白一枚，仅限于了解基础语法，经过多天的学习，结果令人欣慰，可以正确的输出”Hello world！！”。</strong></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre><code>刚刚看完  何以为家 ，人性被体现的淋漓尽致，“生活就像一坨狗屎，比脚上的鞋子还脏”，究竟要经历多上伤痛，才让十二岁的孩子说出这番话！</code></pre><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190704225233626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>曾经在微博上看过一个国外的实验，操场上一群人，主持人说几个条件，大多是家庭条件相关的，比如请过私教吗，父母是否离婚，需要为下一顿饭发愁吗，需要在意学费吗等等，只要你符合你就可以向前走一步，然后你最终的位置就是你的起点，然后开始向体育场里跑，最先进入的便获得胜利。有些人已经快接近终点，大部分人都在中段，而有一些人还在起点，毫无疑问，最终进入的都是那些起点领先的，最后主持人说了啥记不清楚了，只记得一句对白人孩子说得对一句话“若是你们在同一个起点，我保证那些黑人孩子可以完爆你们”，原视频的连接也找不到了。在其下面有一条令人动容的评论，“问完6个问题，我依然还在原地，我努力奔跑，但我还是追不上。顺其自然，静待花开，不是两手一摊的不作为，而是竭尽所能之后的不强求。我只希望在这个世界上我能开心做我喜欢的事”。看完电影里的小男主的生活，让我有重新认识了苦难，我们一点也不配抱怨生活。</p><h2 id="来不及解释了，快上车。"><a href="#来不及解释了，快上车。" class="headerlink" title="来不及解释了，快上车。"></a>来不及解释了，快上车。</h2><p><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190704231707313.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>        想看电影？那么，问题来了，这个电影需要会员啊，有些甚至过分的一批，冲了会员还要六块钱啊。太过分了，就没见过这个过分的，王总不在的这几年，大家都飘了。本着技术无罪的原则，@%#￥/<em>…%&amp;！！！&amp;#</em>@/*…^^//，懂我的意思吧，（滑稽）<br>        <a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190704232335829.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>        网络上的视频和图片其实有点相似之处，那就是都有一个地址，其实我们只需要拿到这个地址，就可以为所欲为了，但是此处抓取的是爱奇艺的播放地址，利用全民解析，就可以去看vip的电影了，咱也不知道人家在这个视频解析是怎么实现的，反正好厉害就对了。我们直接用个现成的。<br>        先分析一下解析的行为，经过抓取发现，再点击解析之后，到获得视频，只做了一个非常明显的操作，<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190704233123290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>那就是在我们想要播放的视频得知前民加了个前缀。或者说我们只是给人家加了个后缀。如何播放的问题解决了，现在只需要拿到视频的播放地址了。当然你要是只想看一部，完全可以手动在爱奇艺上搜索，然后打开。但我们现在在是爬取所有的电影的播放地址。</p><p>在电影的目录页，经分析你会发现，每当你点击下一页时，会有一个videolist，如下图所示<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190704233715729.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>这里面返回的数据就是我们想要的东西了，所以我们现在只需要一页页的遍历，知道不在有电影数据为止，<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190704233825108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190704234014902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>解析之后，我们便得到了电影名称和播放地址，现在只需要保存在数据库中就可以了，在其播放地址钱，加上<a href="http://jx.598110.com/?url=" target="_blank" rel="noopener">http://jx.598110.com/?url=</a>便成功的解决了vip的事情，还可以拿出来造福他人。<br>        其中，在30页左右在向数据库插入的时候，会有一些小错误，有些电影名称里会带有单双引号啥的，这条数据我在数据库里单独处理了一下。python里的SQL语句count竟然返回tuple此类型数据，搞得我一脸懵。小声比比，还是java省事。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2019/7/3 10:35</span></span><br><span class="line"><span class="comment"># @Author  : Knight</span></span><br><span class="line"><span class="comment"># @Site    : </span></span><br><span class="line"><span class="comment"># @File    : Vip_member.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> retrying <span class="keyword">import</span> retry</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mysql.connector <span class="keyword">as</span> mysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vip_memeber</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># 连接</span></span><br><span class="line">        self.db = mysql.connect(user=<span class="string">"root"</span>, password=<span class="string">"sa"</span>, host=<span class="string">"localhost"</span>, database=<span class="string">"iqiyi"</span>, port=<span class="number">3306</span>)</span><br><span class="line">        <span class="comment"># 获得游标</span></span><br><span class="line">        self.cursor = self.db.cursor()</span><br><span class="line">        self.url = <span class="string">"http://pcw-api.iqiyi.com/search/video/videolists?access_play_control_platform=14&amp;channel_id=1&amp;data_type=1&amp;from=pcw_list&amp;is_album_finished=&amp;is_purchase=2&amp;key=&amp;market_release_date_level=&amp;mode=11&amp;pageNum={}&amp;pageSize=48&amp;site=iqiyi&amp;source_type=&amp;three_category_id=&amp;without_qipu=1"</span></span><br><span class="line">        self.headers = {</span><br><span class="line">            <span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36"</span>,</span><br><span class="line">            <span class="string">"Referer"</span>: <span class="string">"http://list.iqiyi.com/www/1/----------0---11-1-1-iqiyi--.html"</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"><span class="meta">    @retry(stop_max_attempt_number=3)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_parse_url</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        response = requests.get(url, headers=self.headers, timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line">    <span class="comment">#检查电影名称是否存在</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checking</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        sql = <span class="string">"select count(1) from vip_member where name = '{}'"</span>.format(name)</span><br><span class="line">        <span class="comment"># print(sql)</span></span><br><span class="line">        self.cursor.execute(sql)</span><br><span class="line">        count = self.cursor.fetchall()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># print(type(count[0]))</span></span><br><span class="line">        <span class="keyword">return</span> count[<span class="number">0</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#保存</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_url</span><span class="params">(self, i)</span>:</span></span><br><span class="line">        <span class="comment"># print(i['name'], i['playUrl'], i['score'])</span></span><br><span class="line">        <span class="comment"># print('description' in i.keys())</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'description'</span> <span class="keyword">in</span> i.keys()) == <span class="literal">False</span>:</span><br><span class="line">            i[<span class="string">'description'</span>] = i[<span class="string">'focus'</span>]</span><br><span class="line">        temp = i[<span class="string">'description'</span>]</span><br><span class="line">        i[<span class="string">'description'</span>] = temp.replace(<span class="string">'\"'</span>, <span class="string">"\'"</span>)</span><br><span class="line">        <span class="comment"># i['secondInfo'].replace('\'', "\"")</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'score'</span> <span class="keyword">in</span> i.keys()) == <span class="literal">False</span>:</span><br><span class="line">            i[<span class="string">'score'</span>] = <span class="number">0</span></span><br><span class="line">        sql1 = <span class="string">'insert into vip_member(name,playUrl,description,score,secondInfo) values("{}","{}", "{}", {}, "{}")'</span>.format(i[<span class="string">'name'</span>], i[<span class="string">'playUrl'</span>], i[<span class="string">'description'</span>], i[<span class="string">'score'</span>], i[<span class="string">'secondInfo'</span>])</span><br><span class="line">        <span class="comment"># print(sql1)</span></span><br><span class="line">        self.cursor.execute(sql1)</span><br><span class="line">        self.db.commit()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">spider</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#遍历所有的页</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">            temp_url = self.url.format(i)</span><br><span class="line">            <span class="comment"># print(temp_url)</span></span><br><span class="line">            response = self._parse_url(temp_url)</span><br><span class="line">            <span class="comment">#得到当前页面是否存在数据</span></span><br><span class="line">            jsontotal = response.json()[<span class="string">'data'</span>][<span class="string">'total'</span>]</span><br><span class="line">            <span class="comment">#若是存在</span></span><br><span class="line">            <span class="keyword">if</span> jsontotal != <span class="number">0</span>:</span><br><span class="line">                print(<span class="string">"正在解析第"</span> + str(i) + <span class="string">"页："</span>)</span><br><span class="line">                <span class="comment">#获取该页的电影信息</span></span><br><span class="line">                jsonobj = response.json()[<span class="string">'data'</span>][<span class="string">'list'</span>]</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> jsonobj:</span><br><span class="line">                    <span class="comment">#检查是否已经爬取，遍历插入</span></span><br><span class="line">                    <span class="keyword">if</span> self.checking(item[<span class="string">'name'</span>]) &gt; <span class="number">0</span>:</span><br><span class="line">                        print(item[<span class="string">'name'</span>], <span class="string">"已经存在"</span>)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        self.save_url(item)</span><br><span class="line">                        print(item[<span class="string">'name'</span>], <span class="string">"保存成功"</span>)</span><br><span class="line">            <span class="comment">#若是不存在，说明已经爬取完成</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">"超出最大页数"</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__mainloop__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment"># print(self.checking("使徒行者"))</span></span><br><span class="line">        self.spider()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    vip_memeber_spider = Vip_memeber()</span><br><span class="line">    vip_memeber_spider.__mainloop__()</span><br><span class="line">    print(<span class="string">"会员部分爬取已完成！！"</span>)</span><br></pre></td></tr></tbody></table></figure></div><p>与此博文的方式是差不多的，<a href="https://blog.csdn.net/c406495762/article/details/71334633" target="_blank" rel="noopener">点我进入</a>，作者将其写成了图形化界面，而此处可以写一个web，只有链接的那种</p><p>由于数据太多，在这里只筛选前十个电影做测试<br><a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190705100637655.png" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a><br>效果图，点击即可播放视频<a href="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190705100940169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MxODg1NDgwNTExMw==,size_16,color_FFFFFF,t_70" src="https://cdn.jsdelivr.net/gh/raptor1998/imghouse/raptor1998_img/loading.gif" class="lazyload" title="在这里插入图片描述"></a></p></body></html>]]></content>
      
      
      <categories>
          
          <category> Python学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python学习 </tag>
            
            <tag> 爬虫基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
